{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport '../styles/ZombieDice.css';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    name: '빨간 주사위',\n    faces: [{\n      image: redBrain,\n      type: 'SHOTGUN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'BRAIN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    name: '노란 주사위',\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'BRAIN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    name: '녹색 주사위',\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// 개선된 3D 스타일 주사위 컴포넌트\nconst EnhancedDice = ({\n  type,\n  isRolling,\n  result,\n  faceIndex\n}) => {\n  _s();\n  var _DICE_FACES$type, _diceFaces$currentFac, _diceFaces$currentFac2;\n  const diceRef = useRef(null);\n  const [currentFace, setCurrentFace] = useState(0);\n  const diceFaces = ((_DICE_FACES$type = DICE_FACES[type]) === null || _DICE_FACES$type === void 0 ? void 0 : _DICE_FACES$type.faces) || [];\n\n  // 주사위 굴리기 애니메이션\n  useEffect(() => {\n    if (isRolling && diceRef.current) {\n      // 빠르게 면을 바꾸는 애니메이션\n      const faceChangeInterval = setInterval(() => {\n        setCurrentFace(prev => (prev + 1) % 6);\n      }, 150); // 0.15초마다 면 변경\n\n      // 3D 회전 애니메이션\n      diceRef.current.style.animation = 'rollDice 2s cubic-bezier(0.17, 0.84, 0.44, 1)';\n      return () => {\n        clearInterval(faceChangeInterval);\n      };\n    } else if (!isRolling && faceIndex !== undefined) {\n      // 굴리기가 끝나면 결과 면으로 설정\n      setCurrentFace(faceIndex);\n      if (diceRef.current) {\n        diceRef.current.style.animation = 'none';\n      }\n    }\n  }, [isRolling, faceIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: diceRef,\n    className: `enhanced-dice ${isRolling ? 'rolling' : ''} ${type.toLowerCase()}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_diceFaces$currentFac = diceFaces[currentFace]) === null || _diceFaces$currentFac === void 0 ? void 0 : _diceFaces$currentFac.image,\n        alt: `${type} 주사위 ${(_diceFaces$currentFac2 = diceFaces[currentFace]) === null || _diceFaces$currentFac2 === void 0 ? void 0 : _diceFaces$currentFac2.type}`,\n        className: \"dice-face-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 애니메이션 영역 (개선된 버전)\n_s(EnhancedDice, \"Zz67TP182CzLFXNp1epWUsg4axA=\");\n_c = EnhancedDice;\nconst DiceAnimationArea = ({\n  selectedDice,\n  isRolling,\n  onAnimationComplete,\n  rolledResults\n}) => {\n  _s2();\n  // 애니메이션 완료 처리\n  useEffect(() => {\n    if (isRolling) {\n      const timer = setTimeout(() => {\n        // 주사위 결과 생성 (이미 결과가 있으면 사용, 없으면 새로 생성)\n        if (!rolledResults && onAnimationComplete) {\n          const results = selectedDice.map(diceType => {\n            // 주사위 타입에 따른 면 정보 가져오기\n            const diceFaces = DICE_FACES[diceType].faces;\n\n            // 랜덤하게 면 선택 (0-5)\n            const faceIndex = Math.floor(Math.random() * 6);\n            const selectedFace = diceFaces[faceIndex];\n            return {\n              type: diceType,\n              result: selectedFace.type,\n              faceIndex: faceIndex\n            };\n          });\n          onAnimationComplete(results);\n        }\n      }, 2500); // 2.5초 후 결과 처리\n\n      return () => clearTimeout(timer);\n    }\n  }, [isRolling, selectedDice, onAnimationComplete, rolledResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"enhanced-dice-animation-area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: selectedDice.map((diceType, index) => {\n        // 결과가 있으면 해당 결과의 faceIndex 사용\n        const resultItem = rolledResults && rolledResults[index];\n        const faceIndex = resultItem ? resultItem.faceIndex : undefined;\n        return /*#__PURE__*/_jsxDEV(EnhancedDice, {\n          type: diceType,\n          isRolling: isRolling,\n          faceIndex: faceIndex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n// 개선된 주사위 풀 상태 컴포넌트\n_s2(DiceAnimationArea, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = DiceAnimationArea;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 색상별 주사위 카운트\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-counts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: redBrain,\n            alt: \"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", redCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: yellowBrain,\n            alt: \"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", yellowCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: greenBrain,\n            alt: \"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", greenCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 결과 표시 컴포넌트 개선\n_c3 = DicePoolStatus;\nconst DiceResult = ({\n  result\n}) => {\n  // 결과에 따른 이미지 가져오기\n  const getFaceImage = () => {\n    var _DICE_FACES$diceType, _DICE_FACES$diceType$;\n    const diceType = result.type;\n    const faceIndex = result.faceIndex || 0;\n    return (_DICE_FACES$diceType = DICE_FACES[diceType]) === null || _DICE_FACES$diceType === void 0 ? void 0 : (_DICE_FACES$diceType$ = _DICE_FACES$diceType.faces[faceIndex]) === null || _DICE_FACES$diceType$ === void 0 ? void 0 : _DICE_FACES$diceType$.image;\n  };\n\n  // 결과에 따른 텍스트\n  const getResultText = () => {\n    if (result.result === 'BRAIN') return '뇌';\n    if (result.result === 'SHOTGUN') return '총';\n    if (result.result === 'FOOTSTEPS') return '발자국';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result ${result.result.toLowerCase()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-type ${result.type.toLowerCase()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getFaceImage(),\n      alt: getResultText(),\n      className: \"dice-result-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-face\",\n      children: getResultText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_c4 = DiceResult;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s3();\n  var _players$currentTurn;\n  // 상태 정의\n  const [dicePool, setDicePool] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [isRolling, setIsRolling] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => {\n    if (!players) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-board\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC810\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(players).map(([id, player]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: parseInt(id) === currentTurn ? 'current-player' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.score || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 주사위 굴리기 요청\n  const handleRoll = () => {\n    console.log('주사위 굴리기 요청');\n\n    // 주사위 굴리기 상태 설정\n    setIsRolling(true);\n    setShowDiceAnimation(true);\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n\n      // 주사위 선택 요청 - 서버에 전송하여 모든 플레이어가 볼 수 있게 함\n      window.socket.emit('gameAction', {\n        action: 'selectDice',\n        roomId,\n        requestRoll: true // 주사위 굴리기도 요청\n      });\n    } else {\n      console.error('소켓 연결이 없습니다!');\n      setIsRolling(false);\n      setShowDiceAnimation(false);\n    }\n  };\n\n  // 주사위 굴리기 결과 처리\n  const handleRollComplete = results => {\n    console.log('주사위 굴리기 완료:', results);\n\n    // 주사위 굴리기 상태 종료 (애니메이션은 잠시 유지)\n    setIsRolling(false);\n\n    // 결과 표시 및 유지를 위해 지연 후 애니메이션 영역 숨김\n    setTimeout(() => {\n      setShowDiceAnimation(false);\n    }, 1000);\n    if (!results || results.length === 0) {\n      return;\n    }\n\n    // 주사위 결과 저장\n    setRolledResults(results);\n\n    // 뇌와 총 개수 집계\n    let brains = currentBrains;\n    let shotguns = currentShotguns;\n    results.forEach(result => {\n      if (result.result === 'BRAIN') {\n        brains++;\n      } else if (result.result === 'SHOTGUN') {\n        shotguns++;\n      }\n    });\n    setCurrentBrains(brains);\n    setCurrentShotguns(shotguns);\n\n    // 게임 액션 서버에 전송\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDiceResult',\n        roomId,\n        results,\n        brains,\n        shotguns\n      });\n    }\n  };\n\n  // 계속 굴리기\n  const handleContinue = () => {\n    console.log('계속 굴리기');\n\n    // 주사위 굴리기 상태 설정\n    handleRoll();\n  };\n\n  // 턴 종료 처리\n  const handleStop = () => {\n    console.log('턴 종료');\n\n    // 총이 3개 이상이면 점수 획득 없음\n    const score = currentShotguns >= 3 ? 0 : currentBrains;\n\n    // 게임 액션 서버에 전송\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'endTurn',\n        roomId,\n        score\n      });\n    }\n\n    // 턴 종료 콜백 호출\n    if (onTurnEnd) {\n      onTurnEnd(score);\n    }\n  };\n\n  // 소켓 이벤트 핸들러\n  const handleDiceSelected = data => {\n    console.log('주사위 선택됨:', data);\n    const {\n      selectedDice: newSelectedDice,\n      dicePool: newDicePool,\n      requestRoll\n    } = data;\n    setSelectedDice(newSelectedDice);\n    setDicePool(newDicePool);\n    if (requestRoll) {\n      // 주사위 굴리기 애니메이션 시작 - 모든 플레이어에게 표시\n      setShowDiceAnimation(true);\n      setIsRolling(true);\n    }\n  };\n  const handleDiceRolling = data => {\n    console.log('주사위 굴리는 중:', data);\n    // 모든 플레이어에게 주사위 굴리기 애니메이션 표시\n    setShowDiceAnimation(true);\n    setIsRolling(true);\n    // 선택된 주사위 정보 업데이트\n    if (data.selectedDice) {\n      setSelectedDice(data.selectedDice);\n    }\n  };\n  const handleRollDiceResult = data => {\n    console.log('주사위 결과 수신:', data);\n\n    // 굴리기 애니메이션 종료\n    setIsRolling(false);\n\n    // 결과 표시를 위해 애니메이션 영역은 잠시 유지\n    setTimeout(() => {\n      setShowDiceAnimation(false);\n    }, 1000);\n    const {\n      results,\n      brains,\n      shotguns\n    } = data;\n    if (results) {\n      setRolledResults(results);\n      setCurrentBrains(brains);\n      setCurrentShotguns(shotguns);\n    }\n  };\n  const handleTurnStarted = data => {\n    console.log('턴 시작됨:', data);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n  };\n  const handleTurnEnded = data => {\n    console.log('턴 종료됨:', data);\n  };\n  const handleGameEnded = data => {\n    console.log('게임 종료됨:', data);\n    setWinner(data.winner);\n  };\n\n  // 소켓 이벤트 리스너 등록\n  useEffect(() => {\n    if (window.socket) {\n      window.socket.on('diceSelected', handleDiceSelected);\n      window.socket.on('diceRolling', handleDiceRolling);\n      window.socket.on('rollDiceResult', handleRollDiceResult);\n      window.socket.on('turnStarted', handleTurnStarted);\n      window.socket.on('turnEnded', handleTurnEnded);\n      window.socket.on('gameEnded', handleGameEnded);\n      return () => {\n        window.socket.off('turnStarted', handleTurnStarted);\n        window.socket.off('diceSelected', handleDiceSelected);\n        window.socket.off('rollDiceResult', handleRollDiceResult);\n        window.socket.off('turnEnded', handleTurnEnded);\n        window.socket.off('gameEnded', handleGameEnded);\n        window.socket.off('diceRolling', handleDiceRolling);\n      };\n    }\n  }, [onTurnEnd, isMyTurn, isRolling]);\n\n  // 게임 초기화\n  useEffect(() => {\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n\n      // 게임 상태 요청\n      window.socket.emit('getGameState', {\n        roomId\n      });\n      window.socket.on('gameState', gameState => {\n        if (gameState) {\n          setDicePool(gameState.dicePool || []);\n          setGameStarted(true);\n          if (gameState.currentPlayer) {\n            setCurrentBrains(gameState.currentPlayer.brains || 0);\n            setCurrentShotguns(gameState.currentPlayer.shotguns || 0);\n          }\n        }\n      });\n      return () => {\n        window.socket.off('gameState');\n      };\n    }\n  }, []);\n\n  // 메인 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-turn-indicator\",\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }, this), showDiceAnimation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            onAnimationComplete: handleRollComplete,\n            rolledResults: !isRolling ? rolledResults : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-area mb-3\",\n          children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }, this) : rolledResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rolled-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-results-container\",\n              children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n                result: result\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            onClick: handleRoll,\n            disabled: isRolling,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_players$currentTurn = players[currentTurn]) === null || _players$currentTurn === void 0 ? void 0 : _players$currentTurn.nickname, \"\\uB2D8\\uC774 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }, this), showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            onAnimationComplete: null // 관전자는 결과 처리하지 않음\n            ,\n            rolledResults: !isRolling ? rolledResults : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 17\n        }, this), rolledResults.length > 0 && !isRolling && !showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n              result: result\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n}\n_s3(ZombieDice, \"tukl738D4yGVk9o7lU/qNRx5mUg=\");\n_c5 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"EnhancedDice\");\n$RefreshReg$(_c2, \"DiceAnimationArea\");\n$RefreshReg$(_c3, \"DicePoolStatus\");\n$RefreshReg$(_c4, \"DiceResult\");\n$RefreshReg$(_c5, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","name","faces","image","type","YELLOW","GREEN","EnhancedDice","isRolling","result","faceIndex","_s","_DICE_FACES$type","_diceFaces$currentFac","_diceFaces$currentFac2","diceRef","currentFace","setCurrentFace","diceFaces","current","faceChangeInterval","setInterval","prev","style","animation","clearInterval","undefined","ref","className","toLowerCase","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","DiceAnimationArea","selectedDice","onAnimationComplete","rolledResults","_s2","timer","setTimeout","results","map","diceType","Math","floor","random","selectedFace","clearTimeout","index","resultItem","_c2","DicePoolStatus","dicePool","redCount","filter","dice","length","yellowCount","greenCount","_c3","DiceResult","getFaceImage","_DICE_FACES$diceType","_DICE_FACES$diceType$","getResultText","_c4","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s3","_players$currentTurn","setDicePool","setSelectedDice","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setIsRolling","winner","setWinner","gameStarted","setGameStarted","showDiceAnimation","setShowDiceAnimation","renderScoreBoard","Object","entries","id","player","parseInt","nickname","score","handleRoll","console","log","window","socket","roomId","location","pathname","split","emit","action","requestRoll","error","handleRollComplete","brains","shotguns","forEach","handleContinue","handleStop","handleDiceSelected","data","newSelectedDice","newDicePool","handleDiceRolling","handleRollDiceResult","handleTurnStarted","handleTurnEnded","handleGameEnded","on","off","gameState","currentPlayer","onClick","disabled","_c5","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport '../styles/ZombieDice.css';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    name: '빨간 주사위',\r\n    faces: [\r\n      { image: redBrain, type: 'SHOTGUN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: redShotgun, type: 'BRAIN' },   // 4면\r\n      { image: redShotgun, type: 'FOOTSTEPS' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    name: '노란 주사위',\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: yellowShotgun, type: 'FOOTSTEPS' },  // 5면\r\n      { image: yellowShotgun, type: 'BRAIN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    name: '녹색 주사위',\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 개선된 3D 스타일 주사위 컴포넌트\r\nconst EnhancedDice = ({ type, isRolling, result, faceIndex }) => {\r\n  const diceRef = useRef(null);\r\n  const [currentFace, setCurrentFace] = useState(0);\r\n  const diceFaces = DICE_FACES[type]?.faces || [];\r\n  \r\n  // 주사위 굴리기 애니메이션\r\n  useEffect(() => {\r\n    if (isRolling && diceRef.current) {\r\n      // 빠르게 면을 바꾸는 애니메이션\r\n      const faceChangeInterval = setInterval(() => {\r\n        setCurrentFace(prev => (prev + 1) % 6);\r\n      }, 150); // 0.15초마다 면 변경\r\n      \r\n      // 3D 회전 애니메이션\r\n      diceRef.current.style.animation = 'rollDice 2s cubic-bezier(0.17, 0.84, 0.44, 1)';\r\n      \r\n      return () => {\r\n        clearInterval(faceChangeInterval);\r\n      };\r\n    } else if (!isRolling && faceIndex !== undefined) {\r\n      // 굴리기가 끝나면 결과 면으로 설정\r\n      setCurrentFace(faceIndex);\r\n      if (diceRef.current) {\r\n        diceRef.current.style.animation = 'none';\r\n      }\r\n    }\r\n  }, [isRolling, faceIndex]);\r\n  \r\n  return (\r\n    <div \r\n      ref={diceRef}\r\n      className={`enhanced-dice ${isRolling ? 'rolling' : ''} ${type.toLowerCase()}`}\r\n    >\r\n      <div className=\"dice-inner\">\r\n        {/* 주사위 면 이미지 */}\r\n        <img \r\n          src={diceFaces[currentFace]?.image} \r\n          alt={`${type} 주사위 ${diceFaces[currentFace]?.type}`}\r\n          className=\"dice-face-image\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 애니메이션 영역 (개선된 버전)\r\nconst DiceAnimationArea = ({ selectedDice, isRolling, onAnimationComplete, rolledResults }) => {\r\n  // 애니메이션 완료 처리\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      const timer = setTimeout(() => {\r\n        // 주사위 결과 생성 (이미 결과가 있으면 사용, 없으면 새로 생성)\r\n        if (!rolledResults && onAnimationComplete) {\r\n          const results = selectedDice.map(diceType => {\r\n            // 주사위 타입에 따른 면 정보 가져오기\r\n            const diceFaces = DICE_FACES[diceType].faces;\r\n            \r\n            // 랜덤하게 면 선택 (0-5)\r\n            const faceIndex = Math.floor(Math.random() * 6);\r\n            const selectedFace = diceFaces[faceIndex];\r\n            \r\n            return {\r\n              type: diceType,\r\n              result: selectedFace.type,\r\n              faceIndex: faceIndex\r\n            };\r\n          });\r\n          \r\n          onAnimationComplete(results);\r\n        }\r\n      }, 2500); // 2.5초 후 결과 처리\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isRolling, selectedDice, onAnimationComplete, rolledResults]);\r\n  \r\n  return (\r\n    <div className=\"enhanced-dice-animation-area\">\r\n      <div className=\"dice-container\">\r\n        {selectedDice.map((diceType, index) => {\r\n          // 결과가 있으면 해당 결과의 faceIndex 사용\r\n          const resultItem = rolledResults && rolledResults[index];\r\n          const faceIndex = resultItem ? resultItem.faceIndex : undefined;\r\n          \r\n          return (\r\n            <EnhancedDice \r\n              key={index}\r\n              type={diceType}\r\n              isRolling={isRolling}\r\n              faceIndex={faceIndex}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 개선된 주사위 풀 상태 컴포넌트\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 색상별 주사위 카운트\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status\">\r\n      <h4>남은 주사위</h4>\r\n      <div className=\"dice-counts\">\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={redBrain} alt=\"빨간 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>빨간 주사위: {redCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={yellowBrain} alt=\"노란 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>노란 주사위: {yellowCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={greenBrain} alt=\"녹색 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>녹색 주사위: {greenCount}개</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 결과 표시 컴포넌트 개선\r\nconst DiceResult = ({ result }) => {\r\n  // 결과에 따른 이미지 가져오기\r\n  const getFaceImage = () => {\r\n    const diceType = result.type;\r\n    const faceIndex = result.faceIndex || 0;\r\n    return DICE_FACES[diceType]?.faces[faceIndex]?.image;\r\n  };\r\n  \r\n  // 결과에 따른 텍스트\r\n  const getResultText = () => {\r\n    if (result.result === 'BRAIN') return '뇌';\r\n    if (result.result === 'SHOTGUN') return '총';\r\n    if (result.result === 'FOOTSTEPS') return '발자국';\r\n    return '';\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result ${result.result.toLowerCase()}`}>\r\n      <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n      <img src={getFaceImage()} alt={getResultText()} className=\"dice-result-image\" />\r\n      <div className=\"dice-face\">{getResultText()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  // 상태 정의\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\r\n  \r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => {\r\n    if (!players) return null;\r\n    \r\n    return (\r\n      <div className=\"score-board\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>플레이어</th>\r\n              <th>점수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(players).map(([id, player]) => (\r\n              <tr \r\n                key={id} \r\n                className={parseInt(id) === currentTurn ? 'current-player' : ''}\r\n              >\r\n                <td>{player.nickname}</td>\r\n                <td>{player.score || 0}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 주사위 굴리기 요청\r\n  const handleRoll = () => {\r\n    console.log('주사위 굴리기 요청');\r\n    \r\n    // 주사위 굴리기 상태 설정\r\n    setIsRolling(true);\r\n    setShowDiceAnimation(true);\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      // 주사위 선택 요청 - 서버에 전송하여 모든 플레이어가 볼 수 있게 함\r\n      window.socket.emit('gameAction', {\r\n        action: 'selectDice',\r\n        roomId,\r\n        requestRoll: true // 주사위 굴리기도 요청\r\n      });\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n      setIsRolling(false);\r\n      setShowDiceAnimation(false);\r\n    }\r\n  };\r\n  \r\n  // 주사위 굴리기 결과 처리\r\n  const handleRollComplete = (results) => {\r\n    console.log('주사위 굴리기 완료:', results);\r\n    \r\n    // 주사위 굴리기 상태 종료 (애니메이션은 잠시 유지)\r\n    setIsRolling(false);\r\n    \r\n    // 결과 표시 및 유지를 위해 지연 후 애니메이션 영역 숨김\r\n    setTimeout(() => {\r\n      setShowDiceAnimation(false);\r\n    }, 1000);\r\n    \r\n    if (!results || results.length === 0) {\r\n      return;\r\n    }\r\n    \r\n    // 주사위 결과 저장\r\n    setRolledResults(results);\r\n    \r\n    // 뇌와 총 개수 집계\r\n    let brains = currentBrains;\r\n    let shotguns = currentShotguns;\r\n    \r\n    results.forEach(result => {\r\n      if (result.result === 'BRAIN') {\r\n        brains++;\r\n      } else if (result.result === 'SHOTGUN') {\r\n        shotguns++;\r\n      }\r\n    });\r\n    \r\n    setCurrentBrains(brains);\r\n    setCurrentShotguns(shotguns);\r\n    \r\n    // 게임 액션 서버에 전송\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDiceResult',\r\n        roomId,\r\n        results,\r\n        brains,\r\n        shotguns\r\n      });\r\n    }\r\n  };\r\n  \r\n  // 계속 굴리기\r\n  const handleContinue = () => {\r\n    console.log('계속 굴리기');\r\n    \r\n    // 주사위 굴리기 상태 설정\r\n    handleRoll();\r\n  };\r\n  \r\n  // 턴 종료 처리\r\n  const handleStop = () => {\r\n    console.log('턴 종료');\r\n    \r\n    // 총이 3개 이상이면 점수 획득 없음\r\n    const score = currentShotguns >= 3 ? 0 : currentBrains;\r\n    \r\n    // 게임 액션 서버에 전송\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'endTurn',\r\n        roomId,\r\n        score\r\n      });\r\n    }\r\n    \r\n    // 턴 종료 콜백 호출\r\n    if (onTurnEnd) {\r\n      onTurnEnd(score);\r\n    }\r\n  };\r\n  \r\n  // 소켓 이벤트 핸들러\r\n  const handleDiceSelected = (data) => {\r\n    console.log('주사위 선택됨:', data);\r\n    const { selectedDice: newSelectedDice, dicePool: newDicePool, requestRoll } = data;\r\n    \r\n    setSelectedDice(newSelectedDice);\r\n    setDicePool(newDicePool);\r\n    \r\n    if (requestRoll) {\r\n      // 주사위 굴리기 애니메이션 시작 - 모든 플레이어에게 표시\r\n      setShowDiceAnimation(true);\r\n      setIsRolling(true);\r\n    }\r\n  };\r\n  \r\n  const handleDiceRolling = (data) => {\r\n    console.log('주사위 굴리는 중:', data);\r\n    // 모든 플레이어에게 주사위 굴리기 애니메이션 표시\r\n    setShowDiceAnimation(true);\r\n    setIsRolling(true);\r\n    // 선택된 주사위 정보 업데이트\r\n    if (data.selectedDice) {\r\n      setSelectedDice(data.selectedDice);\r\n    }\r\n  };\r\n  \r\n  const handleRollDiceResult = (data) => {\r\n    console.log('주사위 결과 수신:', data);\r\n    \r\n    // 굴리기 애니메이션 종료\r\n    setIsRolling(false);\r\n    \r\n    // 결과 표시를 위해 애니메이션 영역은 잠시 유지\r\n    setTimeout(() => {\r\n      setShowDiceAnimation(false);\r\n    }, 1000);\r\n    \r\n    const { results, brains, shotguns } = data;\r\n    \r\n    if (results) {\r\n      setRolledResults(results);\r\n      setCurrentBrains(brains);\r\n      setCurrentShotguns(shotguns);\r\n    }\r\n  };\r\n  \r\n  const handleTurnStarted = (data) => {\r\n    console.log('턴 시작됨:', data);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n  };\r\n  \r\n  const handleTurnEnded = (data) => {\r\n    console.log('턴 종료됨:', data);\r\n  };\r\n  \r\n  const handleGameEnded = (data) => {\r\n    console.log('게임 종료됨:', data);\r\n    setWinner(data.winner);\r\n  };\r\n  \r\n  // 소켓 이벤트 리스너 등록\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      window.socket.on('diceSelected', handleDiceSelected);\r\n      window.socket.on('diceRolling', handleDiceRolling);\r\n      window.socket.on('rollDiceResult', handleRollDiceResult);\r\n      window.socket.on('turnStarted', handleTurnStarted);\r\n      window.socket.on('turnEnded', handleTurnEnded);\r\n      window.socket.on('gameEnded', handleGameEnded);\r\n      \r\n      return () => {\r\n        window.socket.off('turnStarted', handleTurnStarted);\r\n        window.socket.off('diceSelected', handleDiceSelected);\r\n        window.socket.off('rollDiceResult', handleRollDiceResult);\r\n        window.socket.off('turnEnded', handleTurnEnded);\r\n        window.socket.off('gameEnded', handleGameEnded);\r\n        window.socket.off('diceRolling', handleDiceRolling);\r\n      };\r\n    }\r\n  }, [onTurnEnd, isMyTurn, isRolling]);\r\n  \r\n  // 게임 초기화\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      // 게임 상태 요청\r\n      window.socket.emit('getGameState', { roomId });\r\n      \r\n      window.socket.on('gameState', (gameState) => {\r\n        if (gameState) {\r\n          setDicePool(gameState.dicePool || []);\r\n          setGameStarted(true);\r\n          \r\n          if (gameState.currentPlayer) {\r\n            setCurrentBrains(gameState.currentPlayer.brains || 0);\r\n            setCurrentShotguns(gameState.currentPlayer.shotguns || 0);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return () => {\r\n        window.socket.off('gameState');\r\n      };\r\n    }\r\n  }, []);\r\n  \r\n  // 메인 렌더링\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {isMyTurn ? (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation ? (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    onAnimationComplete={handleRollComplete}\r\n                    rolledResults={!isRolling ? rolledResults : null}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"dice-area mb-3\">\r\n                  {isRolling ? (\r\n                    <div className=\"text-center\">\r\n                      <p>주사위 굴리는 중...</p>\r\n                    </div>\r\n                  ) : (\r\n                    rolledResults.length > 0 ? (\r\n                      <div className=\"rolled-results\">\r\n                        <h4>주사위 결과:</h4>\r\n                        <div className=\"dice-results-container\">\r\n                          {rolledResults.map((result, index) => (\r\n                            <DiceResult key={index} result={result} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <button \r\n                        className=\"btn btn-primary btn-lg\"\r\n                        onClick={handleRoll}\r\n                        disabled={isRolling}\r\n                      >\r\n                        주사위 굴리기\r\n                      </button>\r\n                    )\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3>다른 플레이어의 차례입니다.</h3>\r\n                <p>{players[currentTurn]?.nickname}님이 주사위를 굴리고 있습니다...</p>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation && (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    onAnimationComplete={null} // 관전자는 결과 처리하지 않음\r\n                    rolledResults={!isRolling ? rolledResults : null}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {rolledResults.length > 0 && !isRolling && !showDiceAnimation && (\r\n                <div className=\"rolled-results\">\r\n                  <h4>주사위 결과:</h4>\r\n                  <div className=\"dice-results-container\">\r\n                    {rolledResults.map((result, index) => (\r\n                      <DiceResult key={index} result={result} />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}