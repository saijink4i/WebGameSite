{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport '../styles/ZombieDice.css';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    name: '빨간 주사위',\n    faces: [{\n      image: redBrain,\n      type: 'SHOTGUN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'BRAIN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    name: '노란 주사위',\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'BRAIN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    name: '녹색 주사위',\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// 개선된 주사위 컴포넌트 - 애니메이션 완전 재설계\nconst DiceComponent = ({\n  type,\n  isRolling,\n  result,\n  faceIndex\n}) => {\n  _s();\n  var _DICE_FACES$type, _diceFaces$currentFac, _diceFaces, _diceFaces2, _diceFaces3, _diceFaces4, _diceFaces5;\n  const diceRef = useRef(null);\n  const [animationState, setAnimationState] = useState('idle');\n  const [currentFace, setCurrentFace] = useState(0);\n  const diceFaces = ((_DICE_FACES$type = DICE_FACES[type]) === null || _DICE_FACES$type === void 0 ? void 0 : _DICE_FACES$type.faces) || [];\n\n  // 주사위 굴리기 애니메이션 개선\n  useEffect(() => {\n    if (isRolling && diceRef.current) {\n      // 애니메이션 시작\n      setAnimationState('rolling');\n\n      // 면을 랜덤하게 바꾸는 애니메이션\n      const faceChangeInterval = setInterval(() => {\n        setCurrentFace(Math.floor(Math.random() * 6));\n      }, 100); // 0.1초마다 랜덤 면 변경\n\n      // 애니메이션 종료 및 결과 표시 타이머\n      const animationTimer = setTimeout(() => {\n        clearInterval(faceChangeInterval);\n        setAnimationState('landing');\n\n        // 착지 애니메이션 후 결과 확정\n        setTimeout(() => {\n          if (faceIndex !== undefined) {\n            setCurrentFace(faceIndex);\n          }\n          setAnimationState('complete');\n        }, 500); // 착지 시간 0.5초\n      }, 2000); // 총 굴림 시간 2초\n\n      return () => {\n        clearInterval(faceChangeInterval);\n        clearTimeout(animationTimer);\n      };\n    } else if (!isRolling && faceIndex !== undefined) {\n      // 결과가 정해진 경우 즉시 표시\n      setCurrentFace(faceIndex);\n      setAnimationState('complete');\n    }\n  }, [isRolling, faceIndex]);\n\n  // 주사위 색상에 따른 클래스 결정\n  const diceClassNames = `dice-3d ${type.toLowerCase()} ${animationState}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-perspective\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: diceRef,\n      className: diceClassNames,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face front\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces$currentFac = diceFaces[currentFace]) === null || _diceFaces$currentFac === void 0 ? void 0 : _diceFaces$currentFac.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face back\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces = diceFaces[(currentFace + 3) % 6]) === null || _diceFaces === void 0 ? void 0 : _diceFaces.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces2 = diceFaces[(currentFace + 1) % 6]) === null || _diceFaces2 === void 0 ? void 0 : _diceFaces2.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces3 = diceFaces[(currentFace + 4) % 6]) === null || _diceFaces3 === void 0 ? void 0 : _diceFaces3.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face top\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces4 = diceFaces[(currentFace + 2) % 6]) === null || _diceFaces4 === void 0 ? void 0 : _diceFaces4.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_diceFaces5 = diceFaces[(currentFace + 5) % 6]) === null || _diceFaces5 === void 0 ? void 0 : _diceFaces5.image,\n          alt: `주사위 면`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 애니메이션 영역 개선\n_s(DiceComponent, \"gWpSU0CZl+AeyMyL7O5U3zPdkdo=\");\n_c = DiceComponent;\nconst DiceAnimationArea = ({\n  selectedDice,\n  isRolling,\n  serverResults\n}) => {\n  _s2();\n  const [animationCompleted, setAnimationCompleted] = useState(false);\n\n  // 애니메이션 완료 상태 관리\n  useEffect(() => {\n    if (isRolling) {\n      setAnimationCompleted(false);\n    }\n\n    // 애니메이션 완료 타이머\n    if (isRolling && !animationCompleted) {\n      const timer = setTimeout(() => {\n        setAnimationCompleted(true);\n      }, 2500);\n      return () => clearTimeout(timer);\n    }\n  }, [isRolling, animationCompleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-animation-area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-table\",\n      children: selectedDice.map((diceType, index) => {\n        // 서버에서 받은 결과 사용\n        const resultItem = !isRolling && serverResults && serverResults[index];\n        const faceIndex = resultItem ? resultItem.faceIndex : undefined;\n        return /*#__PURE__*/_jsxDEV(DiceComponent, {\n          type: diceType,\n          isRolling: isRolling,\n          faceIndex: faceIndex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n// 개선된 주사위 풀 상태 컴포넌트\n_s2(DiceAnimationArea, \"btfmaSmOR8w69ypMMqd3g1pQ97Q=\");\n_c2 = DiceAnimationArea;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 색상별 주사위 카운트\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-counts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: redBrain,\n            alt: \"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", redCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: yellowBrain,\n            alt: \"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", yellowCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: greenBrain,\n            alt: \"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704\",\n            className: \"dice-sample-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", greenCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 결과 표시 컴포넌트 개선\n_c3 = DicePoolStatus;\nconst DiceResult = ({\n  result\n}) => {\n  // 결과에 따른 이미지 가져오기\n  const getFaceImage = () => {\n    var _DICE_FACES$diceType, _DICE_FACES$diceType$;\n    const diceType = result.type;\n    const faceIndex = result.faceIndex || 0;\n    return (_DICE_FACES$diceType = DICE_FACES[diceType]) === null || _DICE_FACES$diceType === void 0 ? void 0 : (_DICE_FACES$diceType$ = _DICE_FACES$diceType.faces[faceIndex]) === null || _DICE_FACES$diceType$ === void 0 ? void 0 : _DICE_FACES$diceType$.image;\n  };\n\n  // 결과에 따른 텍스트\n  const getResultText = () => {\n    if (result.result === 'BRAIN') return '뇌';\n    if (result.result === 'SHOTGUN') return '총';\n    if (result.result === 'FOOTSTEPS') return '발자국';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result ${result.result.toLowerCase()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-type ${result.type.toLowerCase()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getFaceImage(),\n      alt: getResultText(),\n      className: \"dice-result-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-face\",\n      children: getResultText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_c4 = DiceResult;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s3();\n  var _players$currentTurn;\n  const [scores, setScores] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [dicePool, setDicePool] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\n  const [serverResults, setServerResults] = useState(null); // 서버에서 받은 결과\n\n  // 초기화\n  useEffect(() => {\n    const initialScores = players.map(() => 0);\n    setScores(initialScores);\n\n    // 초기 주사위 풀 설정 (빨강 3개, 노랑 4개, 초록 6개)\n    const initialPool = ['RED', 'RED', 'RED', 'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'];\n    setDicePool(initialPool);\n  }, [players]);\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => {\n    if (!players) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-board\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC810\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(players).map(([id, player]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: parseInt(id) === currentTurn ? 'current-player' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.score || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 주사위 굴리기 처리\n  const handleRoll = () => {\n    if (dicePool.length < 3) {\n      alert('남은 주사위가 부족합니다!');\n      return;\n    }\n\n    // 무작위로 3개 주사위 선택\n    let tempPool = [...dicePool];\n    let selected = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\n      selected.push(tempPool[randomIndex]);\n      tempPool.splice(randomIndex, 1);\n    }\n    setSelectedDice(selected);\n    setDicePool(tempPool);\n    setIsRolling(true);\n    setShowDiceAnimation(true);\n    setRolledResults([]);\n\n    // 서버에 주사위 굴림 요청 (결과는 서버에서 결정)\n    const roomId = window.location.pathname.split('/')[2];\n    window.socket.emit('gameAction', {\n      action: 'rollDice',\n      roomId,\n      selectedDice: selected\n    });\n  };\n\n  // 주사위 결과 처리 (서버에서 받은 결과로 처리)\n  const handleRollComplete = results => {\n    setRolledResults(results);\n    setIsRolling(false);\n    let brains = currentBrains;\n    let shotguns = currentShotguns;\n    results.forEach(result => {\n      if (result.result === 'BRAIN') {\n        brains++;\n      } else if (result.result === 'SHOTGUN') {\n        shotguns++;\n      }\n    });\n    setCurrentBrains(brains);\n    setCurrentShotguns(shotguns);\n\n    // 애니메이션 후 잠시 결과 보여주기\n    setTimeout(() => {\n      setShowDiceAnimation(false);\n    }, 1000);\n  };\n\n  // 계속 굴리기\n  const handleContinue = () => {\n    handleRoll();\n  };\n\n  // 턴 종료\n  const handleStop = () => {\n    // 총이 3개 이상이면 점수를 획득하지 못함\n    const earnedPoints = currentShotguns >= 3 ? 0 : currentBrains;\n\n    // 주사위 풀 재설정\n    const initialPool = ['RED', 'RED', 'RED', 'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'];\n    setDicePool(initialPool);\n\n    // 턴 종료 및 점수 업데이트\n    const roomId = window.location.pathname.split('/')[2];\n    window.socket.emit('gameAction', {\n      action: 'endTurn',\n      roomId,\n      earnedPoints\n    });\n\n    // 상태 초기화\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    setSelectedDice([]);\n    setShowDiceAnimation(false);\n  };\n\n  // 소켓 이벤트 리스너 설정\n  useEffect(() => {\n    if (window.socket) {\n      // 게임 상태 업데이트 이벤트\n      window.socket.on('gameState', data => {\n        if (data.game === 'zombie-dice') {\n          setScores(data.scores);\n\n          // 승자 체크\n          const winnerIndex = data.scores.findIndex(score => score >= WINNING_SCORE);\n          if (winnerIndex !== -1) {\n            setWinner(players[winnerIndex]);\n          }\n\n          // 현재 플레이어의 상태 업데이트\n          if (data.currentBrains !== undefined) {\n            setCurrentBrains(data.currentBrains);\n          }\n          if (data.currentShotguns !== undefined) {\n            setCurrentShotguns(data.currentShotguns);\n          }\n\n          // 주사위 풀 업데이트\n          if (data.dicePool) {\n            setDicePool(data.dicePool);\n          }\n        }\n      });\n\n      // 주사위 굴림 이벤트 - 서버에서 결과 받기\n      window.socket.on('diceRolled', data => {\n        console.log('서버에서 주사위 결과 수신:', data);\n        if (data.results) {\n          // 서버 결과 저장\n          setServerResults(data.results);\n\n          // 애니메이션 후 결과 처리\n          setTimeout(() => {\n            handleRollComplete(data.results);\n          }, 2500); // 애니메이션 시간 후 결과 처리\n        }\n      });\n      return () => {\n        window.socket.off('gameState');\n        window.socket.off('diceRolled');\n      };\n    }\n  }, []);\n\n  // 메인 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-turn-indicator\",\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }, this), showDiceAnimation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            serverResults: !isRolling ? serverResults : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-area mb-3\",\n          children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 21\n          }, this) : rolledResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rolled-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-results-container\",\n              children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n                result: result\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            onClick: handleRoll,\n            disabled: isRolling,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_players$currentTurn = players[currentTurn]) === null || _players$currentTurn === void 0 ? void 0 : _players$currentTurn.nickname, \"\\uB2D8\\uC774 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this), showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            serverResults: !isRolling ? serverResults : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 17\n        }, this), rolledResults.length > 0 && !isRolling && !showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n              result: result\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n}\n_s3(ZombieDice, \"ngFCLEiFstghTprPtgb3VIPn9Sk=\");\n_c5 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DiceComponent\");\n$RefreshReg$(_c2, \"DiceAnimationArea\");\n$RefreshReg$(_c3, \"DicePoolStatus\");\n$RefreshReg$(_c4, \"DiceResult\");\n$RefreshReg$(_c5, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","name","faces","image","type","YELLOW","GREEN","DiceComponent","isRolling","result","faceIndex","_s","_DICE_FACES$type","_diceFaces$currentFac","_diceFaces","_diceFaces2","_diceFaces3","_diceFaces4","_diceFaces5","diceRef","animationState","setAnimationState","currentFace","setCurrentFace","diceFaces","current","faceChangeInterval","setInterval","Math","floor","random","animationTimer","setTimeout","clearInterval","undefined","clearTimeout","diceClassNames","toLowerCase","className","children","ref","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","DiceAnimationArea","selectedDice","serverResults","_s2","animationCompleted","setAnimationCompleted","timer","map","diceType","index","resultItem","_c2","DicePoolStatus","dicePool","redCount","filter","dice","length","yellowCount","greenCount","_c3","DiceResult","getFaceImage","_DICE_FACES$diceType","_DICE_FACES$diceType$","getResultText","_c4","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s3","_players$currentTurn","scores","setScores","winner","setWinner","rolledResults","setRolledResults","setSelectedDice","setIsRolling","setDicePool","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","showDiceAnimation","setShowDiceAnimation","setServerResults","initialScores","initialPool","renderScoreBoard","Object","entries","id","player","parseInt","nickname","score","handleRoll","alert","tempPool","selected","i","randomIndex","push","splice","roomId","window","location","pathname","split","socket","emit","action","handleRollComplete","results","brains","shotguns","forEach","handleContinue","handleStop","earnedPoints","on","data","game","winnerIndex","findIndex","console","log","off","onClick","disabled","_c5","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport '../styles/ZombieDice.css';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    name: '빨간 주사위',\r\n    faces: [\r\n      { image: redBrain, type: 'SHOTGUN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: redShotgun, type: 'BRAIN' },   // 4면\r\n      { image: redShotgun, type: 'FOOTSTEPS' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    name: '노란 주사위',\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: yellowShotgun, type: 'FOOTSTEPS' },  // 5면\r\n      { image: yellowShotgun, type: 'BRAIN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    name: '녹색 주사위',\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 개선된 주사위 컴포넌트 - 애니메이션 완전 재설계\r\nconst DiceComponent = ({ type, isRolling, result, faceIndex }) => {\r\n  const diceRef = useRef(null);\r\n  const [animationState, setAnimationState] = useState('idle');\r\n  const [currentFace, setCurrentFace] = useState(0);\r\n  const diceFaces = DICE_FACES[type]?.faces || [];\r\n\r\n  // 주사위 굴리기 애니메이션 개선\r\n  useEffect(() => {\r\n    if (isRolling && diceRef.current) {\r\n      // 애니메이션 시작\r\n      setAnimationState('rolling');\r\n      \r\n      // 면을 랜덤하게 바꾸는 애니메이션\r\n      const faceChangeInterval = setInterval(() => {\r\n        setCurrentFace(Math.floor(Math.random() * 6));\r\n      }, 100); // 0.1초마다 랜덤 면 변경\r\n      \r\n      // 애니메이션 종료 및 결과 표시 타이머\r\n      const animationTimer = setTimeout(() => {\r\n        clearInterval(faceChangeInterval);\r\n        setAnimationState('landing');\r\n        \r\n        // 착지 애니메이션 후 결과 확정\r\n        setTimeout(() => {\r\n          if (faceIndex !== undefined) {\r\n            setCurrentFace(faceIndex);\r\n          }\r\n          setAnimationState('complete');\r\n        }, 500); // 착지 시간 0.5초\r\n      }, 2000); // 총 굴림 시간 2초\r\n      \r\n      return () => {\r\n        clearInterval(faceChangeInterval);\r\n        clearTimeout(animationTimer);\r\n      };\r\n    } else if (!isRolling && faceIndex !== undefined) {\r\n      // 결과가 정해진 경우 즉시 표시\r\n      setCurrentFace(faceIndex);\r\n      setAnimationState('complete');\r\n    }\r\n  }, [isRolling, faceIndex]);\r\n  \r\n  // 주사위 색상에 따른 클래스 결정\r\n  const diceClassNames = `dice-3d ${type.toLowerCase()} ${animationState}`;\r\n  \r\n  return (\r\n    <div className=\"dice-perspective\">\r\n      <div ref={diceRef} className={diceClassNames}>\r\n        {/* 6면 주사위 구현 - 모든 면에 이미지 배치 */}\r\n        <div className=\"dice-face front\">\r\n          <img src={diceFaces[currentFace]?.image} alt={`주사위 면`} />\r\n        </div>\r\n        <div className=\"dice-face back\">\r\n          <img src={diceFaces[(currentFace + 3) % 6]?.image} alt={`주사위 면`} />\r\n        </div>\r\n        <div className=\"dice-face right\">\r\n          <img src={diceFaces[(currentFace + 1) % 6]?.image} alt={`주사위 면`} />\r\n        </div>\r\n        <div className=\"dice-face left\">\r\n          <img src={diceFaces[(currentFace + 4) % 6]?.image} alt={`주사위 면`} />\r\n        </div>\r\n        <div className=\"dice-face top\">\r\n          <img src={diceFaces[(currentFace + 2) % 6]?.image} alt={`주사위 면`} />\r\n        </div>\r\n        <div className=\"dice-face bottom\">\r\n          <img src={diceFaces[(currentFace + 5) % 6]?.image} alt={`주사위 면`} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 애니메이션 영역 개선\r\nconst DiceAnimationArea = ({ selectedDice, isRolling, serverResults }) => {\r\n  const [animationCompleted, setAnimationCompleted] = useState(false);\r\n  \r\n  // 애니메이션 완료 상태 관리\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      setAnimationCompleted(false);\r\n    }\r\n    \r\n    // 애니메이션 완료 타이머\r\n    if (isRolling && !animationCompleted) {\r\n      const timer = setTimeout(() => {\r\n        setAnimationCompleted(true);\r\n      }, 2500);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isRolling, animationCompleted]);\r\n  \r\n  return (\r\n    <div className=\"dice-animation-area\">\r\n      <div className=\"dice-table\">\r\n        {selectedDice.map((diceType, index) => {\r\n          // 서버에서 받은 결과 사용\r\n          const resultItem = !isRolling && serverResults && serverResults[index];\r\n          const faceIndex = resultItem ? resultItem.faceIndex : undefined;\r\n          \r\n          return (\r\n            <DiceComponent \r\n              key={index}\r\n              type={diceType}\r\n              isRolling={isRolling}\r\n              faceIndex={faceIndex}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 개선된 주사위 풀 상태 컴포넌트\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 색상별 주사위 카운트\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status\">\r\n      <h4>남은 주사위</h4>\r\n      <div className=\"dice-counts\">\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={redBrain} alt=\"빨간 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>빨간 주사위: {redCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={yellowBrain} alt=\"노란 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>노란 주사위: {yellowCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample\">\r\n            <img src={greenBrain} alt=\"녹색 주사위\" className=\"dice-sample-image\" />\r\n          </div>\r\n          <span>녹색 주사위: {greenCount}개</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 결과 표시 컴포넌트 개선\r\nconst DiceResult = ({ result }) => {\r\n  // 결과에 따른 이미지 가져오기\r\n  const getFaceImage = () => {\r\n    const diceType = result.type;\r\n    const faceIndex = result.faceIndex || 0;\r\n    return DICE_FACES[diceType]?.faces[faceIndex]?.image;\r\n  };\r\n  \r\n  // 결과에 따른 텍스트\r\n  const getResultText = () => {\r\n    if (result.result === 'BRAIN') return '뇌';\r\n    if (result.result === 'SHOTGUN') return '총';\r\n    if (result.result === 'FOOTSTEPS') return '발자국';\r\n    return '';\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result ${result.result.toLowerCase()}`}>\r\n      <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n      <img src={getFaceImage()} alt={getResultText()} className=\"dice-result-image\" />\r\n      <div className=\"dice-face\">{getResultText()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  const [scores, setScores] = useState([]);\r\n  const [winner, setWinner] = useState(null);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\r\n  const [serverResults, setServerResults] = useState(null); // 서버에서 받은 결과\r\n\r\n  // 초기화\r\n  useEffect(() => {\r\n    const initialScores = players.map(() => 0);\r\n    setScores(initialScores);\r\n    \r\n    // 초기 주사위 풀 설정 (빨강 3개, 노랑 4개, 초록 6개)\r\n    const initialPool = [\r\n      'RED', 'RED', 'RED',\r\n      'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW',\r\n      'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'\r\n    ];\r\n    setDicePool(initialPool);\r\n  }, [players]);\r\n\r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => {\r\n    if (!players) return null;\r\n    \r\n    return (\r\n      <div className=\"score-board\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>플레이어</th>\r\n              <th>점수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(players).map(([id, player]) => (\r\n              <tr \r\n                key={id} \r\n                className={parseInt(id) === currentTurn ? 'current-player' : ''}\r\n              >\r\n                <td>{player.nickname}</td>\r\n                <td>{player.score || 0}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 주사위 굴리기 처리\r\n  const handleRoll = () => {\r\n    if (dicePool.length < 3) {\r\n      alert('남은 주사위가 부족합니다!');\r\n      return;\r\n    }\r\n    \r\n    // 무작위로 3개 주사위 선택\r\n    let tempPool = [...dicePool];\r\n    let selected = [];\r\n    \r\n    for (let i = 0; i < 3; i++) {\r\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\r\n      selected.push(tempPool[randomIndex]);\r\n      tempPool.splice(randomIndex, 1);\r\n    }\r\n    \r\n    setSelectedDice(selected);\r\n    setDicePool(tempPool);\r\n    setIsRolling(true);\r\n    setShowDiceAnimation(true);\r\n    setRolledResults([]);\r\n    \r\n    // 서버에 주사위 굴림 요청 (결과는 서버에서 결정)\r\n    const roomId = window.location.pathname.split('/')[2];\r\n    window.socket.emit('gameAction', {\r\n      action: 'rollDice',\r\n      roomId,\r\n      selectedDice: selected\r\n    });\r\n  };\r\n\r\n  // 주사위 결과 처리 (서버에서 받은 결과로 처리)\r\n  const handleRollComplete = (results) => {\r\n    setRolledResults(results);\r\n    setIsRolling(false);\r\n    \r\n    let brains = currentBrains;\r\n    let shotguns = currentShotguns;\r\n    \r\n    results.forEach(result => {\r\n      if (result.result === 'BRAIN') {\r\n        brains++;\r\n      } else if (result.result === 'SHOTGUN') {\r\n        shotguns++;\r\n      }\r\n    });\r\n    \r\n    setCurrentBrains(brains);\r\n    setCurrentShotguns(shotguns);\r\n    \r\n    // 애니메이션 후 잠시 결과 보여주기\r\n    setTimeout(() => {\r\n      setShowDiceAnimation(false);\r\n    }, 1000);\r\n  };\r\n\r\n  // 계속 굴리기\r\n  const handleContinue = () => {\r\n    handleRoll();\r\n  };\r\n\r\n  // 턴 종료\r\n  const handleStop = () => {\r\n    // 총이 3개 이상이면 점수를 획득하지 못함\r\n    const earnedPoints = currentShotguns >= 3 ? 0 : currentBrains;\r\n    \r\n    // 주사위 풀 재설정\r\n    const initialPool = [\r\n      'RED', 'RED', 'RED',\r\n      'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW',\r\n      'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'\r\n    ];\r\n    setDicePool(initialPool);\r\n    \r\n    // 턴 종료 및 점수 업데이트\r\n    const roomId = window.location.pathname.split('/')[2];\r\n    window.socket.emit('gameAction', {\r\n      action: 'endTurn',\r\n      roomId,\r\n      earnedPoints\r\n    });\r\n    \r\n    // 상태 초기화\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n    setShowDiceAnimation(false);\r\n  };\r\n\r\n  // 소켓 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      // 게임 상태 업데이트 이벤트\r\n      window.socket.on('gameState', (data) => {\r\n        if (data.game === 'zombie-dice') {\r\n          setScores(data.scores);\r\n          \r\n          // 승자 체크\r\n          const winnerIndex = data.scores.findIndex(score => score >= WINNING_SCORE);\r\n          if (winnerIndex !== -1) {\r\n            setWinner(players[winnerIndex]);\r\n          }\r\n          \r\n          // 현재 플레이어의 상태 업데이트\r\n          if (data.currentBrains !== undefined) {\r\n            setCurrentBrains(data.currentBrains);\r\n          }\r\n          \r\n          if (data.currentShotguns !== undefined) {\r\n            setCurrentShotguns(data.currentShotguns);\r\n          }\r\n          \r\n          // 주사위 풀 업데이트\r\n          if (data.dicePool) {\r\n            setDicePool(data.dicePool);\r\n          }\r\n        }\r\n      });\r\n      \r\n      // 주사위 굴림 이벤트 - 서버에서 결과 받기\r\n      window.socket.on('diceRolled', (data) => {\r\n        console.log('서버에서 주사위 결과 수신:', data);\r\n        if (data.results) {\r\n          // 서버 결과 저장\r\n          setServerResults(data.results);\r\n          \r\n          // 애니메이션 후 결과 처리\r\n          setTimeout(() => {\r\n            handleRollComplete(data.results);\r\n          }, 2500); // 애니메이션 시간 후 결과 처리\r\n        }\r\n      });\r\n      \r\n      return () => {\r\n        window.socket.off('gameState');\r\n        window.socket.off('diceRolled');\r\n      };\r\n    }\r\n  }, []);\r\n  \r\n  // 메인 렌더링\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {isMyTurn ? (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation ? (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    serverResults={!isRolling ? serverResults : null}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"dice-area mb-3\">\r\n                  {isRolling ? (\r\n                    <div className=\"text-center\">\r\n                      <p>주사위 굴리는 중...</p>\r\n                    </div>\r\n                  ) : (\r\n                    rolledResults.length > 0 ? (\r\n                      <div className=\"rolled-results\">\r\n                        <h4>주사위 결과:</h4>\r\n                        <div className=\"dice-results-container\">\r\n                          {rolledResults.map((result, index) => (\r\n                            <DiceResult key={index} result={result} />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <button \r\n                        className=\"btn btn-primary btn-lg\"\r\n                        onClick={handleRoll}\r\n                        disabled={isRolling}\r\n                      >\r\n                        주사위 굴리기\r\n                      </button>\r\n                    )\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3>다른 플레이어의 차례입니다.</h3>\r\n                <p>{players[currentTurn]?.nickname}님이 주사위를 굴리고 있습니다...</p>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation && (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    serverResults={!isRolling ? serverResults : null}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {rolledResults.length > 0 && !isRolling && !showDiceAnimation && (\r\n                <div className=\"rolled-results\">\r\n                  <h4>주사위 결과:</h4>\r\n                  <div className=\"dice-results-container\">\r\n                    {rolledResults.map((result, index) => (\r\n                      <DiceResult key={index} result={result} />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}