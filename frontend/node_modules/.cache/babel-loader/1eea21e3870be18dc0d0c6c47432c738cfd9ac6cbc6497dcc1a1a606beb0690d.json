{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    faces: [{\n      image: redBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// Dice 컴포넌트 추가\nconst Dice = ({\n  type,\n  result,\n  isRolling\n}) => {\n  const getResultImage = () => {\n    if (type === 'RED') {\n      if (result === 'BRAIN') return redBrain;\n      if (result === 'SHOTGUN') return redShotgun;\n      if (result === 'FOOTSTEPS') return redFootsteps;\n    } else if (type === 'YELLOW') {\n      if (result === 'BRAIN') return yellowBrain;\n      if (result === 'SHOTGUN') return yellowShotgun;\n      if (result === 'FOOTSTEPS') return yellowFootsteps;\n    } else if (type === 'GREEN') {\n      if (result === 'BRAIN') return greenBrain;\n      if (result === 'SHOTGUN') return greenShotgun;\n      if (result === 'FOOTSTEPS') return greenFootsteps;\n    }\n    return null;\n  };\n  const getDiceColor = () => {\n    if (type === 'RED') return 'red-dice';\n    if (type === 'YELLOW') return 'yellow-dice';\n    if (type === 'GREEN') return 'green-dice';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice ${getDiceColor()} ${isRolling ? 'rolling' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getResultImage(),\n      alt: `${type} ${result}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = Dice;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s();\n  const [dicePool, setDicePool] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [isRolling, setIsRolling] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const diceContainerRef = useRef(null);\n\n  // 주사위 선택 요청\n  const handleSelectDice = () => {\n    console.log('주사위 선택 요청');\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDice',\n        selectDice: true,\n        roomId\n      });\n    } else {\n      console.error('소켓 연결이 없습니다!');\n    }\n  };\n\n  // 주사위 굴리기 요청\n  const handleRoll = () => {\n    console.log('주사위 굴리기 요청');\n\n    // 선택된 주사위가 없으면 먼저 선택\n    if (!selectedDice || selectedDice.length === 0) {\n      console.log('선택된 주사위 없음, 주사위 선택 요청');\n      handleSelectDice();\n      return;\n    }\n    console.log('선택된 주사위로 굴리기 요청:', selectedDice);\n\n    // 주사위 굴리기 요청\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDice',\n        roomId\n      });\n      setIsRolling(true);\n    } else {\n      console.error('소켓 연결이 없습니다!');\n    }\n  };\n\n  // 턴 종료 요청\n  const handleStop = () => {\n    // 샷건이 3개 이상이면 점수 0으로 처리\n    const finalScore = currentShotguns >= 3 ? 0 : currentBrains;\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('endTurn', {\n        roomId,\n        score: finalScore\n      });\n    } else {\n      console.error('소켓 연결이 없습니다!');\n    }\n\n    // 로컬 콜백 호출\n    onTurnEnd(finalScore);\n  };\n\n  // 계속하기 요청\n  const handleContinue = () => {\n    // 도망간 주사위 찾기\n    const footstepsDice = rolledResults.filter(result => result.result === 'FOOTSTEPS').map(result => result.type);\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('continueTurn', {\n        roomId,\n        footstepsDice\n      });\n\n      // 이전 결과에서 도망이 아닌 주사위만 유지\n      const nonFootstepsResults = rolledResults.filter(result => result.result !== 'FOOTSTEPS');\n      setRolledResults(nonFootstepsResults);\n    } else {\n      console.error('소켓 연결이 없습니다!');\n    }\n  };\n\n  // 소켓 이벤트 리스너\n  useEffect(() => {\n    if (window.socket) {\n      console.log('소켓 이벤트 리스너 등록');\n\n      // 게임 시작 이벤트\n      const handleGameStarted = data => {\n        console.log('게임 시작:', data);\n\n        // 서버에서 받은 게임 상태로 초기화\n        if (data.gameState) {\n          console.log('게임 상태 초기화:', data.gameState);\n\n          // 주사위 풀 초기화\n          if (data.gameState.dicePool) {\n            setDicePool(data.gameState.dicePool);\n          } else {\n            console.warn('주사위 풀이 없습니다. 초기화합니다.');\n            // 주사위 풀 초기화\n            const initialDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n            setDicePool(initialDicePool);\n          }\n          setCurrentBrains(0);\n          setCurrentShotguns(0);\n          setRolledResults([]);\n          setSelectedDice([]);\n          setWinner(null);\n        }\n      };\n\n      // 주사위 선택 이벤트\n      const handleDiceSelected = data => {\n        console.log('주사위 선택됨:', data);\n        setSelectedDice(data.selectedDice || []);\n        setDicePool(data.dicePool || []);\n      };\n\n      // 주사위 굴리기 결과 이벤트\n      const handleGameAction = data => {\n        console.log('게임 액션 수신:', data);\n        if (data.action === 'rollDice') {\n          console.log('주사위 결과 수신:', data.results);\n\n          // 결과 표시\n          setRolledResults(data.results);\n          setIsRolling(true);\n\n          // 주사위 풀 업데이트\n          setDicePool(data.dicePool || []);\n\n          // 애니메이션 후 결과 처리\n          setTimeout(() => {\n            // 내 턴일 때만 결과 처리\n            if (isMyTurn) {\n              // 결과 처리 - 뇌와 샷건 개수 누적\n              let newBrains = currentBrains;\n              let newShotguns = currentShotguns;\n              data.results.forEach(({\n                result\n              }) => {\n                if (result === 'BRAIN') newBrains++;\n                if (result === 'SHOTGUN') newShotguns++;\n              });\n\n              // 상태 업데이트\n              setCurrentBrains(newBrains);\n              setCurrentShotguns(newShotguns);\n\n              // 현재 상태를 서버에 전송\n              window.socket.emit('updateTurnStatus', {\n                roomId: window.location.pathname.split('/')[2],\n                currentBrains: newBrains,\n                currentShotguns: newShotguns\n              });\n            }\n            setIsRolling(false);\n          }, 2500);\n        }\n      };\n\n      // 턴 상태 업데이트 이벤트\n      const handleTurnStatusUpdated = data => {\n        console.log('턴 상태 업데이트:', data);\n\n        // 내 턴이 아닐 때만 상태 업데이트\n        if (!isMyTurn) {\n          setCurrentBrains(data.currentBrains);\n          setCurrentShotguns(data.currentShotguns);\n        }\n\n        // 주사위 풀 업데이트\n        setDicePool(data.dicePool || []);\n      };\n\n      // 게임 상태 업데이트 이벤트\n      const handleGameStateUpdated = gameState => {\n        console.log('게임 상태 업데이트:', gameState);\n\n        // 주사위 풀 업데이트 - 서버 상태로 동기화\n        if (gameState.dicePool) {\n          console.log('주사위 풀 업데이트:', gameState.dicePool);\n          setDicePool(gameState.dicePool);\n        } else {\n          console.warn('주사위 풀이 없습니다. 초기화합니다.');\n          // 주사위 풀 초기화\n          const initialDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n          setDicePool(initialDicePool);\n        }\n\n        // 현재 턴 업데이트\n        if (gameState.currentTurn !== undefined) {\n          // 턴이 변경되었으면 상태 초기화\n          setCurrentBrains(gameState.currentBrains || 0);\n          setCurrentShotguns(gameState.currentShotguns || 0);\n          setRolledResults([]);\n          setSelectedDice([]);\n        }\n      };\n\n      // 게임 종료 이벤트\n      const handleGameEnded = data => {\n        console.log('게임 종료:', data);\n        setWinner(data.winner);\n      };\n\n      // 게임 에러 이벤트\n      const handleGameError = data => {\n        console.error('게임 에러:', data.message);\n\n        // 에러 처리\n        alert(`게임 에러: ${data.message}`);\n      };\n\n      // 이벤트 리스너 등록\n      window.socket.on('gameStarted', handleGameStarted);\n      window.socket.on('diceSelected', handleDiceSelected);\n      window.socket.on('gameAction', handleGameAction);\n      window.socket.on('turnStatusUpdated', handleTurnStatusUpdated);\n      window.socket.on('gameStateUpdated', handleGameStateUpdated);\n      window.socket.on('gameEnded', handleGameEnded);\n      window.socket.on('gameError', handleGameError);\n\n      // 클린업\n      return () => {\n        console.log('소켓 이벤트 리스너 제거');\n        window.socket.off('gameStarted', handleGameStarted);\n        window.socket.off('diceSelected', handleDiceSelected);\n        window.socket.off('gameAction', handleGameAction);\n        window.socket.off('turnStatusUpdated', handleTurnStatusUpdated);\n        window.socket.off('gameStateUpdated', handleGameStateUpdated);\n        window.socket.off('gameEnded', handleGameEnded);\n        window.socket.off('gameError', handleGameError);\n      };\n    }\n  }, [currentBrains, currentShotguns, isMyTurn, onTurnEnd]);\n\n  // 주사위 풀 상태 표시 컴포넌트\n  const DicePoolStatus = ({\n    dicePool\n  }) => {\n    // 주사위 풀이 없으면 초기화\n    const pool = Array.isArray(dicePool) ? dicePool : [];\n\n    // 주사위 색상별 개수 계산\n    const redCount = pool.filter(dice => dice === 'RED').length;\n    const yellowCount = pool.filter(dice => dice === 'YELLOW').length;\n    const greenCount = pool.filter(dice => dice === 'GREEN').length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-status mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-counts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-count red\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-color-indicator red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), \"\\uBE68\\uAC04\\uC0C9: \", redCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-count yellow\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-color-indicator yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), \"\\uB178\\uB780\\uC0C9: \", yellowCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-count green\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-color-indicator green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), \"\\uCD08\\uB85D\\uC0C9: \", greenCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-board mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center mb-3\",\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-${12 / players.length} mb-2`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card ${index === currentTurn ? 'bg-light' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: player.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"\\uC810\\uC218: \", player.score || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 다른 플레이어의 턴일 때 화면\n  if (!isMyTurn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zombie-dice\",\n      children: [renderScoreBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [players[currentTurn].nickname, \"\\uB2D8\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area mb-3\",\n        children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this) : rolledResults.length > 0 && rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(Dice, {\n          type: result.type,\n          result: result.result,\n          isRolling: isRolling\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 내 턴일 때 화면\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"my-turn-indicator\",\n          children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area mb-3\",\n        children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this) : rolledResults.length > 0 ? rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(Dice, {\n          type: result.type,\n          result: result.result,\n          isRolling: isRolling\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleRoll,\n          disabled: isRolling,\n          children: selectedDice.length === 0 ? \"주사위 선택\" : \"주사위 굴리기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), rolledResults.length > 0 && !winner && !isRolling && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n_s(ZombieDice, \"jXHRXhASj26bUfojBERxCWlONeA=\");\n_c2 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dice\");\n$RefreshReg$(_c2, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","THREE","GLTFLoader","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","faces","image","type","YELLOW","GREEN","Dice","result","isRolling","getResultImage","getDiceColor","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s","dicePool","setDicePool","selectedDice","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setIsRolling","winner","setWinner","diceContainerRef","handleSelectDice","console","log","window","socket","roomId","location","pathname","split","emit","action","selectDice","error","handleRoll","length","handleStop","finalScore","score","handleContinue","footstepsDice","filter","map","nonFootstepsResults","handleGameStarted","data","gameState","warn","initialDicePool","Array","fill","handleDiceSelected","handleGameAction","results","setTimeout","newBrains","newShotguns","forEach","handleTurnStatusUpdated","handleGameStateUpdated","undefined","handleGameEnded","handleGameError","message","alert","on","off","DicePoolStatus","pool","isArray","redCount","dice","yellowCount","greenCount","renderScoreBoard","player","index","nickname","onClick","disabled","_c2","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    faces: [\r\n      { image: redBrain, type: 'BRAIN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 3면\r\n      { image: redShotgun, type: 'SHOTGUN' },   // 4면\r\n      { image: redShotgun, type: 'SHOTGUN' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'BRAIN' },     // 2면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }, // 3면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }, // 4면\r\n      { image: yellowShotgun, type: 'SHOTGUN' },  // 5면\r\n      { image: yellowShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'BRAIN' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// Dice 컴포넌트 추가\r\nconst Dice = ({ type, result, isRolling }) => {\r\n  const getResultImage = () => {\r\n    if (type === 'RED') {\r\n      if (result === 'BRAIN') return redBrain;\r\n      if (result === 'SHOTGUN') return redShotgun;\r\n      if (result === 'FOOTSTEPS') return redFootsteps;\r\n    } else if (type === 'YELLOW') {\r\n      if (result === 'BRAIN') return yellowBrain;\r\n      if (result === 'SHOTGUN') return yellowShotgun;\r\n      if (result === 'FOOTSTEPS') return yellowFootsteps;\r\n    } else if (type === 'GREEN') {\r\n      if (result === 'BRAIN') return greenBrain;\r\n      if (result === 'SHOTGUN') return greenShotgun;\r\n      if (result === 'FOOTSTEPS') return greenFootsteps;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getDiceColor = () => {\r\n    if (type === 'RED') return 'red-dice';\r\n    if (type === 'YELLOW') return 'yellow-dice';\r\n    if (type === 'GREEN') return 'green-dice';\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className={`dice ${getDiceColor()} ${isRolling ? 'rolling' : ''}`}>\r\n      <img src={getResultImage()} alt={`${type} ${result}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const diceContainerRef = useRef(null);\r\n\r\n  // 주사위 선택 요청\r\n  const handleSelectDice = () => {\r\n    console.log('주사위 선택 요청');\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDice',\r\n        selectDice: true,\r\n        roomId\r\n      });\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n    }\r\n  };\r\n\r\n  // 주사위 굴리기 요청\r\n  const handleRoll = () => {\r\n    console.log('주사위 굴리기 요청');\r\n    \r\n    // 선택된 주사위가 없으면 먼저 선택\r\n    if (!selectedDice || selectedDice.length === 0) {\r\n      console.log('선택된 주사위 없음, 주사위 선택 요청');\r\n      handleSelectDice();\r\n      return;\r\n    }\r\n    \r\n    console.log('선택된 주사위로 굴리기 요청:', selectedDice);\r\n    \r\n    // 주사위 굴리기 요청\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDice',\r\n        roomId\r\n      });\r\n      \r\n      setIsRolling(true);\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n    }\r\n  };\r\n\r\n  // 턴 종료 요청\r\n  const handleStop = () => {\r\n    // 샷건이 3개 이상이면 점수 0으로 처리\r\n    const finalScore = currentShotguns >= 3 ? 0 : currentBrains;\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      window.socket.emit('endTurn', {\r\n        roomId,\r\n        score: finalScore\r\n      });\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n    }\r\n    \r\n    // 로컬 콜백 호출\r\n    onTurnEnd(finalScore);\r\n  };\r\n\r\n  // 계속하기 요청\r\n  const handleContinue = () => {\r\n    // 도망간 주사위 찾기\r\n    const footstepsDice = rolledResults\r\n      .filter(result => result.result === 'FOOTSTEPS')\r\n      .map(result => result.type);\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      window.socket.emit('continueTurn', {\r\n        roomId,\r\n        footstepsDice\r\n      });\r\n      \r\n      // 이전 결과에서 도망이 아닌 주사위만 유지\r\n      const nonFootstepsResults = rolledResults.filter(result => result.result !== 'FOOTSTEPS');\r\n      setRolledResults(nonFootstepsResults);\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n    }\r\n  };\r\n\r\n  // 소켓 이벤트 리스너\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      console.log('소켓 이벤트 리스너 등록');\r\n      \r\n      // 게임 시작 이벤트\r\n      const handleGameStarted = (data) => {\r\n        console.log('게임 시작:', data);\r\n        \r\n        // 서버에서 받은 게임 상태로 초기화\r\n        if (data.gameState) {\r\n          console.log('게임 상태 초기화:', data.gameState);\r\n          \r\n          // 주사위 풀 초기화\r\n          if (data.gameState.dicePool) {\r\n            setDicePool(data.gameState.dicePool);\r\n          } else {\r\n            console.warn('주사위 풀이 없습니다. 초기화합니다.');\r\n            // 주사위 풀 초기화\r\n            const initialDicePool = [\r\n              ...Array(3).fill('RED'),\r\n              ...Array(4).fill('YELLOW'),\r\n              ...Array(6).fill('GREEN')\r\n            ];\r\n            setDicePool(initialDicePool);\r\n          }\r\n          \r\n          setCurrentBrains(0);\r\n          setCurrentShotguns(0);\r\n          setRolledResults([]);\r\n          setSelectedDice([]);\r\n          setWinner(null);\r\n        }\r\n      };\r\n      \r\n      // 주사위 선택 이벤트\r\n      const handleDiceSelected = (data) => {\r\n        console.log('주사위 선택됨:', data);\r\n        \r\n        setSelectedDice(data.selectedDice || []);\r\n        setDicePool(data.dicePool || []);\r\n      };\r\n      \r\n      // 주사위 굴리기 결과 이벤트\r\n      const handleGameAction = (data) => {\r\n        console.log('게임 액션 수신:', data);\r\n        \r\n        if (data.action === 'rollDice') {\r\n          console.log('주사위 결과 수신:', data.results);\r\n          \r\n          // 결과 표시\r\n          setRolledResults(data.results);\r\n          setIsRolling(true);\r\n          \r\n          // 주사위 풀 업데이트\r\n          setDicePool(data.dicePool || []);\r\n          \r\n          // 애니메이션 후 결과 처리\r\n          setTimeout(() => {\r\n            // 내 턴일 때만 결과 처리\r\n            if (isMyTurn) {\r\n              // 결과 처리 - 뇌와 샷건 개수 누적\r\n              let newBrains = currentBrains;\r\n              let newShotguns = currentShotguns;\r\n              \r\n              data.results.forEach(({ result }) => {\r\n                if (result === 'BRAIN') newBrains++;\r\n                if (result === 'SHOTGUN') newShotguns++;\r\n              });\r\n              \r\n              // 상태 업데이트\r\n              setCurrentBrains(newBrains);\r\n              setCurrentShotguns(newShotguns);\r\n              \r\n              // 현재 상태를 서버에 전송\r\n              window.socket.emit('updateTurnStatus', {\r\n                roomId: window.location.pathname.split('/')[2],\r\n                currentBrains: newBrains,\r\n                currentShotguns: newShotguns\r\n              });\r\n            }\r\n            \r\n            setIsRolling(false);\r\n          }, 2500);\r\n        }\r\n      };\r\n      \r\n      // 턴 상태 업데이트 이벤트\r\n      const handleTurnStatusUpdated = (data) => {\r\n        console.log('턴 상태 업데이트:', data);\r\n        \r\n        // 내 턴이 아닐 때만 상태 업데이트\r\n        if (!isMyTurn) {\r\n          setCurrentBrains(data.currentBrains);\r\n          setCurrentShotguns(data.currentShotguns);\r\n        }\r\n        \r\n        // 주사위 풀 업데이트\r\n        setDicePool(data.dicePool || []);\r\n      };\r\n      \r\n      // 게임 상태 업데이트 이벤트\r\n      const handleGameStateUpdated = (gameState) => {\r\n        console.log('게임 상태 업데이트:', gameState);\r\n        \r\n        // 주사위 풀 업데이트 - 서버 상태로 동기화\r\n        if (gameState.dicePool) {\r\n          console.log('주사위 풀 업데이트:', gameState.dicePool);\r\n          setDicePool(gameState.dicePool);\r\n        } else {\r\n          console.warn('주사위 풀이 없습니다. 초기화합니다.');\r\n          // 주사위 풀 초기화\r\n          const initialDicePool = [\r\n            ...Array(3).fill('RED'),\r\n            ...Array(4).fill('YELLOW'),\r\n            ...Array(6).fill('GREEN')\r\n          ];\r\n          setDicePool(initialDicePool);\r\n        }\r\n        \r\n        // 현재 턴 업데이트\r\n        if (gameState.currentTurn !== undefined) {\r\n          // 턴이 변경되었으면 상태 초기화\r\n          setCurrentBrains(gameState.currentBrains || 0);\r\n          setCurrentShotguns(gameState.currentShotguns || 0);\r\n          setRolledResults([]);\r\n          setSelectedDice([]);\r\n        }\r\n      };\r\n      \r\n      // 게임 종료 이벤트\r\n      const handleGameEnded = (data) => {\r\n        console.log('게임 종료:', data);\r\n        \r\n        setWinner(data.winner);\r\n      };\r\n      \r\n      // 게임 에러 이벤트\r\n      const handleGameError = (data) => {\r\n        console.error('게임 에러:', data.message);\r\n        \r\n        // 에러 처리\r\n        alert(`게임 에러: ${data.message}`);\r\n      };\r\n      \r\n      // 이벤트 리스너 등록\r\n      window.socket.on('gameStarted', handleGameStarted);\r\n      window.socket.on('diceSelected', handleDiceSelected);\r\n      window.socket.on('gameAction', handleGameAction);\r\n      window.socket.on('turnStatusUpdated', handleTurnStatusUpdated);\r\n      window.socket.on('gameStateUpdated', handleGameStateUpdated);\r\n      window.socket.on('gameEnded', handleGameEnded);\r\n      window.socket.on('gameError', handleGameError);\r\n      \r\n      // 클린업\r\n      return () => {\r\n        console.log('소켓 이벤트 리스너 제거');\r\n        window.socket.off('gameStarted', handleGameStarted);\r\n        window.socket.off('diceSelected', handleDiceSelected);\r\n        window.socket.off('gameAction', handleGameAction);\r\n        window.socket.off('turnStatusUpdated', handleTurnStatusUpdated);\r\n        window.socket.off('gameStateUpdated', handleGameStateUpdated);\r\n        window.socket.off('gameEnded', handleGameEnded);\r\n        window.socket.off('gameError', handleGameError);\r\n      };\r\n    }\r\n  }, [currentBrains, currentShotguns, isMyTurn, onTurnEnd]);\r\n\r\n  // 주사위 풀 상태 표시 컴포넌트\r\n  const DicePoolStatus = ({ dicePool }) => {\r\n    // 주사위 풀이 없으면 초기화\r\n    const pool = Array.isArray(dicePool) ? dicePool : [];\r\n    \r\n    // 주사위 색상별 개수 계산\r\n    const redCount = pool.filter(dice => dice === 'RED').length;\r\n    const yellowCount = pool.filter(dice => dice === 'YELLOW').length;\r\n    const greenCount = pool.filter(dice => dice === 'GREEN').length;\r\n    \r\n    return (\r\n      <div className=\"dice-pool-status mt-3\">\r\n        <h5>남은 주사위:</h5>\r\n        <div className=\"dice-pool-counts\">\r\n          <div className=\"dice-count red\">\r\n            <span className=\"dice-color-indicator red\"></span>\r\n            빨간색: {redCount}개\r\n          </div>\r\n          <div className=\"dice-count yellow\">\r\n            <span className=\"dice-color-indicator yellow\"></span>\r\n            노란색: {yellowCount}개\r\n          </div>\r\n          <div className=\"dice-count green\">\r\n            <span className=\"dice-color-indicator green\"></span>\r\n            초록색: {greenCount}개\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => {\r\n    return (\r\n      <div className=\"score-board mb-4\">\r\n        <h4 className=\"text-center mb-3\">점수판</h4>\r\n        <div className=\"row\">\r\n          {players.map((player, index) => (\r\n            <div key={index} className={`col-md-${12 / players.length} mb-2`}>\r\n              <div className={`card ${index === currentTurn ? 'bg-light' : ''}`}>\r\n                <div className=\"card-body text-center\">\r\n                  <h5 className=\"card-title\">{player.nickname}</h5>\r\n                  <p className=\"card-text\">점수: {player.score || 0}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 다른 플레이어의 턴일 때 화면\r\n  if (!isMyTurn) {\r\n    return (\r\n      <div className=\"zombie-dice\">\r\n        {renderScoreBoard()}\r\n        <div className=\"text-center mb-3\">\r\n          <h3>{players[currentTurn].nickname}님의 차례입니다</h3>\r\n        </div>\r\n        \r\n        <div className=\"current-status mb-3\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <div>획득한 뇌: {currentBrains}</div>\r\n            <div>샷건 횟수: {currentShotguns}/3</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dice-area mb-3\">\r\n          {isRolling ? (\r\n            <div className=\"text-center\">\r\n              <p>주사위 굴리는 중...</p>\r\n            </div>\r\n          ) : (\r\n            rolledResults.length > 0 && (\r\n              rolledResults.map((result, index) => (\r\n                <Dice \r\n                  key={index}\r\n                  type={result.type}\r\n                  result={result.result}\r\n                  isRolling={isRolling}\r\n                />\r\n              ))\r\n            )\r\n          )}\r\n        </div>\r\n\r\n        <DicePoolStatus dicePool={dicePool} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 내 턴일 때 화면\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"text-center mb-3\">\r\n            <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n          </div>\r\n          \r\n          <div className=\"current-status mb-3\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <div>획득한 뇌: {currentBrains}</div>\r\n              <div>샷건 횟수: {currentShotguns}/3</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dice-area mb-3\">\r\n            {isRolling ? (\r\n              <div className=\"text-center\">\r\n                <p>주사위 굴리는 중...</p>\r\n              </div>\r\n            ) : (\r\n              rolledResults.length > 0 ? (\r\n                rolledResults.map((result, index) => (\r\n                  <Dice \r\n                    key={index}\r\n                    type={result.type}\r\n                    result={result.result}\r\n                    isRolling={isRolling}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleRoll}\r\n                  disabled={isRolling}\r\n                >\r\n                  {selectedDice.length === 0 ? \"주사위 선택\" : \"주사위 굴리기\"}\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          {rolledResults.length > 0 && !winner && !isRolling && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}