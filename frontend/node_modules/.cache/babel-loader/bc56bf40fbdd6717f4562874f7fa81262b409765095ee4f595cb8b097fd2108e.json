{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SocketContext } from '../../context/SocketContext';\nimport { UserContext } from '../../context/UserContext';\nimport './ZombieDice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZombieDice = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const socket = useContext(SocketContext);\n  const {\n    user\n  } = useContext(UserContext);\n\n  // 게임 상태 관리\n  const [gameState, setGameState] = useState({\n    isStarted: false,\n    players: [],\n    currentTurn: null,\n    dicePool: {\n      red: 3,\n      yellow: 4,\n      green: 6\n    },\n    rolledDice: [],\n    collectedBrains: 0,\n    collectedShotguns: 0,\n    turnScores: {},\n    totalScores: {},\n    playerOrder: []\n  });\n\n  // 로그 메시지 관리\n  const [logs, setLogs] = useState([]);\n\n  // 로그 추가 함수\n  const addLog = message => {\n    console.log(`[ZombieDice] ${message}`); // 터미널에 로그 출력\n    setLogs(prevLogs => [...prevLogs, {\n      message,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n  useEffect(() => {\n    if (!socket) return;\n\n    // 게임 시작 이벤트 리스너\n    socket.on('game:start', data => {\n      addLog(`게임이 시작되었습니다.`);\n      addLog(`플레이어 순서: ${data.players.map(p => p.nickname).join(' -> ')}`);\n      addLog(`선 플레이어: ${data.currentTurn.nickname}`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: true,\n        players: data.players,\n        currentTurn: data.currentTurn,\n        playerOrder: data.players,\n        turnScores: data.turnScores || {},\n        totalScores: data.totalScores || {}\n      }));\n    });\n\n    // 주사위 굴리기 결과 이벤트 리스너\n    socket.on('game:diceRolled', data => {\n      addLog(`${data.currentPlayer.nickname}님이 주사위를 굴렸습니다.`);\n      addLog(`결과: ${data.rolledDice.map(die => `${die.color} ${die.face}`).join(', ')}`);\n      setGameState(prev => ({\n        ...prev,\n        dicePool: data.dicePool,\n        rolledDice: data.rolledDice,\n        collectedBrains: data.collectedBrains,\n        collectedShotguns: data.collectedShotguns,\n        currentTurn: data.currentTurn\n      }));\n    });\n\n    // 턴 종료 이벤트 리스너\n    socket.on('game:turnEnd', data => {\n      addLog(`${data.previousPlayer.nickname}님의 턴이 종료되었습니다.`);\n      addLog(`${data.currentPlayer.nickname}님의 턴이 시작됩니다.`);\n      setGameState(prev => ({\n        ...prev,\n        currentTurn: data.currentTurn,\n        dicePool: {\n          red: 3,\n          yellow: 4,\n          green: 6\n        },\n        rolledDice: [],\n        collectedBrains: 0,\n        collectedShotguns: 0,\n        turnScores: data.turnScores,\n        totalScores: data.totalScores\n      }));\n    });\n\n    // 게임 종료 이벤트 리스너\n    socket.on('game:end', data => {\n      addLog(`게임이 종료되었습니다.`);\n      addLog(`승자: ${data.winner.nickname} (${data.scores[data.winner.nickname]}점)`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: false,\n        winner: data.winner,\n        totalScores: data.scores\n      }));\n    });\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      socket.off('game:start');\n      socket.off('game:diceRolled');\n      socket.off('game:turnEnd');\n      socket.off('game:end');\n    };\n  }, [socket]);\n\n  // 주사위 굴리기 함수\n  const rollDice = () => {\n    if (!isCurrentPlayer()) {\n      toast.error('당신의 턴이 아닙니다.');\n      return;\n    }\n    addLog('주사위 굴리기 요청을 보냅니다.');\n    socket.emit('game:rollDice', {\n      roomId\n    });\n  };\n\n  // 턴 종료 함수\n  const endTurn = () => {\n    if (!isCurrentPlayer()) {\n      toast.error('당신의 턴이 아닙니다.');\n      return;\n    }\n    addLog('턴 종료 요청을 보냅니다.');\n    socket.emit('game:endTurn', {\n      roomId\n    });\n  };\n\n  // 현재 플레이어인지 확인하는 함수\n  const isCurrentPlayer = () => {\n    return gameState.currentTurn && gameState.currentTurn.nickname === user.nickname;\n  };\n\n  // 주사위 색상에 따른 스타일 클래스 반환\n  const getDiceColorClass = color => {\n    switch (color.toLowerCase()) {\n      case 'red':\n        return 'dice-red';\n      case 'yellow':\n        return 'dice-yellow';\n      case 'green':\n        return 'dice-green';\n      default:\n        return '';\n    }\n  };\n\n  // 주사위 면에 따른 아이콘 반환\n  const getDiceFaceIcon = face => {\n    switch (face.toLowerCase()) {\n      case 'brain':\n        return '🧠';\n      case 'shotgun':\n        return '💥';\n      case 'footsteps':\n        return '👣';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-info mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD50C\\uB808\\uC774\\uC5B4 \\uC810\\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-list\",\n        children: gameState.players.map(player => {\n          var _gameState$currentTur;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `player-item ${((_gameState$currentTur = gameState.currentTurn) === null || _gameState$currentTur === void 0 ? void 0 : _gameState$currentTur.nickname) === player.nickname ? 'current-turn' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-name\",\n              children: player.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-score\",\n              children: [gameState.totalScores[player.nickname] || 0, \"\\uC810\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, player.nickname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC8FC\\uC0AC\\uC704 \\uD480\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-counts\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-red\",\n            children: [\"\\uBE68\\uAC15: \", gameState.dicePool.red]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-yellow\",\n            children: [\"\\uB178\\uB791: \", gameState.dicePool.yellow]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dice-green\",\n            children: [\"\\uCD08\\uB85D: \", gameState.dicePool.green]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rolled-dice mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uAD74\\uB9B0 \\uC8FC\\uC0AC\\uC704\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-results\",\n          children: gameState.rolledDice.map((die, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dice ${getDiceColorClass(die.color)}`,\n            children: getDiceFaceIcon(die.face)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-info mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD604\\uC7AC \\uD134 \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"turn-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBAA8\\uC740 \\uB1CC: \", gameState.collectedBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uB9DE\\uC740 \\uCD1D: \", gameState.collectedShotguns]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), isCurrentPlayer() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary me-2\",\n          onClick: rollDice,\n          disabled: gameState.collectedShotguns >= 3,\n          children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: endTurn,\n          children: \"\\uD134 \\uC885\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-logs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uAC8C\\uC784 \\uB85C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-container\",\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-time\",\n            children: log.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-message\",\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"vhYfgHdLdKoNtTOCegzynsRC4aQ=\", false, function () {\n  return [useParams];\n});\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","SocketContext","UserContext","jsxDEV","_jsxDEV","ZombieDice","_s","roomId","socket","user","gameState","setGameState","isStarted","players","currentTurn","dicePool","red","yellow","green","rolledDice","collectedBrains","collectedShotguns","turnScores","totalScores","playerOrder","logs","setLogs","addLog","message","console","log","prevLogs","timestamp","Date","toLocaleTimeString","on","data","map","p","nickname","join","prev","currentPlayer","die","color","face","previousPlayer","winner","scores","off","rollDice","isCurrentPlayer","toast","error","emit","endTurn","getDiceColorClass","toLowerCase","getDiceFaceIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","player","_gameState$currentTur","index","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SocketContext } from '../../context/SocketContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport './ZombieDice.css';\r\n\r\nconst ZombieDice = () => {\r\n  const { roomId } = useParams();\r\n  const socket = useContext(SocketContext);\r\n  const { user } = useContext(UserContext);\r\n  \r\n  // 게임 상태 관리\r\n  const [gameState, setGameState] = useState({\r\n    isStarted: false,\r\n    players: [],\r\n    currentTurn: null,\r\n    dicePool: {\r\n      red: 3,\r\n      yellow: 4,\r\n      green: 6\r\n    },\r\n    rolledDice: [],\r\n    collectedBrains: 0,\r\n    collectedShotguns: 0,\r\n    turnScores: {},\r\n    totalScores: {},\r\n    playerOrder: []\r\n  });\r\n  \r\n  // 로그 메시지 관리\r\n  const [logs, setLogs] = useState([]);\r\n  \r\n  // 로그 추가 함수\r\n  const addLog = (message) => {\r\n    console.log(`[ZombieDice] ${message}`); // 터미널에 로그 출력\r\n    setLogs(prevLogs => [...prevLogs, { message, timestamp: new Date().toLocaleTimeString() }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    \r\n    // 게임 시작 이벤트 리스너\r\n    socket.on('game:start', (data) => {\r\n      addLog(`게임이 시작되었습니다.`);\r\n      addLog(`플레이어 순서: ${data.players.map(p => p.nickname).join(' -> ')}`);\r\n      addLog(`선 플레이어: ${data.currentTurn.nickname}`);\r\n      \r\n      setGameState(prev => ({\r\n        ...prev,\r\n        isStarted: true,\r\n        players: data.players,\r\n        currentTurn: data.currentTurn,\r\n        playerOrder: data.players,\r\n        turnScores: data.turnScores || {},\r\n        totalScores: data.totalScores || {}\r\n      }));\r\n    });\r\n    \r\n    // 주사위 굴리기 결과 이벤트 리스너\r\n    socket.on('game:diceRolled', (data) => {\r\n      addLog(`${data.currentPlayer.nickname}님이 주사위를 굴렸습니다.`);\r\n      addLog(`결과: ${data.rolledDice.map(die => `${die.color} ${die.face}`).join(', ')}`);\r\n      \r\n      setGameState(prev => ({\r\n        ...prev,\r\n        dicePool: data.dicePool,\r\n        rolledDice: data.rolledDice,\r\n        collectedBrains: data.collectedBrains,\r\n        collectedShotguns: data.collectedShotguns,\r\n        currentTurn: data.currentTurn\r\n      }));\r\n    });\r\n    \r\n    // 턴 종료 이벤트 리스너\r\n    socket.on('game:turnEnd', (data) => {\r\n      addLog(`${data.previousPlayer.nickname}님의 턴이 종료되었습니다.`);\r\n      addLog(`${data.currentPlayer.nickname}님의 턴이 시작됩니다.`);\r\n      \r\n      setGameState(prev => ({\r\n        ...prev,\r\n        currentTurn: data.currentTurn,\r\n        dicePool: {\r\n          red: 3,\r\n          yellow: 4,\r\n          green: 6\r\n        },\r\n        rolledDice: [],\r\n        collectedBrains: 0,\r\n        collectedShotguns: 0,\r\n        turnScores: data.turnScores,\r\n        totalScores: data.totalScores\r\n      }));\r\n    });\r\n    \r\n    // 게임 종료 이벤트 리스너\r\n    socket.on('game:end', (data) => {\r\n      addLog(`게임이 종료되었습니다.`);\r\n      addLog(`승자: ${data.winner.nickname} (${data.scores[data.winner.nickname]}점)`);\r\n      \r\n      setGameState(prev => ({\r\n        ...prev,\r\n        isStarted: false,\r\n        winner: data.winner,\r\n        totalScores: data.scores\r\n      }));\r\n    });\r\n\r\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\r\n    return () => {\r\n      socket.off('game:start');\r\n      socket.off('game:diceRolled');\r\n      socket.off('game:turnEnd');\r\n      socket.off('game:end');\r\n    };\r\n  }, [socket]);\r\n\r\n  // 주사위 굴리기 함수\r\n  const rollDice = () => {\r\n    if (!isCurrentPlayer()) {\r\n      toast.error('당신의 턴이 아닙니다.');\r\n      return;\r\n    }\r\n    addLog('주사위 굴리기 요청을 보냅니다.');\r\n    socket.emit('game:rollDice', { roomId });\r\n  };\r\n\r\n  // 턴 종료 함수\r\n  const endTurn = () => {\r\n    if (!isCurrentPlayer()) {\r\n      toast.error('당신의 턴이 아닙니다.');\r\n      return;\r\n    }\r\n    addLog('턴 종료 요청을 보냅니다.');\r\n    socket.emit('game:endTurn', { roomId });\r\n  };\r\n\r\n  // 현재 플레이어인지 확인하는 함수\r\n  const isCurrentPlayer = () => {\r\n    return gameState.currentTurn && gameState.currentTurn.nickname === user.nickname;\r\n  };\r\n\r\n  // 주사위 색상에 따른 스타일 클래스 반환\r\n  const getDiceColorClass = (color) => {\r\n    switch (color.toLowerCase()) {\r\n      case 'red': return 'dice-red';\r\n      case 'yellow': return 'dice-yellow';\r\n      case 'green': return 'dice-green';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  // 주사위 면에 따른 아이콘 반환\r\n  const getDiceFaceIcon = (face) => {\r\n    switch (face.toLowerCase()) {\r\n      case 'brain': return '🧠';\r\n      case 'shotgun': return '💥';\r\n      case 'footsteps': return '👣';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"zombie-dice-game\">\r\n      {/* 플레이어 정보 */}\r\n      <div className=\"players-info mb-4\">\r\n        <h3>플레이어 점수</h3>\r\n        <div className=\"player-list\">\r\n          {gameState.players.map(player => (\r\n            <div \r\n              key={player.nickname}\r\n              className={`player-item ${gameState.currentTurn?.nickname === player.nickname ? 'current-turn' : ''}`}\r\n            >\r\n              <span className=\"player-name\">{player.nickname}</span>\r\n              <span className=\"player-score\">\r\n                {gameState.totalScores[player.nickname] || 0}점\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 게임 보드 */}\r\n      <div className=\"game-board mb-4\">\r\n        <div className=\"dice-pool mb-3\">\r\n          <h4>주사위 풀</h4>\r\n          <div className=\"dice-counts\">\r\n            <span className=\"dice-red\">빨강: {gameState.dicePool.red}</span>\r\n            <span className=\"dice-yellow\">노랑: {gameState.dicePool.yellow}</span>\r\n            <span className=\"dice-green\">초록: {gameState.dicePool.green}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 굴린 주사위 결과 */}\r\n        <div className=\"rolled-dice mb-3\">\r\n          <h4>굴린 주사위</h4>\r\n          <div className=\"dice-results\">\r\n            {gameState.rolledDice.map((die, index) => (\r\n              <div \r\n                key={index} \r\n                className={`dice ${getDiceColorClass(die.color)}`}\r\n              >\r\n                {getDiceFaceIcon(die.face)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 현재 턴 정보 */}\r\n        <div className=\"turn-info mb-3\">\r\n          <h4>현재 턴 정보</h4>\r\n          <div className=\"turn-stats\">\r\n            <span>모은 뇌: {gameState.collectedBrains}</span>\r\n            <span>맞은 총: {gameState.collectedShotguns}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 게임 액션 버튼 */}\r\n        {isCurrentPlayer() && (\r\n          <div className=\"game-actions\">\r\n            <button \r\n              className=\"btn btn-primary me-2\"\r\n              onClick={rollDice}\r\n              disabled={gameState.collectedShotguns >= 3}\r\n            >\r\n              주사위 굴리기\r\n            </button>\r\n            <button \r\n              className=\"btn btn-warning\"\r\n              onClick={endTurn}\r\n            >\r\n              턴 종료\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 게임 로그 */}\r\n      <div className=\"game-logs\">\r\n        <h4>게임 로그</h4>\r\n        <div className=\"logs-container\">\r\n          {logs.map((log, index) => (\r\n            <div key={index} className=\"log-entry\">\r\n              <span className=\"log-time\">{log.timestamp}</span>\r\n              <span className=\"log-message\">{log.message}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZombieDice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}