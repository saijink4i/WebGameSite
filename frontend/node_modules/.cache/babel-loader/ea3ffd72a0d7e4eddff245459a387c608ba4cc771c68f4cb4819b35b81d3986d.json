{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    faces: [{\n      image: redBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [dicePool, setDicePool] = useState([...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [keptDice, setKeptDice] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const diceContainerRef = useRef(null);\n\n  // 주사위 3개 랜덤 선택\n  const pickDice = () => {\n    const newDice = [];\n    const tempPool = [...dicePool];\n    for (let i = 0; i < 3; i++) {\n      if (tempPool.length === 0) break;\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\n      newDice.push(tempPool[randomIndex]);\n      tempPool.splice(randomIndex, 1);\n    }\n    setDicePool(tempPool);\n    setSelectedDice(newDice);\n  };\n\n  // 주사위 굴리기\n  const handleRoll = () => {\n    rollDiceWithSelected(selectedDice, dicePool);\n  };\n\n  // 결과 처리 함수 수정\n  const processResults = results => {\n    // 결과 계산 - 이전 값에 누적\n    let newBrains = currentBrains;\n    let newShotguns = currentShotguns;\n    let newDicePool = [...dicePool];\n    results.forEach(({\n      result,\n      type\n    }) => {\n      if (result === 'BRAIN') newBrains++;\n      if (result === 'SHOTGUN') newShotguns++;\n      if (result === 'FOOTSTEPS') {\n        // 발자국은 다시 풀에 넣지 않음 (이미 다음 굴림에 포함됨)\n      }\n    });\n    setCurrentBrains(newBrains);\n    setCurrentShotguns(newShotguns);\n\n    // 총이 3개 이상이면 턴 종료\n    if (newShotguns >= 3) {\n      setTimeout(() => {\n        onTurnEnd(0); // 총 3개 이상이면 점수 0\n      }, 1000);\n    }\n  };\n\n  // 계속 진행\n  const handleContinue = () => {\n    // 도망간 주사위 찾기\n    const footstepsDice = rolledResults.filter(result => result.result === 'FOOTSTEPS').map(result => result.type);\n\n    // 도망간 주사위를 제외한 결과만 유지\n    const nonFootstepResults = rolledResults.filter(result => result.result !== 'FOOTSTEPS');\n\n    // 새로운 주사위 3개 선택\n    const newSelectedDice = [];\n    let tempPool = [...dicePool];\n\n    // 3개의 새 주사위 선택\n    for (let i = 0; i < 3; i++) {\n      if (tempPool.length === 0) break;\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\n      newSelectedDice.push(tempPool[randomIndex]);\n      tempPool.splice(randomIndex, 1);\n    }\n\n    // 도망간 주사위와 새 주사위 합치기\n    const allDiceToRoll = [...footstepsDice, ...newSelectedDice];\n\n    // 주사위 풀 업데이트\n    setDicePool(tempPool);\n\n    // 이전 결과 중 도망이 아닌 것들은 유지\n    setRolledResults(nonFootstepResults);\n\n    // 즉시 주사위 굴리기\n    setTimeout(() => {\n      rollDiceWithSelected(allDiceToRoll, tempPool);\n    }, 100);\n  };\n\n  // 주사위 굴리기 함수 수정\n  const rollDiceWithSelected = (selectedDiceToRoll, currentPool) => {\n    setIsRolling(true);\n\n    // 서버에 주사위 굴리기 요청\n    if (window.socket) {\n      // Room 컴포넌트에서 roomId 가져오기\n      const roomId = window.location.pathname.split('/')[2]; // URL에서 roomId 추출\n\n      console.log('주사위 굴리기 요청 전송:', {\n        action: 'rollDice',\n        roomId,\n        selectedDice: selectedDiceToRoll,\n        dicePool: currentPool,\n        currentBrains,\n        // 현재까지 누적된 뇌 개수\n        currentShotguns // 현재까지 누적된 총 개수\n      });\n      window.socket.emit('gameAction', {\n        action: 'rollDice',\n        roomId,\n        selectedDice: selectedDiceToRoll,\n        dicePool: currentPool,\n        currentBrains: currentBrains,\n        currentShotguns: currentShotguns\n      });\n    } else {\n      console.error('소켓 연결이 없습니다!');\n      setIsRolling(false);\n    }\n\n    // 서버 응답이 없을 경우를 대비한 타임아웃\n    setTimeout(() => {\n      if (isRolling) {\n        console.error('서버 응답 타임아웃');\n        setIsRolling(false);\n      }\n    }, 5000);\n  };\n\n  // 턴 종료\n  const handleStop = () => {\n    const finalScore = currentBrains;\n    // 주사위 풀 초기화\n    setDicePool([...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')]);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    setSelectedDice([]);\n    onTurnEnd(finalScore);\n  };\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-board\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC810\\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: index === currentTurn ? 'current-player' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, player.nickname, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n\n  // 승자가 있는지 확인\n  const winner = players.find(player => player.score >= WINNING_SCORE);\n  useEffect(() => {\n    if (isMyTurn) {\n      pickDice();\n    }\n  }, [isMyTurn]);\n\n  // Three.js를 사용한 주사위 컴포넌트\n  function Dice({\n    type,\n    result,\n    isRolling\n  }) {\n    _s();\n    const diceRef = useRef(null);\n    const animationRef = useRef(null);\n    useEffect(() => {\n      // 이전 캔버스 제거\n      while (diceRef.current && diceRef.current.firstChild) {\n        diceRef.current.removeChild(diceRef.current.firstChild);\n      }\n\n      // 씬 설정\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xf0f0f0);\n\n      // 카메라 설정\n      const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\n      camera.position.z = 2;\n\n      // 렌더러 설정\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      renderer.setSize(150, 150);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      if (diceRef.current) {\n        diceRef.current.appendChild(renderer.domElement);\n      }\n\n      // 조명 추가\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n      directionalLight.position.set(1, 1, 1);\n      scene.add(directionalLight);\n\n      // 텍스처 로더 생성\n      const textureLoader = new THREE.TextureLoader();\n\n      // 결과 타입에 따른 면 매핑\n      const resultIndex = DICE_FACES[type].faces.findIndex(face => face.type === result);\n\n      // 주사위 면 순서: +x, -x, +y, -y, +z, -z\n      // 각 면에 맞는 텍스처 매핑\n      const materials = [];\n\n      // 주사위 타입에 따른 면 이미지 설정\n      let brainImage, footstepsImage, shotgunImage;\n      switch (type) {\n        case 'RED':\n          brainImage = redBrain;\n          footstepsImage = redFootsteps;\n          shotgunImage = redShotgun;\n          break;\n        case 'YELLOW':\n          brainImage = yellowBrain;\n          footstepsImage = yellowFootsteps;\n          shotgunImage = yellowShotgun;\n          break;\n        case 'GREEN':\n          brainImage = greenBrain;\n          footstepsImage = greenFootsteps;\n          shotgunImage = greenShotgun;\n          break;\n      }\n\n      // 결과에 따라 위쪽 면 설정\n      let topFaceImage;\n      switch (result) {\n        case 'BRAIN':\n          topFaceImage = brainImage;\n          break;\n        case 'FOOTSTEPS':\n          topFaceImage = footstepsImage;\n          break;\n        case 'SHOTGUN':\n          topFaceImage = shotgunImage;\n          break;\n      }\n\n      // 각 면에 텍스처 적용\n      // 순서: +x, -x, +y, -y, +z(위), -z(아래)\n      const faceImages = [brainImage,\n      // +x\n      footstepsImage,\n      // -x\n      shotgunImage,\n      // +y\n      brainImage,\n      // -y\n      topFaceImage,\n      // +z (위쪽 면 - 결과에 따라 변경)\n      footstepsImage // -z\n      ];\n\n      // 각 면에 텍스처 적용\n      faceImages.forEach(image => {\n        const texture = textureLoader.load(image);\n        texture.colorSpace = THREE.SRGBColorSpace;\n        materials.push(new THREE.MeshStandardMaterial({\n          map: texture,\n          roughness: 0.3,\n          metalness: 0.2\n        }));\n      });\n\n      // 주사위 지오메트리 생성\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\n      const dice = new THREE.Mesh(geometry, materials);\n      scene.add(dice);\n\n      // 초기 회전 설정\n      dice.rotation.set(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI);\n\n      // 애니메이션 함수\n      const animate = () => {\n        animationRef.current = requestAnimationFrame(animate);\n        if (isRolling) {\n          // 굴러가는 애니메이션\n          dice.rotation.x += 0.1;\n          dice.rotation.y += 0.15;\n          dice.rotation.z += 0.05;\n        } else {\n          // 결과에 따른 회전 설정 - 항상 +z 면이 위로 오도록\n          const targetX = 0;\n          const targetY = 0;\n          const targetZ = 0;\n\n          // 부드러운 회전 애니메이션\n          dice.rotation.x += (targetX - dice.rotation.x) * 0.1;\n          dice.rotation.y += (targetY - dice.rotation.y) * 0.1;\n          dice.rotation.z += (targetZ - dice.rotation.z) * 0.1;\n        }\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      // 클린업\n      return () => {\n        cancelAnimationFrame(animationRef.current);\n        if (diceRef.current && renderer.domElement) {\n          diceRef.current.removeChild(renderer.domElement);\n        }\n        geometry.dispose();\n        materials.forEach(material => material.dispose());\n        renderer.dispose();\n      };\n    }, [isRolling, result, type]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: diceRef,\n        className: \"dice-3d-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-result-label\",\n        children: [result === 'BRAIN' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-brain\",\n          children: \"\\uB1CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 34\n        }, this), result === 'SHOTGUN' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-shotgun\",\n          children: \"\\uCD1D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 36\n        }, this), result === 'FOOTSTEPS' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-footsteps\",\n          children: \"\\uBC1C\\uC790\\uAD6D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 소켓 이벤트 리스너 수정\n  _s(Dice, \"F1LKHxQtkm8Is5hiJbdZTIYH4mI=\");\n  useEffect(() => {\n    if (window.socket) {\n      console.log('소켓 이벤트 리스너 등록');\n\n      // 주사위 굴리기 결과 수신\n      const handleGameAction = data => {\n        console.log('게임 액션 수신:', data);\n        if (data.action === 'rollDice') {\n          console.log('주사위 결과 수신:', data.results);\n\n          // 결과 표시 - 기존 결과에 새 결과 추가\n          setRolledResults(data.results);\n\n          // 애니메이션 후 결과 처리\n          setTimeout(() => {\n            processResults(data.results);\n            setIsRolling(false);\n          }, 2500);\n        }\n      };\n      window.socket.on('gameAction', handleGameAction);\n      return () => {\n        console.log('소켓 이벤트 리스너 제거');\n        window.socket.off('gameAction', handleGameAction);\n      };\n    }\n  }, []);\n  if (!isMyTurn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zombie-dice\",\n      children: [renderScoreBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [players[currentTurn].nickname, \"\\uB2D8\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), rolledResults.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-area mb-3\",\n          children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(Dice, {\n            type: result.type,\n            result: result.result,\n            isRolling: isRolling\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area mb-3\",\n        children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this) : rolledResults.length > 0 ? rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(Dice, {\n          type: result.type,\n          result: result.result,\n          isRolling: isRolling\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 19\n        }, this)) : selectedDice.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleRoll,\n          disabled: isRolling,\n          children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this), rolledResults.length > 0 && !winner && !isRolling && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: \"\\uBA48\\uCD94\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n_s2(ZombieDice, \"ewk0BW9zxKUC0bfwYoOscluVsOg=\");\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","THREE","GLTFLoader","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","faces","image","type","YELLOW","GREEN","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s2","_s","$RefreshSig$","dicePool","setDicePool","Array","fill","selectedDice","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","keptDice","setKeptDice","isRolling","setIsRolling","diceContainerRef","pickDice","newDice","tempPool","i","length","randomIndex","Math","floor","random","push","splice","handleRoll","rollDiceWithSelected","processResults","results","newBrains","newShotguns","newDicePool","forEach","result","setTimeout","handleContinue","footstepsDice","filter","map","nonFootstepResults","newSelectedDice","allDiceToRoll","selectedDiceToRoll","currentPool","window","socket","roomId","location","pathname","split","console","log","action","emit","error","handleStop","finalScore","renderScoreBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","player","index","nickname","score","winner","find","Dice","diceRef","animationRef","current","firstChild","removeChild","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","set","textureLoader","TextureLoader","resultIndex","findIndex","face","materials","brainImage","footstepsImage","shotgunImage","topFaceImage","faceImages","texture","load","colorSpace","SRGBColorSpace","MeshStandardMaterial","roughness","metalness","geometry","BoxGeometry","dice","Mesh","rotation","PI","animate","requestAnimationFrame","x","y","targetX","targetY","targetZ","render","cancelAnimationFrame","dispose","material","ref","handleGameAction","data","on","off","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    faces: [\r\n      { image: redBrain, type: 'BRAIN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 3면\r\n      { image: redShotgun, type: 'SHOTGUN' },   // 4면\r\n      { image: redShotgun, type: 'SHOTGUN' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'BRAIN' },     // 2면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }, // 3면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }, // 4면\r\n      { image: yellowShotgun, type: 'SHOTGUN' },  // 5면\r\n      { image: yellowShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'BRAIN' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  const [dicePool, setDicePool] = useState([\r\n    ...Array(3).fill('RED'),\r\n    ...Array(4).fill('YELLOW'),\r\n    ...Array(6).fill('GREEN')\r\n  ]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [keptDice, setKeptDice] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const diceContainerRef = useRef(null);\r\n\r\n  // 주사위 3개 랜덤 선택\r\n  const pickDice = () => {\r\n    const newDice = [];\r\n    const tempPool = [...dicePool];\r\n    \r\n    for (let i = 0; i < 3; i++) {\r\n      if (tempPool.length === 0) break;\r\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\r\n      newDice.push(tempPool[randomIndex]);\r\n      tempPool.splice(randomIndex, 1);\r\n    }\r\n    \r\n    setDicePool(tempPool);\r\n    setSelectedDice(newDice);\r\n  };\r\n\r\n  // 주사위 굴리기\r\n  const handleRoll = () => {\r\n    rollDiceWithSelected(selectedDice, dicePool);\r\n  };\r\n\r\n  // 결과 처리 함수 수정\r\n  const processResults = (results) => {\r\n    // 결과 계산 - 이전 값에 누적\r\n    let newBrains = currentBrains;\r\n    let newShotguns = currentShotguns;\r\n    let newDicePool = [...dicePool];\r\n    \r\n    results.forEach(({ result, type }) => {\r\n      if (result === 'BRAIN') newBrains++;\r\n      if (result === 'SHOTGUN') newShotguns++;\r\n      if (result === 'FOOTSTEPS') {\r\n        // 발자국은 다시 풀에 넣지 않음 (이미 다음 굴림에 포함됨)\r\n      }\r\n    });\r\n\r\n    setCurrentBrains(newBrains);\r\n    setCurrentShotguns(newShotguns);\r\n    \r\n    // 총이 3개 이상이면 턴 종료\r\n    if (newShotguns >= 3) {\r\n      setTimeout(() => {\r\n        onTurnEnd(0); // 총 3개 이상이면 점수 0\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // 계속 진행\r\n  const handleContinue = () => {\r\n    // 도망간 주사위 찾기\r\n    const footstepsDice = rolledResults\r\n      .filter(result => result.result === 'FOOTSTEPS')\r\n      .map(result => result.type);\r\n    \r\n    // 도망간 주사위를 제외한 결과만 유지\r\n    const nonFootstepResults = rolledResults.filter(result => result.result !== 'FOOTSTEPS');\r\n    \r\n    // 새로운 주사위 3개 선택\r\n    const newSelectedDice = [];\r\n    let tempPool = [...dicePool];\r\n    \r\n    // 3개의 새 주사위 선택\r\n    for (let i = 0; i < 3; i++) {\r\n      if (tempPool.length === 0) break;\r\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\r\n      newSelectedDice.push(tempPool[randomIndex]);\r\n      tempPool.splice(randomIndex, 1);\r\n    }\r\n    \r\n    // 도망간 주사위와 새 주사위 합치기\r\n    const allDiceToRoll = [...footstepsDice, ...newSelectedDice];\r\n    \r\n    // 주사위 풀 업데이트\r\n    setDicePool(tempPool);\r\n    \r\n    // 이전 결과 중 도망이 아닌 것들은 유지\r\n    setRolledResults(nonFootstepResults);\r\n    \r\n    // 즉시 주사위 굴리기\r\n    setTimeout(() => {\r\n      rollDiceWithSelected(allDiceToRoll, tempPool);\r\n    }, 100);\r\n  };\r\n\r\n  // 주사위 굴리기 함수 수정\r\n  const rollDiceWithSelected = (selectedDiceToRoll, currentPool) => {\r\n    setIsRolling(true);\r\n    \r\n    // 서버에 주사위 굴리기 요청\r\n    if (window.socket) {\r\n      // Room 컴포넌트에서 roomId 가져오기\r\n      const roomId = window.location.pathname.split('/')[2]; // URL에서 roomId 추출\r\n      \r\n      console.log('주사위 굴리기 요청 전송:', {\r\n        action: 'rollDice',\r\n        roomId,\r\n        selectedDice: selectedDiceToRoll,\r\n        dicePool: currentPool,\r\n        currentBrains, // 현재까지 누적된 뇌 개수\r\n        currentShotguns // 현재까지 누적된 총 개수\r\n      });\r\n      \r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDice',\r\n        roomId,\r\n        selectedDice: selectedDiceToRoll,\r\n        dicePool: currentPool,\r\n        currentBrains: currentBrains,\r\n        currentShotguns: currentShotguns\r\n      });\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n      setIsRolling(false);\r\n    }\r\n    \r\n    // 서버 응답이 없을 경우를 대비한 타임아웃\r\n    setTimeout(() => {\r\n      if (isRolling) {\r\n        console.error('서버 응답 타임아웃');\r\n        setIsRolling(false);\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  // 턴 종료\r\n  const handleStop = () => {\r\n    const finalScore = currentBrains;\r\n    // 주사위 풀 초기화\r\n    setDicePool([\r\n      ...Array(3).fill('RED'),\r\n      ...Array(4).fill('YELLOW'),\r\n      ...Array(6).fill('GREEN')\r\n    ]);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n    onTurnEnd(finalScore);\r\n  };\r\n\r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => (\r\n    <div className=\"score-board\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>플레이어</th>\r\n            <th>점수</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {players.map((player, index) => (\r\n            <tr \r\n              key={player.nickname}\r\n              className={index === currentTurn ? 'current-player' : ''}\r\n            >\r\n              <td>{player.nickname}</td>\r\n              <td>{player.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  // 승자가 있는지 확인\r\n  const winner = players.find(player => player.score >= WINNING_SCORE);\r\n\r\n  useEffect(() => {\r\n    if (isMyTurn) {\r\n      pickDice();\r\n    }\r\n  }, [isMyTurn]);\r\n\r\n  // Three.js를 사용한 주사위 컴포넌트\r\n  function Dice({ type, result, isRolling }) {\r\n    const diceRef = useRef(null);\r\n    const animationRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n      // 이전 캔버스 제거\r\n      while (diceRef.current && diceRef.current.firstChild) {\r\n        diceRef.current.removeChild(diceRef.current.firstChild);\r\n      }\r\n\r\n      // 씬 설정\r\n      const scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xf0f0f0);\r\n      \r\n      // 카메라 설정\r\n      const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\r\n      camera.position.z = 2;\r\n      \r\n      // 렌더러 설정\r\n      const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n      renderer.setSize(150, 150);\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      if (diceRef.current) {\r\n        diceRef.current.appendChild(renderer.domElement);\r\n      }\r\n\r\n      // 조명 추가\r\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n      scene.add(ambientLight);\r\n      \r\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n      directionalLight.position.set(1, 1, 1);\r\n      scene.add(directionalLight);\r\n\r\n      // 텍스처 로더 생성\r\n      const textureLoader = new THREE.TextureLoader();\r\n      \r\n      // 결과 타입에 따른 면 매핑\r\n      const resultIndex = DICE_FACES[type].faces.findIndex(face => face.type === result);\r\n      \r\n      // 주사위 면 순서: +x, -x, +y, -y, +z, -z\r\n      // 각 면에 맞는 텍스처 매핑\r\n      const materials = [];\r\n      \r\n      // 주사위 타입에 따른 면 이미지 설정\r\n      let brainImage, footstepsImage, shotgunImage;\r\n      \r\n      switch(type) {\r\n        case 'RED':\r\n          brainImage = redBrain;\r\n          footstepsImage = redFootsteps;\r\n          shotgunImage = redShotgun;\r\n          break;\r\n        case 'YELLOW':\r\n          brainImage = yellowBrain;\r\n          footstepsImage = yellowFootsteps;\r\n          shotgunImage = yellowShotgun;\r\n          break;\r\n        case 'GREEN':\r\n          brainImage = greenBrain;\r\n          footstepsImage = greenFootsteps;\r\n          shotgunImage = greenShotgun;\r\n          break;\r\n      }\r\n      \r\n      // 결과에 따라 위쪽 면 설정\r\n      let topFaceImage;\r\n      switch(result) {\r\n        case 'BRAIN':\r\n          topFaceImage = brainImage;\r\n          break;\r\n        case 'FOOTSTEPS':\r\n          topFaceImage = footstepsImage;\r\n          break;\r\n        case 'SHOTGUN':\r\n          topFaceImage = shotgunImage;\r\n          break;\r\n      }\r\n      \r\n      // 각 면에 텍스처 적용\r\n      // 순서: +x, -x, +y, -y, +z(위), -z(아래)\r\n      const faceImages = [\r\n        brainImage,       // +x\r\n        footstepsImage,   // -x\r\n        shotgunImage,     // +y\r\n        brainImage,       // -y\r\n        topFaceImage,     // +z (위쪽 면 - 결과에 따라 변경)\r\n        footstepsImage    // -z\r\n      ];\r\n      \r\n      // 각 면에 텍스처 적용\r\n      faceImages.forEach(image => {\r\n        const texture = textureLoader.load(image);\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        materials.push(new THREE.MeshStandardMaterial({ \r\n          map: texture,\r\n          roughness: 0.3,\r\n          metalness: 0.2\r\n        }));\r\n      });\r\n      \r\n      // 주사위 지오메트리 생성\r\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n      const dice = new THREE.Mesh(geometry, materials);\r\n      scene.add(dice);\r\n      \r\n      // 초기 회전 설정\r\n      dice.rotation.set(\r\n        Math.random() * Math.PI,\r\n        Math.random() * Math.PI,\r\n        Math.random() * Math.PI\r\n      );\r\n      \r\n      // 애니메이션 함수\r\n      const animate = () => {\r\n        animationRef.current = requestAnimationFrame(animate);\r\n        \r\n        if (isRolling) {\r\n          // 굴러가는 애니메이션\r\n          dice.rotation.x += 0.1;\r\n          dice.rotation.y += 0.15;\r\n          dice.rotation.z += 0.05;\r\n        } else {\r\n          // 결과에 따른 회전 설정 - 항상 +z 면이 위로 오도록\r\n          const targetX = 0;\r\n          const targetY = 0;\r\n          const targetZ = 0;\r\n          \r\n          // 부드러운 회전 애니메이션\r\n          dice.rotation.x += (targetX - dice.rotation.x) * 0.1;\r\n          dice.rotation.y += (targetY - dice.rotation.y) * 0.1;\r\n          dice.rotation.z += (targetZ - dice.rotation.z) * 0.1;\r\n        }\r\n        \r\n        renderer.render(scene, camera);\r\n      };\r\n      \r\n      animate();\r\n      \r\n      // 클린업\r\n      return () => {\r\n        cancelAnimationFrame(animationRef.current);\r\n        if (diceRef.current && renderer.domElement) {\r\n          diceRef.current.removeChild(renderer.domElement);\r\n        }\r\n        geometry.dispose();\r\n        materials.forEach(material => material.dispose());\r\n        renderer.dispose();\r\n      };\r\n    }, [isRolling, result, type]);\r\n    \r\n    return (\r\n      <div className=\"dice-result-container\">\r\n        <div ref={diceRef} className=\"dice-3d-container\"></div>\r\n        <div className=\"dice-result-label\">\r\n          {result === 'BRAIN' && <span className=\"result-brain\">뇌</span>}\r\n          {result === 'SHOTGUN' && <span className=\"result-shotgun\">총</span>}\r\n          {result === 'FOOTSTEPS' && <span className=\"result-footsteps\">발자국</span>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 소켓 이벤트 리스너 수정\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      console.log('소켓 이벤트 리스너 등록');\r\n      \r\n      // 주사위 굴리기 결과 수신\r\n      const handleGameAction = (data) => {\r\n        console.log('게임 액션 수신:', data);\r\n        \r\n        if (data.action === 'rollDice') {\r\n          console.log('주사위 결과 수신:', data.results);\r\n          \r\n          // 결과 표시 - 기존 결과에 새 결과 추가\r\n          setRolledResults(data.results);\r\n          \r\n          // 애니메이션 후 결과 처리\r\n          setTimeout(() => {\r\n            processResults(data.results);\r\n            setIsRolling(false);\r\n          }, 2500);\r\n        }\r\n      };\r\n      \r\n      window.socket.on('gameAction', handleGameAction);\r\n      \r\n      return () => {\r\n        console.log('소켓 이벤트 리스너 제거');\r\n        window.socket.off('gameAction', handleGameAction);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  if (!isMyTurn) {\r\n    return (\r\n      <div className=\"zombie-dice\">\r\n        {renderScoreBoard()}\r\n        <div className=\"text-center mb-3\">\r\n          <h3>{players[currentTurn].nickname}님의 차례입니다</h3>\r\n        </div>\r\n        \r\n        {rolledResults.length > 0 && (\r\n          <>\r\n            <div className=\"current-status mb-3\">\r\n              <div className=\"d-flex justify-content-around\">\r\n                <div>획득한 뇌: {currentBrains}</div>\r\n                <div>샷건 횟수: {currentShotguns}/3</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"dice-area mb-3\">\r\n              {rolledResults.map((result, index) => (\r\n                <Dice \r\n                  key={index}\r\n                  type={result.type}\r\n                  result={result.result}\r\n                  isRolling={isRolling}\r\n                />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"current-status mb-3\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <div>획득한 뇌: {currentBrains}</div>\r\n              <div>샷건 횟수: {currentShotguns}/3</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dice-area mb-3\">\r\n            {isRolling ? (\r\n              <div className=\"text-center\">\r\n                <p>주사위 굴리는 중...</p>\r\n              </div>\r\n            ) : (\r\n              rolledResults.length > 0 ? (\r\n                rolledResults.map((result, index) => (\r\n                  <Dice \r\n                    key={index}\r\n                    type={result.type}\r\n                    result={result.result}\r\n                    isRolling={isRolling}\r\n                  />\r\n                ))\r\n              ) : (\r\n                selectedDice.length > 0 && (\r\n                  <button \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleRoll}\r\n                    disabled={isRolling}\r\n                  >\r\n                    주사위 굴리기\r\n                  </button>\r\n                )\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          {rolledResults.length > 0 && !winner && !isRolling && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                멈추기\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAChE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAClE,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,eAAe,MAAM,qDAAqD;AACjF,OAAOC,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,cAAc,MAAM,oDAAoD;AAC/E,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAG,EAAE;;AAExB;AACA,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE;IACHC,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEjB,QAAQ;MAAEkB,IAAI,EAAE;IAAQ,CAAC;IAAO;IACzC;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAY,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAY,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAU,CAAC;IAAI;IAC1C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAU,CAAC;IAAI;IAC1C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAU,CAAC,CAAI;IAAA;EAE9C,CAAC;EACDC,MAAM,EAAE;IACNH,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC3C;MAAED,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC3C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAY,CAAC;IAAE;IAC/C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAY,CAAC;IAAE;IAC/C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAU,CAAC;IAAG;IAC5C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAU,CAAC,CAAG;IAAA;EAEhD,CAAC;EACDE,KAAK,EAAE;IACLJ,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAY,CAAC;IAAE;IAC9C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAY,CAAC;IAAE;IAC9C;MAAED,KAAK,EAAET,YAAY;MAAEU,IAAI,EAAE;IAAU,CAAC,CAAG;IAAA;EAE/C;AACF,CAAC;AAED,SAASG,UAAUA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,CACvC,GAAGqC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2C,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMmD,gBAAgB,GAAGjD,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMkD,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,QAAQ,GAAG,CAAC,GAAGnB,QAAQ,CAAC;IAE9B,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAID,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,QAAQ,CAACE,MAAM,CAAC;MAC/DH,OAAO,CAACQ,IAAI,CAACP,QAAQ,CAACG,WAAW,CAAC,CAAC;MACnCH,QAAQ,CAACQ,MAAM,CAACL,WAAW,EAAE,CAAC,CAAC;IACjC;IAEArB,WAAW,CAACkB,QAAQ,CAAC;IACrBd,eAAe,CAACa,OAAO,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBC,oBAAoB,CAACzB,YAAY,EAAEJ,QAAQ,CAAC;EAC9C,CAAC;;EAED;EACA,MAAM8B,cAAc,GAAIC,OAAO,IAAK;IAClC;IACA,IAAIC,SAAS,GAAGxB,aAAa;IAC7B,IAAIyB,WAAW,GAAGvB,eAAe;IACjC,IAAIwB,WAAW,GAAG,CAAC,GAAGlC,QAAQ,CAAC;IAE/B+B,OAAO,CAACI,OAAO,CAAC,CAAC;MAAEC,MAAM;MAAE/C;IAAK,CAAC,KAAK;MACpC,IAAI+C,MAAM,KAAK,OAAO,EAAEJ,SAAS,EAAE;MACnC,IAAII,MAAM,KAAK,SAAS,EAAEH,WAAW,EAAE;MACvC,IAAIG,MAAM,KAAK,WAAW,EAAE;QAC1B;MAAA;IAEJ,CAAC,CAAC;IAEF3B,gBAAgB,CAACuB,SAAS,CAAC;IAC3BrB,kBAAkB,CAACsB,WAAW,CAAC;;IAE/B;IACA,IAAIA,WAAW,IAAI,CAAC,EAAE;MACpBI,UAAU,CAAC,MAAM;QACf1C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;;EAED;EACA,MAAM2C,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,aAAa,GAAGjC,aAAa,CAChCkC,MAAM,CAACJ,MAAM,IAAIA,MAAM,CAACA,MAAM,KAAK,WAAW,CAAC,CAC/CK,GAAG,CAACL,MAAM,IAAIA,MAAM,CAAC/C,IAAI,CAAC;;IAE7B;IACA,MAAMqD,kBAAkB,GAAGpC,aAAa,CAACkC,MAAM,CAACJ,MAAM,IAAIA,MAAM,CAACA,MAAM,KAAK,WAAW,CAAC;;IAExF;IACA,MAAMO,eAAe,GAAG,EAAE;IAC1B,IAAIxB,QAAQ,GAAG,CAAC,GAAGnB,QAAQ,CAAC;;IAE5B;IACA,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAID,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,QAAQ,CAACE,MAAM,CAAC;MAC/DsB,eAAe,CAACjB,IAAI,CAACP,QAAQ,CAACG,WAAW,CAAC,CAAC;MAC3CH,QAAQ,CAACQ,MAAM,CAACL,WAAW,EAAE,CAAC,CAAC;IACjC;;IAEA;IACA,MAAMsB,aAAa,GAAG,CAAC,GAAGL,aAAa,EAAE,GAAGI,eAAe,CAAC;;IAE5D;IACA1C,WAAW,CAACkB,QAAQ,CAAC;;IAErB;IACAZ,gBAAgB,CAACmC,kBAAkB,CAAC;;IAEpC;IACAL,UAAU,CAAC,MAAM;MACfR,oBAAoB,CAACe,aAAa,EAAEzB,QAAQ,CAAC;IAC/C,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACA,MAAMU,oBAAoB,GAAGA,CAACgB,kBAAkB,EAAEC,WAAW,KAAK;IAChE/B,YAAY,CAAC,IAAI,CAAC;;IAElB;IACA,IAAIgC,MAAM,CAACC,MAAM,EAAE;MACjB;MACA,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEvDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;QAC5BC,MAAM,EAAE,UAAU;QAClBN,MAAM;QACN7C,YAAY,EAAEyC,kBAAkB;QAChC7C,QAAQ,EAAE8C,WAAW;QACrBtC,aAAa;QAAE;QACfE,eAAe,CAAC;MAClB,CAAC,CAAC;MAEFqC,MAAM,CAACC,MAAM,CAACQ,IAAI,CAAC,YAAY,EAAE;QAC/BD,MAAM,EAAE,UAAU;QAClBN,MAAM;QACN7C,YAAY,EAAEyC,kBAAkB;QAChC7C,QAAQ,EAAE8C,WAAW;QACrBtC,aAAa,EAAEA,aAAa;QAC5BE,eAAe,EAAEA;MACnB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL2C,OAAO,CAACI,KAAK,CAAC,cAAc,CAAC;MAC7B1C,YAAY,CAAC,KAAK,CAAC;IACrB;;IAEA;IACAsB,UAAU,CAAC,MAAM;MACf,IAAIvB,SAAS,EAAE;QACbuC,OAAO,CAACI,KAAK,CAAC,YAAY,CAAC;QAC3B1C,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAM2C,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,UAAU,GAAGnD,aAAa;IAChC;IACAP,WAAW,CAAC,CACV,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B,CAAC;IACFM,gBAAgB,CAAC,CAAC,CAAC;IACnBE,kBAAkB,CAAC,CAAC,CAAC;IACrBJ,gBAAgB,CAAC,EAAE,CAAC;IACpBF,eAAe,CAAC,EAAE,CAAC;IACnBV,SAAS,CAACgE,UAAU,CAAC;EACvB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,kBACvB/E,OAAA;IAAKgF,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjF,OAAA;MAAAiF,QAAA,gBACEjF,OAAA;QAAAiF,QAAA,eACEjF,OAAA;UAAAiF,QAAA,gBACEjF,OAAA;YAAAiF,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbrF,OAAA;YAAAiF,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRrF,OAAA;QAAAiF,QAAA,EACGrE,OAAO,CAACgD,GAAG,CAAC,CAAC0B,MAAM,EAAEC,KAAK,kBACzBvF,OAAA;UAEEgF,SAAS,EAAEO,KAAK,KAAK1E,WAAW,GAAG,gBAAgB,GAAG,EAAG;UAAAoE,QAAA,gBAEzDjF,OAAA;YAAAiF,QAAA,EAAKK,MAAM,CAACE;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BrF,OAAA;YAAAiF,QAAA,EAAKK,MAAM,CAACG;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJlBC,MAAM,CAACE,QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKlB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACN;;EAED;EACA,MAAMK,MAAM,GAAG9E,OAAO,CAAC+E,IAAI,CAACL,MAAM,IAAIA,MAAM,CAACG,KAAK,IAAItF,aAAa,CAAC;EAEpElB,SAAS,CAAC,MAAM;IACd,IAAI8B,QAAQ,EAAE;MACZqB,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC;;EAEd;EACA,SAAS6E,IAAIA,CAAC;IAAEpF,IAAI;IAAE+C,MAAM;IAAEtB;EAAU,CAAC,EAAE;IAAAhB,EAAA;IACzC,MAAM4E,OAAO,GAAG3G,MAAM,CAAC,IAAI,CAAC;IAC5B,MAAM4G,YAAY,GAAG5G,MAAM,CAAC,IAAI,CAAC;IAEjCD,SAAS,CAAC,MAAM;MACd;MACA,OAAO4G,OAAO,CAACE,OAAO,IAAIF,OAAO,CAACE,OAAO,CAACC,UAAU,EAAE;QACpDH,OAAO,CAACE,OAAO,CAACE,WAAW,CAACJ,OAAO,CAACE,OAAO,CAACC,UAAU,CAAC;MACzD;;MAEA;MACA,MAAME,KAAK,GAAG,IAAI9G,KAAK,CAAC+G,KAAK,CAAC,CAAC;MAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIhH,KAAK,CAACiH,KAAK,CAAC,QAAQ,CAAC;;MAE5C;MACA,MAAMC,MAAM,GAAG,IAAIlH,KAAK,CAACmH,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;MAC5DD,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,CAAC;;MAErB;MACA,MAAMC,QAAQ,GAAG,IAAItH,KAAK,CAACuH,aAAa,CAAC;QAAEC,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MAC1EH,QAAQ,CAACI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MAC1BJ,QAAQ,CAACK,aAAa,CAAC7C,MAAM,CAAC8C,gBAAgB,CAAC;MAC/C,IAAInB,OAAO,CAACE,OAAO,EAAE;QACnBF,OAAO,CAACE,OAAO,CAACkB,WAAW,CAACP,QAAQ,CAACQ,UAAU,CAAC;MAClD;;MAEA;MACA,MAAMC,YAAY,GAAG,IAAI/H,KAAK,CAACgI,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;MAC1DlB,KAAK,CAACmB,GAAG,CAACF,YAAY,CAAC;MAEvB,MAAMG,gBAAgB,GAAG,IAAIlI,KAAK,CAACmI,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;MAChED,gBAAgB,CAACd,QAAQ,CAACgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACtCtB,KAAK,CAACmB,GAAG,CAACC,gBAAgB,CAAC;;MAE3B;MACA,MAAMG,aAAa,GAAG,IAAIrI,KAAK,CAACsI,aAAa,CAAC,CAAC;;MAE/C;MACA,MAAMC,WAAW,GAAGvH,UAAU,CAACI,IAAI,CAAC,CAACF,KAAK,CAACsH,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACrH,IAAI,KAAK+C,MAAM,CAAC;;MAElF;MACA;MACA,MAAMuE,SAAS,GAAG,EAAE;;MAEpB;MACA,IAAIC,UAAU,EAAEC,cAAc,EAAEC,YAAY;MAE5C,QAAOzH,IAAI;QACT,KAAK,KAAK;UACRuH,UAAU,GAAGzI,QAAQ;UACrB0I,cAAc,GAAGzI,YAAY;UAC7B0I,YAAY,GAAGzI,UAAU;UACzB;QACF,KAAK,QAAQ;UACXuI,UAAU,GAAGtI,WAAW;UACxBuI,cAAc,GAAGtI,eAAe;UAChCuI,YAAY,GAAGtI,aAAa;UAC5B;QACF,KAAK,OAAO;UACVoI,UAAU,GAAGnI,UAAU;UACvBoI,cAAc,GAAGnI,cAAc;UAC/BoI,YAAY,GAAGnI,YAAY;UAC3B;MACJ;;MAEA;MACA,IAAIoI,YAAY;MAChB,QAAO3E,MAAM;QACX,KAAK,OAAO;UACV2E,YAAY,GAAGH,UAAU;UACzB;QACF,KAAK,WAAW;UACdG,YAAY,GAAGF,cAAc;UAC7B;QACF,KAAK,SAAS;UACZE,YAAY,GAAGD,YAAY;UAC3B;MACJ;;MAEA;MACA;MACA,MAAME,UAAU,GAAG,CACjBJ,UAAU;MAAQ;MAClBC,cAAc;MAAI;MAClBC,YAAY;MAAM;MAClBF,UAAU;MAAQ;MAClBG,YAAY;MAAM;MAClBF,cAAc,CAAI;MAAA,CACnB;;MAED;MACAG,UAAU,CAAC7E,OAAO,CAAC/C,KAAK,IAAI;QAC1B,MAAM6H,OAAO,GAAGX,aAAa,CAACY,IAAI,CAAC9H,KAAK,CAAC;QACzC6H,OAAO,CAACE,UAAU,GAAGlJ,KAAK,CAACmJ,cAAc;QACzCT,SAAS,CAACjF,IAAI,CAAC,IAAIzD,KAAK,CAACoJ,oBAAoB,CAAC;UAC5C5E,GAAG,EAAEwE,OAAO;UACZK,SAAS,EAAE,GAAG;UACdC,SAAS,EAAE;QACb,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,IAAIvJ,KAAK,CAACwJ,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/C,MAAMC,IAAI,GAAG,IAAIzJ,KAAK,CAAC0J,IAAI,CAACH,QAAQ,EAAEb,SAAS,CAAC;MAChD5B,KAAK,CAACmB,GAAG,CAACwB,IAAI,CAAC;;MAEf;MACAA,IAAI,CAACE,QAAQ,CAACvB,GAAG,CACf9E,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGF,IAAI,CAACsG,EAAE,EACvBtG,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGF,IAAI,CAACsG,EAAE,EACvBtG,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGF,IAAI,CAACsG,EACvB,CAAC;;MAED;MACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;QACpBnD,YAAY,CAACC,OAAO,GAAGmD,qBAAqB,CAACD,OAAO,CAAC;QAErD,IAAIhH,SAAS,EAAE;UACb;UACA4G,IAAI,CAACE,QAAQ,CAACI,CAAC,IAAI,GAAG;UACtBN,IAAI,CAACE,QAAQ,CAACK,CAAC,IAAI,IAAI;UACvBP,IAAI,CAACE,QAAQ,CAACtC,CAAC,IAAI,IAAI;QACzB,CAAC,MAAM;UACL;UACA,MAAM4C,OAAO,GAAG,CAAC;UACjB,MAAMC,OAAO,GAAG,CAAC;UACjB,MAAMC,OAAO,GAAG,CAAC;;UAEjB;UACAV,IAAI,CAACE,QAAQ,CAACI,CAAC,IAAI,CAACE,OAAO,GAAGR,IAAI,CAACE,QAAQ,CAACI,CAAC,IAAI,GAAG;UACpDN,IAAI,CAACE,QAAQ,CAACK,CAAC,IAAI,CAACE,OAAO,GAAGT,IAAI,CAACE,QAAQ,CAACK,CAAC,IAAI,GAAG;UACpDP,IAAI,CAACE,QAAQ,CAACtC,CAAC,IAAI,CAAC8C,OAAO,GAAGV,IAAI,CAACE,QAAQ,CAACtC,CAAC,IAAI,GAAG;QACtD;QAEAC,QAAQ,CAAC8C,MAAM,CAACtD,KAAK,EAAEI,MAAM,CAAC;MAChC,CAAC;MAED2C,OAAO,CAAC,CAAC;;MAET;MACA,OAAO,MAAM;QACXQ,oBAAoB,CAAC3D,YAAY,CAACC,OAAO,CAAC;QAC1C,IAAIF,OAAO,CAACE,OAAO,IAAIW,QAAQ,CAACQ,UAAU,EAAE;UAC1CrB,OAAO,CAACE,OAAO,CAACE,WAAW,CAACS,QAAQ,CAACQ,UAAU,CAAC;QAClD;QACAyB,QAAQ,CAACe,OAAO,CAAC,CAAC;QAClB5B,SAAS,CAACxE,OAAO,CAACqG,QAAQ,IAAIA,QAAQ,CAACD,OAAO,CAAC,CAAC,CAAC;QACjDhD,QAAQ,CAACgD,OAAO,CAAC,CAAC;MACpB,CAAC;IACH,CAAC,EAAE,CAACzH,SAAS,EAAEsB,MAAM,EAAE/C,IAAI,CAAC,CAAC;IAE7B,oBACER,OAAA;MAAKgF,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCjF,OAAA;QAAK4J,GAAG,EAAE/D,OAAQ;QAACb,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDrF,OAAA;QAAKgF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAC/B1B,MAAM,KAAK,OAAO,iBAAIvD,OAAA;UAAMgF,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC7D9B,MAAM,KAAK,SAAS,iBAAIvD,OAAA;UAAMgF,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACjE9B,MAAM,KAAK,WAAW,iBAAIvD,OAAA;UAAMgF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EAAApE,EAAA,CAnKS2E,IAAI;EAoKb3G,SAAS,CAAC,MAAM;IACd,IAAIiF,MAAM,CAACC,MAAM,EAAE;MACjBK,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;MAE5B;MACA,MAAMoF,gBAAgB,GAAIC,IAAI,IAAK;QACjCtF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEqF,IAAI,CAAC;QAE9B,IAAIA,IAAI,CAACpF,MAAM,KAAK,UAAU,EAAE;UAC9BF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEqF,IAAI,CAAC5G,OAAO,CAAC;;UAEvC;UACAxB,gBAAgB,CAACoI,IAAI,CAAC5G,OAAO,CAAC;;UAE9B;UACAM,UAAU,CAAC,MAAM;YACfP,cAAc,CAAC6G,IAAI,CAAC5G,OAAO,CAAC;YAC5BhB,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAEDgC,MAAM,CAACC,MAAM,CAAC4F,EAAE,CAAC,YAAY,EAAEF,gBAAgB,CAAC;MAEhD,OAAO,MAAM;QACXrF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5BP,MAAM,CAACC,MAAM,CAAC6F,GAAG,CAAC,YAAY,EAAEH,gBAAgB,CAAC;MACnD,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAAC9I,QAAQ,EAAE;IACb,oBACEf,OAAA;MAAKgF,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzBF,gBAAgB,CAAC,CAAC,eACnB/E,OAAA;QAAKgF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BjF,OAAA;UAAAiF,QAAA,GAAKrE,OAAO,CAACC,WAAW,CAAC,CAAC2E,QAAQ,EAAC,6CAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EAEL5D,aAAa,CAACe,MAAM,GAAG,CAAC,iBACvBxC,OAAA,CAAAE,SAAA;QAAA+E,QAAA,gBACEjF,OAAA;UAAKgF,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClCjF,OAAA;YAAKgF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,gBAC5CjF,OAAA;cAAAiF,QAAA,GAAK,6BAAO,EAACtD,aAAa;YAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjCrF,OAAA;cAAAiF,QAAA,GAAK,6BAAO,EAACpD,eAAe,EAAC,IAAE;YAAA;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrF,OAAA;UAAKgF,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BxD,aAAa,CAACmC,GAAG,CAAC,CAACL,MAAM,EAAEgC,KAAK,kBAC/BvF,OAAA,CAAC4F,IAAI;YAEHpF,IAAI,EAAE+C,MAAM,CAAC/C,IAAK;YAClB+C,MAAM,EAAEA,MAAM,CAACA,MAAO;YACtBtB,SAAS,EAAEA;UAAU,GAHhBsD,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;EAEA,oBACErF,OAAA;IAAKgF,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzBF,gBAAgB,CAAC,CAAC,EAElBW,MAAM,gBACL1F,OAAA;MAAKgF,SAAS,EAAC,iCAAiC;MAAAC,QAAA,eAC9CjF,OAAA;QAAAiF,QAAA,GAAI,eAAG,EAACS,MAAM,CAACF,QAAQ,EAAC,uEAAc;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENrF,OAAA,CAAAE,SAAA;MAAA+E,QAAA,gBACEjF,OAAA;QAAKgF,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCjF,OAAA;UAAKgF,SAAS,EAAC,+BAA+B;UAAAC,QAAA,gBAC5CjF,OAAA;YAAAiF,QAAA,GAAK,6BAAO,EAACtD,aAAa;UAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjCrF,OAAA;YAAAiF,QAAA,GAAK,6BAAO,EAACpD,eAAe,EAAC,IAAE;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENrF,OAAA;QAAKgF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BhD,SAAS,gBACRjC,OAAA;UAAKgF,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BjF,OAAA;YAAAiF,QAAA,EAAG;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,GAEN5D,aAAa,CAACe,MAAM,GAAG,CAAC,GACtBf,aAAa,CAACmC,GAAG,CAAC,CAACL,MAAM,EAAEgC,KAAK,kBAC9BvF,OAAA,CAAC4F,IAAI;UAEHpF,IAAI,EAAE+C,MAAM,CAAC/C,IAAK;UAClB+C,MAAM,EAAEA,MAAM,CAACA,MAAO;UACtBtB,SAAS,EAAEA;QAAU,GAHhBsD,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACF,CAAC,GAEF9D,YAAY,CAACiB,MAAM,GAAG,CAAC,iBACrBxC,OAAA;UACEgF,SAAS,EAAC,iBAAiB;UAC3BiF,OAAO,EAAElH,UAAW;UACpBmH,QAAQ,EAAEjI,SAAU;UAAAgD,QAAA,EACrB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAGb;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEL5D,aAAa,CAACe,MAAM,GAAG,CAAC,IAAI,CAACkD,MAAM,IAAI,CAACzD,SAAS,iBAChDjC,OAAA;QAAKgF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBjF,OAAA;UACEgF,SAAS,EAAC,sBAAsB;UAChCiF,OAAO,EAAExG,cAAe;UACxByG,QAAQ,EAAErI,eAAe,IAAI,CAAE;UAAAoD,QAAA,EAChC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrF,OAAA;UACEgF,SAAS,EAAC,iBAAiB;UAC3BiF,OAAO,EAAEpF,UAAW;UAAAI,QAAA,EACrB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrE,GAAA,CApeQL,UAAU;AAAAwJ,EAAA,GAAVxJ,UAAU;AAsenB,eAAeA,UAAU;AAAC,IAAAwJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}