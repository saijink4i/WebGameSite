{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../../styles/ZombieDice.css';\n\n// 상수 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13; // 승리 점수\nconst INITIAL_DICE_POOL = ['RED', 'RED', 'RED', 'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'];\nconst ZombieDice = ({\n  players,\n  isHost,\n  roomId\n}) => {\n  _s();\n  // 게임 상태 관리\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [dicePool, setDicePool] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [scores, setScores] = useState({});\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [winner, setWinner] = useState(null);\n\n  // 소켓 참조\n  const socket = window.socket;\n\n  // 로그 출력 함수\n  const log = (message, data) => {\n    if (data) {\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\n    } else {\n      console.log(`[좀비다이스 클라이언트] ${message}`);\n    }\n  };\n\n  // 게임 시작 처리\n  const handleGameStart = () => {\n    log('게임 시작 요청');\n    if (!socket) {\n      log('오류: 소켓 연결이 없습니다');\n      return;\n    }\n\n    // 게임 상태 초기화\n    setGameStarted(true);\n\n    // 첫 번째 플레이어 턴으로 설정\n    setCurrentPlayerIndex(0);\n\n    // 초기 점수 설정\n    const initialScores = {};\n    players.forEach((player, index) => {\n      initialScores[player.id] = 0;\n    });\n    setScores(initialScores);\n\n    // 주사위 풀 초기화\n    resetDicePool();\n\n    // 다른 플레이어들에게 게임 시작 알림\n    socket.emit('gameStarted', {\n      roomId,\n      players\n    });\n    log('게임 시작됨');\n  };\n\n  // 주사위 풀 초기화\n  const resetDicePool = () => {\n    setDicePool([...INITIAL_DICE_POOL]);\n    log('주사위 풀 초기화');\n  };\n\n  // 게임 이벤트 리스너 설정\n  useEffect(() => {\n    if (!socket) {\n      log('소켓 연결이 없습니다');\n      return;\n    }\n\n    // 게임 시작 이벤트 수신\n    socket.on('gameStarted', data => {\n      log('게임 시작 이벤트 수신:', data);\n      const {\n        players\n      } = data;\n\n      // 게임 상태 업데이트\n      setGameStarted(true);\n\n      // 내 차례인지 확인\n      const currentPlayerIndex = players.findIndex(p => p.id === socket.id);\n      setCurrentPlayerIndex(currentPlayerIndex);\n      log(`게임이 시작되었습니다. ${currentPlayerIndex !== -1 ? '내 차례입니다.' : '다른 플레이어의 차례입니다.'}`);\n    });\n\n    // 주사위 굴림 결과 수신\n    socket.on('diceRolled', data => {\n      log('주사위 굴림 결과 수신:', data);\n      const {\n        results,\n        brains,\n        shotguns,\n        updatedPool,\n        totalBrains,\n        totalShotguns\n      } = data;\n\n      // 주사위 결과 표시\n      setRolledResults(results);\n\n      // 내 차례인 경우 점수 업데이트\n      if (currentPlayerIndex !== -1) {\n        setCurrentBrains(totalBrains || brains);\n        setCurrentShotguns(totalShotguns || shotguns);\n        setDicePool(updatedPool);\n      }\n\n      // 애니메이션 종료\n      setIsRolling(false);\n    });\n\n    // 턴 변경 이벤트 수신\n    socket.on('turnChanged', data => {\n      log('턴 변경 이벤트 수신:', data);\n      const {\n        nextPlayerIndex\n      } = data;\n\n      // 점수 업데이트\n      setScores(prevScores => ({\n        ...prevScores,\n        [players[nextPlayerIndex].id]: prevScores[players[nextPlayerIndex].id] + currentBrains\n      }));\n\n      // 다음 플레이어 설정\n      setCurrentPlayerIndex(nextPlayerIndex);\n\n      // 턴 초기화\n      resetTurn();\n    });\n\n    // 정리 함수\n    return () => {\n      socket.off('gameStarted');\n      socket.off('diceRolled');\n      socket.off('turnChanged');\n    };\n  }, [socket, players]);\n\n  // 턴 초기화\n  const resetTurn = () => {\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    log('턴 초기화');\n  };\n\n  // 주사위 굴리기\n  const handleRollDice = () => {\n    if (!socket || isRolling || dicePool.length < 3) return;\n    log('주사위 굴리기');\n\n    // 주사위 굴림 상태 설정\n    setIsRolling(true);\n\n    // 서버에 주사위 굴리기 요청\n    socket.emit('rollDice', {\n      roomId,\n      dicePool\n    });\n  };\n\n  // 턴 종료\n  const handleEndTurn = () => {\n    if (!socket || isRolling) return;\n    log('턴 종료');\n\n    // 점수 업데이트\n    if (currentShotguns < 3) {\n      const currentPlayerId = players[currentPlayerIndex].id;\n      setScores(prevScores => ({\n        ...prevScores,\n        [currentPlayerId]: prevScores[currentPlayerId] + currentBrains\n      }));\n    }\n\n    // 다음 플레이어로 턴 변경\n    setCurrentPlayerIndex(prevIndex => (prevIndex + 1) % players.length);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setDicePool([...INITIAL_DICE_POOL]);\n    setRolledResults([]);\n\n    // 서버에 턴 종료 요청\n    socket.emit('endTurn', {\n      roomId,\n      keepScore: currentShotguns < 3\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC880\\uBE44 \\uB2E4\\uC774\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC01\\uC790 \\uC880\\uBE44\\uAC00 \\uB418\\uC5B4 \\uB1CC\\uB97C \\uB9CE\\uC774 \\uBA39\\uB294 \\uC0AC\\uB78C\\uC774 \\uC2B9\\uB9AC\\uD558\\uB294 \\uAC8C\\uC784\\uC785\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleGameStart,\n        children: \"\\uAC8C\\uC784 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert alert-info\",\n        children: \"\\uBC29\\uC7A5\\uC774 \\uAC8C\\uC784\\uC744 \\uC2DC\\uC791\\uD558\\uAE30\\uB97C \\uAE30\\uB2E4\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-board mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-3\",\n          children: \"\\uC810\\uC218\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC810\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: currentPlayerIndex === index ? 'table-active' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.nickname, \" \", player.id === socket.id && '(나)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: scores[player.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area\",\n        children: [rolledResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `dice-result result-${result.result.toLowerCase()}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-type ${result.type.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/zombie-dice/faces/${result.type.toLowerCase()}-${result.result.toLowerCase()}.png`,\n                alt: `${result.result}`,\n                className: \"dice-result-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-result-text\",\n                children: result.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uACBD\\uACE0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), \" \\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1 \\uBC1C\\uACAC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-status mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704: \", dicePool.length, \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-counts\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'RED').length, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'YELLOW').length, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'GREEN').length, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: players[currentPlayerIndex].id === socket.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleRollDice,\n              disabled: isRolling || dicePool.length < 3,\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: handleEndTurn,\n              disabled: isRolling,\n              children: \"\\uBA48\\uCD94\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"sP2NUMPTRSfBlnP/B0AywlPDMPc=\");\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","INITIAL_DICE_POOL","ZombieDice","players","isHost","roomId","_s","gameStarted","setGameStarted","currentPlayerIndex","setCurrentPlayerIndex","dicePool","setDicePool","rolledResults","setRolledResults","isRolling","setIsRolling","scores","setScores","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","winner","setWinner","socket","window","log","message","data","console","handleGameStart","initialScores","forEach","player","index","id","resetDicePool","emit","on","findIndex","p","results","brains","shotguns","updatedPool","totalBrains","totalShotguns","nextPlayerIndex","prevScores","resetTurn","off","handleRollDice","length","handleEndTurn","currentPlayerId","prevIndex","keepScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","nickname","result","toLowerCase","type","src","alt","filter","d","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport '../../styles/ZombieDice.css';\r\n\r\n// 상수 정의\r\nconst WINNING_SCORE = 13;  // 승리 점수\r\nconst INITIAL_DICE_POOL = [\r\n  'RED', 'RED', 'RED',\r\n  'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW',\r\n  'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'\r\n];\r\n\r\nconst ZombieDice = ({ players, isHost, roomId }) => {\r\n  // 게임 상태 관리\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [scores, setScores] = useState({});\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n  \r\n  // 소켓 참조\r\n  const socket = window.socket;\r\n  \r\n  // 로그 출력 함수\r\n  const log = (message, data) => {\r\n    if (data) {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\r\n    } else {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`);\r\n    }\r\n  };\r\n  \r\n  // 게임 시작 처리\r\n  const handleGameStart = () => {\r\n    log('게임 시작 요청');\r\n    \r\n    if (!socket) {\r\n      log('오류: 소켓 연결이 없습니다');\r\n      return;\r\n    }\r\n    \r\n    // 게임 상태 초기화\r\n    setGameStarted(true);\r\n    \r\n    // 첫 번째 플레이어 턴으로 설정\r\n    setCurrentPlayerIndex(0);\r\n    \r\n    // 초기 점수 설정\r\n    const initialScores = {};\r\n    players.forEach((player, index) => {\r\n      initialScores[player.id] = 0;\r\n    });\r\n    setScores(initialScores);\r\n    \r\n    // 주사위 풀 초기화\r\n    resetDicePool();\r\n    \r\n    // 다른 플레이어들에게 게임 시작 알림\r\n    socket.emit('gameStarted', { roomId, players });\r\n    \r\n    log('게임 시작됨');\r\n  };\r\n  \r\n  // 주사위 풀 초기화\r\n  const resetDicePool = () => {\r\n    setDicePool([...INITIAL_DICE_POOL]);\r\n    log('주사위 풀 초기화');\r\n  };\r\n  \r\n  // 게임 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      log('소켓 연결이 없습니다');\r\n      return;\r\n    }\r\n    \r\n    // 게임 시작 이벤트 수신\r\n    socket.on('gameStarted', (data) => {\r\n      log('게임 시작 이벤트 수신:', data);\r\n      \r\n      const { players } = data;\r\n      \r\n      // 게임 상태 업데이트\r\n      setGameStarted(true);\r\n      \r\n      // 내 차례인지 확인\r\n      const currentPlayerIndex = players.findIndex(p => p.id === socket.id);\r\n      setCurrentPlayerIndex(currentPlayerIndex);\r\n      \r\n      log(`게임이 시작되었습니다. ${currentPlayerIndex !== -1 ? '내 차례입니다.' : '다른 플레이어의 차례입니다.'}`);\r\n    });\r\n    \r\n    // 주사위 굴림 결과 수신\r\n    socket.on('diceRolled', (data) => {\r\n      log('주사위 굴림 결과 수신:', data);\r\n      \r\n      const { \r\n        results, brains, shotguns, \r\n        updatedPool, totalBrains, totalShotguns \r\n      } = data;\r\n      \r\n      // 주사위 결과 표시\r\n      setRolledResults(results);\r\n      \r\n      // 내 차례인 경우 점수 업데이트\r\n      if (currentPlayerIndex !== -1) {\r\n        setCurrentBrains(totalBrains || brains);\r\n        setCurrentShotguns(totalShotguns || shotguns);\r\n        setDicePool(updatedPool);\r\n      }\r\n      \r\n      // 애니메이션 종료\r\n      setIsRolling(false);\r\n    });\r\n    \r\n    // 턴 변경 이벤트 수신\r\n    socket.on('turnChanged', (data) => {\r\n      log('턴 변경 이벤트 수신:', data);\r\n      \r\n      const { nextPlayerIndex } = data;\r\n      \r\n      // 점수 업데이트\r\n      setScores(prevScores => ({\r\n        ...prevScores,\r\n        [players[nextPlayerIndex].id]: prevScores[players[nextPlayerIndex].id] + currentBrains\r\n      }));\r\n      \r\n      // 다음 플레이어 설정\r\n      setCurrentPlayerIndex(nextPlayerIndex);\r\n      \r\n      // 턴 초기화\r\n      resetTurn();\r\n    });\r\n    \r\n    // 정리 함수\r\n    return () => {\r\n      socket.off('gameStarted');\r\n      socket.off('diceRolled');\r\n      socket.off('turnChanged');\r\n    };\r\n  }, [socket, players]);\r\n  \r\n  // 턴 초기화\r\n  const resetTurn = () => {\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    log('턴 초기화');\r\n  };\r\n  \r\n  // 주사위 굴리기\r\n  const handleRollDice = () => {\r\n    if (!socket || isRolling || dicePool.length < 3) return;\r\n    \r\n    log('주사위 굴리기');\r\n    \r\n    // 주사위 굴림 상태 설정\r\n    setIsRolling(true);\r\n    \r\n    // 서버에 주사위 굴리기 요청\r\n    socket.emit('rollDice', {\r\n      roomId,\r\n      dicePool\r\n    });\r\n  };\r\n  \r\n  // 턴 종료\r\n  const handleEndTurn = () => {\r\n    if (!socket || isRolling) return;\r\n    \r\n    log('턴 종료');\r\n    \r\n    // 점수 업데이트\r\n    if (currentShotguns < 3) {\r\n      const currentPlayerId = players[currentPlayerIndex].id;\r\n      setScores(prevScores => ({\r\n        ...prevScores,\r\n        [currentPlayerId]: prevScores[currentPlayerId] + currentBrains\r\n      }));\r\n    }\r\n    \r\n    // 다음 플레이어로 턴 변경\r\n    setCurrentPlayerIndex((prevIndex) => (prevIndex + 1) % players.length);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setDicePool([...INITIAL_DICE_POOL]);\r\n    setRolledResults([]);\r\n    \r\n    // 서버에 턴 종료 요청\r\n    socket.emit('endTurn', {\r\n      roomId,\r\n      keepScore: currentShotguns < 3\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {!gameStarted ? (\r\n        <div className=\"text-center mb-4\">\r\n          <h2>좀비 다이스</h2>\r\n          <p>각자 좀비가 되어 뇌를 많이 먹는 사람이 승리하는 게임입니다!</p>\r\n          {isHost && (\r\n            <button \r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={handleGameStart}\r\n            >\r\n              게임 시작\r\n            </button>\r\n          )}\r\n          {!isHost && (\r\n            <p className=\"alert alert-info\">\r\n              방장이 게임을 시작하기를 기다리고 있습니다.\r\n            </p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/* 게임 화면 내용 */}\r\n          <div className=\"score-board mb-4\">\r\n            <h3 className=\"text-center mb-3\">점수판</h3>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>플레이어</th>\r\n                  <th>점수</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {players.map((player, index) => (\r\n                  <tr key={player.id} className={currentPlayerIndex === index ? 'table-active' : ''}>\r\n                    <td>{player.nickname} {player.id === socket.id && '(나)'}</td>\r\n                    <td>{scores[player.id]}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          {/* 주사위 영역 */}\r\n          <div className=\"dice-area\">\r\n            {/* 주사위 결과 영역 */}\r\n            {rolledResults.length > 0 && (\r\n              <div className=\"rolled-results mb-3\">\r\n                <h4>주사위 결과:</h4>\r\n                <div className=\"dice-results-container\">\r\n                  {rolledResults.map((result, index) => (\r\n                    <div \r\n                      key={index} \r\n                      className={`dice-result result-${result.result.toLowerCase()}`}\r\n                    >\r\n                      <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                      <img \r\n                        src={`/zombie-dice/faces/${result.type.toLowerCase()}-${result.result.toLowerCase()}.png`} \r\n                        alt={`${result.result}`}\r\n                        className=\"dice-result-image\"\r\n                      />\r\n                      <div className=\"dice-result-text\">{result.result}</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 경고 메시지 */}\r\n            {currentShotguns >= 3 && (\r\n              <div className=\"alert alert-danger\">\r\n                <strong>경고:</strong> 총이 3개 이상 발견되었습니다! 턴을 종료해야 합니다.\r\n              </div>\r\n            )}\r\n            \r\n            {/* 주사위 풀 상태 */}\r\n            <div className=\"dice-pool-status mb-3\">\r\n              <h4>남은 주사위: {dicePool.length}개</h4>\r\n              <div className=\"dice-counts\">\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample red\"></div>\r\n                  <span>빨간 주사위: {dicePool.filter(d => d === 'RED').length}개</span>\r\n                </div>\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample yellow\"></div>\r\n                  <span>노란 주사위: {dicePool.filter(d => d === 'YELLOW').length}개</span>\r\n                </div>\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample green\"></div>\r\n                  <span>녹색 주사위: {dicePool.filter(d => d === 'GREEN').length}개</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* 조작 버튼 */}\r\n            <div className=\"controls\">\r\n              {players[currentPlayerIndex].id === socket.id ? (\r\n                <>\r\n                  <button \r\n                    className=\"btn btn-primary\" \r\n                    onClick={handleRollDice}\r\n                    disabled={isRolling || dicePool.length < 3}\r\n                  >\r\n                    주사위 굴리기\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-warning\" \r\n                    onClick={handleEndTurn}\r\n                    disabled={isRolling}\r\n                  >\r\n                    멈추기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <p>다른 플레이어의 차례입니다...</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}