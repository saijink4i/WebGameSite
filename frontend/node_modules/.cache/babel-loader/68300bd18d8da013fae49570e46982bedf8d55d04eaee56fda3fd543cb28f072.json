{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\nimport * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    faces: [{\n      image: redBrain,\n      type: 'SHOTGUN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'BRAIN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'BRAIN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// 주사위 색상 가져오기\nconst getDiceColor = type => {\n  if (type === 'RED') return 0xff0000;\n  if (type === 'YELLOW') return 0xffff00;\n  if (type === 'GREEN') return 0x00ff00;\n  return 0xffffff;\n};\n\n// 주사위 타입에 따른 텍스처 가져오기\nconst getTexturesForType = type => {\n  if (type === 'RED') {\n    return [redBrain, redShotgun, redFootsteps, redBrain, redShotgun, redFootsteps];\n  } else if (type === 'YELLOW') {\n    return [yellowBrain, yellowShotgun, yellowFootsteps, yellowBrain, yellowShotgun, yellowFootsteps];\n  } else if (type === 'GREEN') {\n    return [greenBrain, greenShotgun, greenFootsteps, greenBrain, greenShotgun, greenFootsteps];\n  }\n  return [];\n};\n\n// 결과에 맞게 주사위 회전 조정\nconst adjustDiceRotation = (result, api, ref) => {\n  let targetRotation = [0, 0, 0];\n\n  // 결과에 따라 주사위 회전 설정\n  if (result === 'BRAIN') {\n    targetRotation = [0, 0, 0]; // 뇌가 위로 오도록\n  } else if (result === 'SHOTGUN') {\n    targetRotation = [0, Math.PI / 2, 0]; // 총이 위로 오도록\n  } else if (result === 'FOOTSTEPS') {\n    targetRotation = [Math.PI / 2, 0, 0]; // 발자국이 위로 오도록\n  }\n\n  // 주사위 회전 설정\n  if (ref.current) {\n    ref.current.rotation.x = targetRotation[0];\n    ref.current.rotation.y = targetRotation[1];\n    ref.current.rotation.z = targetRotation[2];\n  }\n\n  // 물리 속성 정지\n  api.velocity.set(0, 0, 0);\n  api.angularVelocity.set(0, 0, 0);\n};\n\n// 결과 타입에 따른 클래스 이름 가져오기\nconst getResultClass = result => {\n  if (result === 'BRAIN') return 'result-brain';\n  if (result === 'SHOTGUN') return 'result-shotgun';\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\n  return '';\n};\n\n// 모달 스타일을 상수로 컴포넌트 외부에 정의\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '80%',\n  maxWidth: '600px',\n  backgroundColor: 'white',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n  zIndex: 1000,\n  padding: '20px'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: 999\n};\n\n// 바닥 컴포넌트\nconst Floor = () => {\n  _s();\n  const [ref] = usePlane(() => ({\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -2, 0],\n    type: 'Static'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [20, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shadowMaterial\", {\n      color: \"#171717\",\n      transparent: true,\n      opacity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n// 물리 기반 주사위 컴포넌트\n_s(Floor, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n  return [usePlane];\n});\n_c = Floor;\nconst PhysicalDice = ({\n  type,\n  result,\n  isRolling,\n  position\n}) => {\n  _s2();\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    position: position || [0, 5, 0],\n    rotation: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI],\n    args: [1, 1, 1],\n    allowSleep: true,\n    sleepSpeedLimit: 0.1,\n    sleepTimeLimit: 1\n  }));\n\n  // 텍스처 로드\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\n\n  // 주사위 색상 설정\n  const diceColor = getDiceColor(type);\n\n  // 주사위 굴리기 효과\n  useEffect(() => {\n    if (isRolling) {\n      // 주사위 위치 초기화\n      api.position.set((position === null || position === void 0 ? void 0 : position[0]) || 0, (position === null || position === void 0 ? void 0 : position[1]) || 5, (position === null || position === void 0 ? void 0 : position[2]) || 0);\n\n      // 랜덤한 힘과 회전으로 주사위 던지기\n      api.velocity.set((Math.random() - 0.5) * 5, 3 + Math.random() * 2, (Math.random() - 0.5) * 5);\n      api.angularVelocity.set(Math.random() * 10 - 5, Math.random() * 10 - 5, Math.random() * 10 - 5);\n    } else {\n      // 결과에 맞게 주사위 회전 조정\n      adjustDiceRotation(result, api, ref);\n    }\n  }, [isRolling, api, ref, result, position]);\n\n  // 주사위 회전 상태 모니터링\n  const [rotation, setRotation] = useState([0, 0, 0]);\n\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\n  useFrame(() => {\n    // 주사위 회전 상태 업데이트\n    if (ref.current) {\n      setRotation([ref.current.rotation.x, ref.current.rotation.y, ref.current.rotation.z]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    castShadow: true,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[0],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[1],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[2],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[3],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[4],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[5],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 컨테이너 컴포넌트\n_s2(PhysicalDice, \"1rcDKM9NLbavOIHBYrEOjOjSUL0=\", false, function () {\n  return [useBox, useLoader, useFrame];\n});\n_c2 = PhysicalDice;\nconst DiceContainer = ({\n  type,\n  result,\n  isRolling\n}) => {\n  _s3();\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const handleAnimationComplete = () => {\n    setAnimationComplete(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-3d-container ${type.toLowerCase()}-dice-container`,\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        shadows: true,\n        camera: {\n          position: [0, 2, 5],\n          fov: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [10, 10, 10],\n          intensity: 0.8,\n          castShadow: true,\n          \"shadow-mapSize-width\": 1024,\n          \"shadow-mapSize-height\": 1024\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: null,\n          children: /*#__PURE__*/_jsxDEV(Physics, {\n            gravity: [0, -9.8, 0],\n            defaultContactMaterial: {\n              restitution: 0.3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PhysicalDice, {\n              type: type,\n              result: result,\n              isRolling: isRolling,\n              position: [0, 5, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`,\n      children: [result === 'BRAIN' && '뇌', result === 'SHOTGUN' && '총', result === 'FOOTSTEPS' && '발자국']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\n_s3(DiceContainer, \"Vm61eBUTB3kLEMMMnioQCEBlDHU=\");\n_c3 = DiceContainer;\nconst Dice = ({\n  type,\n  result,\n  isRolling\n}) => {\n  return /*#__PURE__*/_jsxDEV(DiceContainer, {\n    type: type,\n    result: result,\n    isRolling: isRolling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 10\n  }, this);\n};\n\n// 주사위 풀 상태 컴포넌트\n_c4 = Dice;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 주사위 타입별 개수 계산\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: redCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uBE68\\uAC15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: yellowCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uB178\\uB791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: greenCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uCD08\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-total text-center mt-2\",\n      children: [\"\\uCD1D \", dicePool.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n\n// 메인 ZombieDice 컴포넌트\n_c5 = DicePoolStatus;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s4();\n  var _players$currentTurn;\n  // 상태 정의\n  const [dicePool, setDicePool] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [isRolling, setIsRolling] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // 주사위 굴리기 모달 상태\n  const [showRollingModal, setShowRollingModal] = useState(false);\n\n  // 게임 시작 시 주사위 풀 초기화\n  useEffect(() => {\n    if (isMyTurn && !dicePool.length) {\n      // 주사위 풀 초기화\n      const initialDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n      setDicePool(initialDicePool);\n    }\n  }, [isMyTurn, dicePool.length]);\n\n  // 점수판 렌더링 함수\n  const renderScoreBoard = () => {\n    if (!players || players.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mb-3\",\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC21C\\uC11C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC810\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index === currentTurn ? 'table-active' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.nickname, index === currentTurn && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ms-2 badge bg-primary\",\n                  children: \"\\uD134\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.score, \" / \", WINNING_SCORE]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 주사위 굴리기 요청 함수\n  const handleRoll = () => {\n    console.log('주사위 굴리기 요청');\n\n    // 주사위 굴리기 상태 설정\n    setIsRolling(true);\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n\n      // 주사위 선택 요청\n      window.socket.emit('gameAction', {\n        action: 'selectDice',\n        roomId\n      });\n\n      // 주사위 선택 후 자동으로 굴리기 모달 표시\n      setTimeout(() => {\n        setShowRollingModal(true);\n\n        // 주사위 굴리기 결과 생성 및 처리\n        setTimeout(() => {\n          if (selectedDice && selectedDice.length > 0) {\n            // 주사위 결과 생성\n            const results = selectedDice.map(diceType => {\n              // 주사위 타입에 따른 면 정보 가져오기\n              const diceFaces = DICE_FACES[diceType].faces;\n\n              // 랜덤하게 면 선택 (1-6)\n              const faceIndex = Math.floor(Math.random() * 6);\n              const selectedFace = diceFaces[faceIndex];\n              return {\n                type: diceType,\n                result: selectedFace.type,\n                faceIndex: faceIndex\n              };\n            });\n\n            // 결과 처리\n            handleRollComplete(results);\n          }\n        }, 2000); // 2초 후 결과 처리\n      }, 500); // 주사위 선택 이벤트가 처리될 시간을 주기 위해 약간의 지연 추가\n    } else {\n      console.error('소켓 연결이 없습니다!');\n      setIsRolling(false);\n    }\n  };\n\n  // 주사위 굴리기 결과 처리 함수\n  const handleRollComplete = results => {\n    console.log('주사위 굴리기 결과:', results);\n\n    // 결과 저장\n    setRolledResults(results);\n\n    // 결과 계산\n    let newBrains = currentBrains;\n    let newShotguns = currentShotguns;\n    results.forEach(({\n      result\n    }) => {\n      if (result === 'BRAIN') newBrains++;\n      if (result === 'SHOTGUN') newShotguns++;\n    });\n\n    // 서버에 결과 전송\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDiceResult',\n        roomId,\n        results,\n        brains: newBrains,\n        shotguns: newShotguns\n      });\n    }\n\n    // 상태 업데이트\n    setCurrentBrains(newBrains);\n    setCurrentShotguns(newShotguns);\n\n    // 모달 닫기 (약간의 딜레이 후)\n    setTimeout(() => {\n      setShowRollingModal(false);\n      setIsRolling(false);\n    }, 500);\n  };\n\n  // 계속하기 버튼 핸들러\n  const handleContinue = () => {\n    // 발자국 결과인 주사위만 필터링\n    const footstepsDice = rolledResults.filter(result => result.result === 'FOOTSTEPS').map(result => result.type);\n\n    // 계속 진행 요청\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'continueTurn',\n        roomId,\n        footstepsDice\n      });\n    }\n\n    // 결과 초기화\n    setRolledResults([]);\n  };\n\n  // 멈추기 버튼 핸들러\n  const handleStop = () => {\n    // 턴 종료 요청\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'endTurn',\n        roomId,\n        score: currentShotguns >= 3 ? 0 : currentBrains\n      });\n    }\n\n    // 상태 초기화\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    setSelectedDice([]);\n  };\n\n  // 주사위 굴리기 모달 컴포넌트\n  const DiceRollingModal = ({\n    selectedDice,\n    onRollComplete,\n    onClose\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: overlayStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-rolling-scene\",\n          children: /*#__PURE__*/_jsxDEV(Canvas, {\n            shadows: true,\n            camera: {\n              position: [0, 5, 10],\n              fov: 50\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n              intensity: 0.5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n              position: [10, 10, 10],\n              intensity: 0.8,\n              castShadow: true,\n              \"shadow-mapSize-width\": 1024,\n              \"shadow-mapSize-height\": 1024\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: null,\n              children: /*#__PURE__*/_jsxDEV(Physics, {\n                gravity: [0, -9.8, 0],\n                defaultContactMaterial: {\n                  restitution: 0.3\n                },\n                children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this), selectedDice.map((diceType, index) => /*#__PURE__*/_jsxDEV(PhysicalDice, {\n                  type: diceType,\n                  result: 'BRAIN',\n                  isRolling: true,\n                  position: [index * 2 - selectedDice.length + 1, 5 + index * 0.5, 0]\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 서버 이벤트 핸들러\n  useEffect(() => {\n    if (window.socket) {\n      // 게임 시작 이벤트 리스너\n      const handleGameStarted = data => {\n        console.log('게임 시작됨:', data);\n        setGameStarted(true);\n\n        // 주사위 풀 초기화 추가\n        if (data.gameState && data.gameState.dicePool) {\n          setDicePool(data.gameState.dicePool);\n        }\n      };\n\n      // 턴 시작 이벤트 리스너\n      const handleTurnStarted = data => {\n        console.log('턴 시작됨:', data);\n        // 주사위 풀 설정 - 명시적으로 확인\n        if (data.dicePool && Array.isArray(data.dicePool)) {\n          setDicePool(data.dicePool);\n        } else {\n          // 주사위 풀이 없거나 배열이 아닌 경우 기본값 설정\n          const defaultDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n          setDicePool(defaultDicePool);\n        }\n        setCurrentBrains(0);\n        setCurrentShotguns(0);\n      };\n\n      // 주사위 선택 이벤트 리스너\n      const handleDiceSelected = data => {\n        console.log('주사위 선택됨:', data);\n        setSelectedDice(data.selectedDice || []);\n        setDicePool(data.dicePool || []);\n      };\n\n      // 주사위 굴리기 결과 이벤트 리스너\n      const handleRollDiceResult = data => {\n        console.log('서버에서 주사위 결과 확인:', data);\n\n        // 주사위 풀 업데이트\n        if (data.dicePool) {\n          setDicePool(data.dicePool);\n        }\n      };\n\n      // 턴 종료 이벤트 리스너\n      const handleTurnEnded = data => {\n        console.log('턴 종료됨:', data);\n\n        // 상태 초기화\n        setCurrentBrains(0);\n        setCurrentShotguns(0);\n        setRolledResults([]);\n        setSelectedDice([]);\n\n        // 턴 종료 콜백 호출\n        if (onTurnEnd) {\n          onTurnEnd(data.nextPlayer);\n        }\n      };\n\n      // 게임 종료 이벤트 리스너\n      const handleGameEnded = data => {\n        console.log('게임 종료됨:', data);\n        if (data.winner) {\n          setWinner(data.winner);\n        }\n      };\n\n      // 이벤트 리스너 등록\n      window.socket.on('gameStarted', handleGameStarted);\n      window.socket.on('turnStarted', handleTurnStarted);\n      window.socket.on('diceSelected', handleDiceSelected);\n      window.socket.on('rollDiceResult', handleRollDiceResult);\n      window.socket.on('turnEnded', handleTurnEnded);\n      window.socket.on('gameEnded', handleGameEnded);\n\n      // 클린업\n      return () => {\n        window.socket.off('gameStarted', handleGameStarted);\n        window.socket.off('turnStarted', handleTurnStarted);\n        window.socket.off('diceSelected', handleDiceSelected);\n        window.socket.off('rollDiceResult', handleRollDiceResult);\n        window.socket.off('turnEnded', handleTurnEnded);\n        window.socket.off('gameEnded', handleGameEnded);\n      };\n    }\n  }, [onTurnEnd]);\n\n  // 메인 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-turn-indicator\",\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-area mb-3\",\n          children: isRolling || showRollingModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 19\n          }, this) : rolledResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rolled-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-results-container\",\n              children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-result ${result.result.toLowerCase()}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `dice-type ${result.type.toLowerCase()}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dice-face\",\n                  children: [result.result === 'BRAIN' && '뇌', result.result === 'SHOTGUN' && '총', result.result === 'FOOTSTEPS' && '발자국']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            onClick: handleRoll,\n            disabled: isRolling,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }, this), showRollingModal && /*#__PURE__*/_jsxDEV(DiceRollingModal, {\n          selectedDice: selectedDice,\n          onRollComplete: handleRollComplete,\n          onClose: () => setShowRollingModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 17\n        }, this), rolledResults.length > 0 && !winner && !isRolling && !showRollingModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success me-2\",\n            onClick: handleContinue,\n            disabled: currentShotguns >= 3,\n            children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: handleStop,\n            children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 17\n        }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 19\n          }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_players$currentTurn = players[currentTurn]) === null || _players$currentTurn === void 0 ? void 0 : _players$currentTurn.nickname, \"\\uB2D8\\uC774 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 665,\n    columnNumber: 5\n  }, this);\n}\n_s4(ZombieDice, \"i5QzWyHlCm7jrGRl/so5HoBMle4=\");\n_c6 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Floor\");\n$RefreshReg$(_c2, \"PhysicalDice\");\n$RefreshReg$(_c3, \"DiceContainer\");\n$RefreshReg$(_c4, \"Dice\");\n$RefreshReg$(_c5, \"DicePoolStatus\");\n$RefreshReg$(_c6, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","Suspense","Canvas","useFrame","useLoader","Physics","useBox","usePlane","THREE","TextureLoader","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","faces","image","type","YELLOW","GREEN","getDiceColor","getTexturesForType","adjustDiceRotation","result","api","ref","targetRotation","Math","PI","current","rotation","x","y","z","velocity","set","angularVelocity","getResultClass","modalStyle","position","top","left","transform","width","maxWidth","backgroundColor","borderRadius","boxShadow","zIndex","padding","overlayStyle","right","bottom","Floor","_s","receiveShadow","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","transparent","opacity","_c","PhysicalDice","isRolling","_s2","mass","random","allowSleep","sleepSpeedLimit","sleepTimeLimit","textures","diceColor","setRotation","castShadow","attachArray","map","_c2","DiceContainer","_s3","animationComplete","setAnimationComplete","handleAnimationComplete","className","toLowerCase","shadows","camera","fov","intensity","fallback","gravity","defaultContactMaterial","restitution","_c3","Dice","_c4","DicePoolStatus","dicePool","redCount","filter","dice","length","yellowCount","greenCount","_c5","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s4","_players$currentTurn","setDicePool","selectedDice","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setIsRolling","winner","setWinner","gameStarted","setGameStarted","showRollingModal","setShowRollingModal","initialDicePool","Array","fill","renderScoreBoard","player","index","nickname","score","handleRoll","console","log","window","socket","roomId","location","pathname","split","emit","action","setTimeout","results","diceType","diceFaces","faceIndex","floor","selectedFace","handleRollComplete","error","newBrains","newShotguns","forEach","brains","shotguns","handleContinue","footstepsDice","handleStop","DiceRollingModal","onRollComplete","onClose","style","handleGameStarted","data","gameState","handleTurnStarted","isArray","defaultDicePool","handleDiceSelected","handleRollDiceResult","handleTurnEnded","nextPlayer","handleGameEnded","on","off","onClick","disabled","_c6","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\r\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\r\nimport * as THREE from 'three';\r\nimport { TextureLoader } from 'three';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    faces: [\r\n      { image: redBrain, type: 'SHOTGUN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: redShotgun, type: 'BRAIN' },   // 4면\r\n      { image: redShotgun, type: 'FOOTSTEPS' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: yellowShotgun, type: 'FOOTSTEPS' },  // 5면\r\n      { image: yellowShotgun, type: 'BRAIN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 주사위 색상 가져오기\r\nconst getDiceColor = (type) => {\r\n  if (type === 'RED') return 0xff0000;\r\n  if (type === 'YELLOW') return 0xffff00;\r\n  if (type === 'GREEN') return 0x00ff00;\r\n  return 0xffffff;\r\n};\r\n\r\n// 주사위 타입에 따른 텍스처 가져오기\r\nconst getTexturesForType = (type) => {\r\n  if (type === 'RED') {\r\n    return [redBrain, redShotgun, redFootsteps, redBrain, redShotgun, redFootsteps];\r\n  } else if (type === 'YELLOW') {\r\n    return [yellowBrain, yellowShotgun, yellowFootsteps, yellowBrain, yellowShotgun, yellowFootsteps];\r\n  } else if (type === 'GREEN') {\r\n    return [greenBrain, greenShotgun, greenFootsteps, greenBrain, greenShotgun, greenFootsteps];\r\n  }\r\n  return [];\r\n};\r\n\r\n// 결과에 맞게 주사위 회전 조정\r\nconst adjustDiceRotation = (result, api, ref) => {\r\n  let targetRotation = [0, 0, 0];\r\n  \r\n  // 결과에 따라 주사위 회전 설정\r\n  if (result === 'BRAIN') {\r\n    targetRotation = [0, 0, 0]; // 뇌가 위로 오도록\r\n  } else if (result === 'SHOTGUN') {\r\n    targetRotation = [0, Math.PI / 2, 0]; // 총이 위로 오도록\r\n  } else if (result === 'FOOTSTEPS') {\r\n    targetRotation = [Math.PI / 2, 0, 0]; // 발자국이 위로 오도록\r\n  }\r\n  \r\n  // 주사위 회전 설정\r\n  if (ref.current) {\r\n    ref.current.rotation.x = targetRotation[0];\r\n    ref.current.rotation.y = targetRotation[1];\r\n    ref.current.rotation.z = targetRotation[2];\r\n  }\r\n  \r\n  // 물리 속성 정지\r\n  api.velocity.set(0, 0, 0);\r\n  api.angularVelocity.set(0, 0, 0);\r\n};\r\n\r\n// 결과 타입에 따른 클래스 이름 가져오기\r\nconst getResultClass = (result) => {\r\n  if (result === 'BRAIN') return 'result-brain';\r\n  if (result === 'SHOTGUN') return 'result-shotgun';\r\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\r\n  return '';\r\n};\r\n\r\n// 모달 스타일을 상수로 컴포넌트 외부에 정의\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '80%',\r\n  maxWidth: '600px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  zIndex: 1000,\r\n  padding: '20px'\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: 999\r\n};\r\n\r\n// 바닥 컴포넌트\r\nconst Floor = () => {\r\n  const [ref] = usePlane(() => ({ \r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    position: [0, -2, 0],\r\n    type: 'Static'\r\n  }));\r\n  \r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeGeometry args={[20, 20]} />\r\n      <shadowMaterial color=\"#171717\" transparent opacity={0.2} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 물리 기반 주사위 컴포넌트\r\nconst PhysicalDice = ({ type, result, isRolling, position }) => {\r\n  const [ref, api] = useBox(() => ({ \r\n    mass: 1,\r\n    position: position || [0, 5, 0],\r\n    rotation: [\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI\r\n    ],\r\n    args: [1, 1, 1],\r\n    allowSleep: true,\r\n    sleepSpeedLimit: 0.1,\r\n    sleepTimeLimit: 1\r\n  }));\r\n  \r\n  // 텍스처 로드\r\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\r\n  \r\n  // 주사위 색상 설정\r\n  const diceColor = getDiceColor(type);\r\n  \r\n  // 주사위 굴리기 효과\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      // 주사위 위치 초기화\r\n      api.position.set(position?.[0] || 0, position?.[1] || 5, position?.[2] || 0);\r\n      \r\n      // 랜덤한 힘과 회전으로 주사위 던지기\r\n      api.velocity.set(\r\n        (Math.random() - 0.5) * 5,\r\n        3 + Math.random() * 2,\r\n        (Math.random() - 0.5) * 5\r\n      );\r\n      \r\n      api.angularVelocity.set(\r\n        Math.random() * 10 - 5,\r\n        Math.random() * 10 - 5,\r\n        Math.random() * 10 - 5\r\n      );\r\n    } else {\r\n      // 결과에 맞게 주사위 회전 조정\r\n      adjustDiceRotation(result, api, ref);\r\n    }\r\n  }, [isRolling, api, ref, result, position]);\r\n  \r\n  // 주사위 회전 상태 모니터링\r\n  const [rotation, setRotation] = useState([0, 0, 0]);\r\n  \r\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\r\n  useFrame(() => {\r\n    // 주사위 회전 상태 업데이트\r\n    if (ref.current) {\r\n      setRotation([\r\n        ref.current.rotation.x,\r\n        ref.current.rotation.y,\r\n        ref.current.rotation.z\r\n      ]);\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <mesh \r\n      ref={ref}\r\n      castShadow\r\n      receiveShadow\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[0]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[1]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[2]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[3]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[4]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[5]} \r\n        color={diceColor}\r\n      />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 주사위 컨테이너 컴포넌트\r\nconst DiceContainer = ({ type, result, isRolling }) => {\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n  \r\n  const handleAnimationComplete = () => {\r\n    setAnimationComplete(true);\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`}>\r\n      <div className={`dice-3d-container ${type.toLowerCase()}-dice-container`}>\r\n        <Canvas shadows camera={{ position: [0, 2, 5], fov: 50 }}>\r\n          <ambientLight intensity={0.5} />\r\n          <directionalLight\r\n            position={[10, 10, 10]}\r\n            intensity={0.8}\r\n            castShadow\r\n            shadow-mapSize-width={1024}\r\n            shadow-mapSize-height={1024}\r\n          />\r\n          <Suspense fallback={null}>\r\n            <Physics \r\n              gravity={[0, -9.8, 0]} \r\n              defaultContactMaterial={{ restitution: 0.3 }}\r\n            >\r\n              <Floor />\r\n              <PhysicalDice \r\n                type={type} \r\n                result={result} \r\n                isRolling={isRolling} \r\n                position={[0, 5, 0]}\r\n              />\r\n            </Physics>\r\n          </Suspense>\r\n        </Canvas>\r\n      </div>\r\n      <div className={`dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`}>\r\n        {result === 'BRAIN' && '뇌'}\r\n        {result === 'SHOTGUN' && '총'}\r\n        {result === 'FOOTSTEPS' && '발자국'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\r\nconst Dice = ({ type, result, isRolling }) => {\r\n  return <DiceContainer type={type} result={result} isRolling={isRolling} />;\r\n};\r\n\r\n// 주사위 풀 상태 컴포넌트\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 주사위 타입별 개수 계산\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status mt-4\">\r\n      <h4 className=\"text-center mb-3\">남은 주사위</h4>\r\n      <div className=\"dice-pool-container\">\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color red\"></div>\r\n          <div className=\"dice-pool-count\">{redCount}</div>\r\n          <div className=\"dice-pool-label\">빨강</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color yellow\"></div>\r\n          <div className=\"dice-pool-count\">{yellowCount}</div>\r\n          <div className=\"dice-pool-label\">노랑</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color green\"></div>\r\n          <div className=\"dice-pool-count\">{greenCount}</div>\r\n          <div className=\"dice-pool-label\">초록</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dice-pool-total text-center mt-2\">\r\n        총 {dicePool.length}개 남음\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 메인 ZombieDice 컴포넌트\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  // 상태 정의\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  \r\n  // 주사위 굴리기 모달 상태\r\n  const [showRollingModal, setShowRollingModal] = useState(false);\r\n  \r\n  // 게임 시작 시 주사위 풀 초기화\r\n  useEffect(() => {\r\n    if (isMyTurn && !dicePool.length) {\r\n      // 주사위 풀 초기화\r\n      const initialDicePool = [\r\n        ...Array(3).fill('RED'),\r\n        ...Array(4).fill('YELLOW'),\r\n        ...Array(6).fill('GREEN')\r\n      ];\r\n      setDicePool(initialDicePool);\r\n    }\r\n  }, [isMyTurn, dicePool.length]);\r\n  \r\n  // 점수판 렌더링 함수\r\n  const renderScoreBoard = () => {\r\n    if (!players || players.length === 0) return null;\r\n    \r\n    return (\r\n      <div className=\"scoreboard mb-4\">\r\n        <h3 className=\"text-center mb-3\">점수판</h3>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>순서</th>\r\n                <th>플레이어</th>\r\n                <th>점수</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {players.map((player, index) => (\r\n                <tr key={index} className={index === currentTurn ? 'table-active' : ''}>\r\n                  <td>{index + 1}</td>\r\n                  <td>\r\n                    {player.nickname}\r\n                    {index === currentTurn && <span className=\"ms-2 badge bg-primary\">턴</span>}\r\n                  </td>\r\n                  <td>{player.score} / {WINNING_SCORE}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 주사위 굴리기 요청 함수\r\n  const handleRoll = () => {\r\n    console.log('주사위 굴리기 요청');\r\n    \r\n    // 주사위 굴리기 상태 설정\r\n    setIsRolling(true);\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      // 주사위 선택 요청\r\n      window.socket.emit('gameAction', {\r\n        action: 'selectDice',\r\n        roomId\r\n      });\r\n      \r\n      // 주사위 선택 후 자동으로 굴리기 모달 표시\r\n      setTimeout(() => {\r\n        setShowRollingModal(true);\r\n        \r\n        // 주사위 굴리기 결과 생성 및 처리\r\n        setTimeout(() => {\r\n          if (selectedDice && selectedDice.length > 0) {\r\n            // 주사위 결과 생성\r\n            const results = selectedDice.map(diceType => {\r\n              // 주사위 타입에 따른 면 정보 가져오기\r\n              const diceFaces = DICE_FACES[diceType].faces;\r\n              \r\n              // 랜덤하게 면 선택 (1-6)\r\n              const faceIndex = Math.floor(Math.random() * 6);\r\n              const selectedFace = diceFaces[faceIndex];\r\n              \r\n              return {\r\n                type: diceType,\r\n                result: selectedFace.type,\r\n                faceIndex: faceIndex\r\n              };\r\n            });\r\n            \r\n            // 결과 처리\r\n            handleRollComplete(results);\r\n          }\r\n        }, 2000); // 2초 후 결과 처리\r\n      }, 500); // 주사위 선택 이벤트가 처리될 시간을 주기 위해 약간의 지연 추가\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n      setIsRolling(false);\r\n    }\r\n  };\r\n  \r\n  // 주사위 굴리기 결과 처리 함수\r\n  const handleRollComplete = (results) => {\r\n    console.log('주사위 굴리기 결과:', results);\r\n    \r\n    // 결과 저장\r\n    setRolledResults(results);\r\n    \r\n    // 결과 계산\r\n    let newBrains = currentBrains;\r\n    let newShotguns = currentShotguns;\r\n    \r\n    results.forEach(({ result }) => {\r\n      if (result === 'BRAIN') newBrains++;\r\n      if (result === 'SHOTGUN') newShotguns++;\r\n    });\r\n    \r\n    // 서버에 결과 전송\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDiceResult',\r\n        roomId,\r\n        results,\r\n        brains: newBrains,\r\n        shotguns: newShotguns\r\n      });\r\n    }\r\n    \r\n    // 상태 업데이트\r\n    setCurrentBrains(newBrains);\r\n    setCurrentShotguns(newShotguns);\r\n    \r\n    // 모달 닫기 (약간의 딜레이 후)\r\n    setTimeout(() => {\r\n      setShowRollingModal(false);\r\n      setIsRolling(false);\r\n    }, 500);\r\n  };\r\n  \r\n  // 계속하기 버튼 핸들러\r\n  const handleContinue = () => {\r\n    // 발자국 결과인 주사위만 필터링\r\n    const footstepsDice = rolledResults\r\n      .filter(result => result.result === 'FOOTSTEPS')\r\n      .map(result => result.type);\r\n    \r\n    // 계속 진행 요청\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'continueTurn',\r\n        roomId,\r\n        footstepsDice\r\n      });\r\n    }\r\n    \r\n    // 결과 초기화\r\n    setRolledResults([]);\r\n  };\r\n  \r\n  // 멈추기 버튼 핸들러\r\n  const handleStop = () => {\r\n    // 턴 종료 요청\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'endTurn',\r\n        roomId,\r\n        score: currentShotguns >= 3 ? 0 : currentBrains\r\n      });\r\n    }\r\n    \r\n    // 상태 초기화\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n  };\r\n  \r\n  // 주사위 굴리기 모달 컴포넌트\r\n  const DiceRollingModal = ({ selectedDice, onRollComplete, onClose }) => {\r\n    return (\r\n      <div style={overlayStyle}>\r\n        <div style={modalStyle}>\r\n          <div className=\"dice-rolling-scene\">\r\n            <Canvas shadows camera={{ position: [0, 5, 10], fov: 50 }}>\r\n              <ambientLight intensity={0.5} />\r\n              <directionalLight\r\n                position={[10, 10, 10]}\r\n                intensity={0.8}\r\n                castShadow\r\n                shadow-mapSize-width={1024}\r\n                shadow-mapSize-height={1024}\r\n              />\r\n              <Suspense fallback={null}>\r\n                <Physics \r\n                  gravity={[0, -9.8, 0]} \r\n                  defaultContactMaterial={{ restitution: 0.3 }}\r\n                >\r\n                  <Floor />\r\n                  {selectedDice.map((diceType, index) => (\r\n                    <PhysicalDice \r\n                      key={index}\r\n                      type={diceType}\r\n                      result={'BRAIN'}\r\n                      isRolling={true}\r\n                      position={[index * 2 - selectedDice.length + 1, 5 + index * 0.5, 0]}\r\n                    />\r\n                  ))}\r\n                </Physics>\r\n              </Suspense>\r\n            </Canvas>\r\n          </div>\r\n          <div className=\"text-center mt-3\">\r\n            <p>주사위 굴리는 중...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 서버 이벤트 핸들러\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      // 게임 시작 이벤트 리스너\r\n      const handleGameStarted = (data) => {\r\n        console.log('게임 시작됨:', data);\r\n        setGameStarted(true);\r\n        \r\n        // 주사위 풀 초기화 추가\r\n        if (data.gameState && data.gameState.dicePool) {\r\n          setDicePool(data.gameState.dicePool);\r\n        }\r\n      };\r\n      \r\n      // 턴 시작 이벤트 리스너\r\n      const handleTurnStarted = (data) => {\r\n        console.log('턴 시작됨:', data);\r\n        // 주사위 풀 설정 - 명시적으로 확인\r\n        if (data.dicePool && Array.isArray(data.dicePool)) {\r\n          setDicePool(data.dicePool);\r\n        } else {\r\n          // 주사위 풀이 없거나 배열이 아닌 경우 기본값 설정\r\n          const defaultDicePool = [\r\n            ...Array(3).fill('RED'),\r\n            ...Array(4).fill('YELLOW'),\r\n            ...Array(6).fill('GREEN')\r\n          ];\r\n          setDicePool(defaultDicePool);\r\n        }\r\n        setCurrentBrains(0);\r\n        setCurrentShotguns(0);\r\n      };\r\n      \r\n      // 주사위 선택 이벤트 리스너\r\n      const handleDiceSelected = (data) => {\r\n        console.log('주사위 선택됨:', data);\r\n        \r\n        setSelectedDice(data.selectedDice || []);\r\n        setDicePool(data.dicePool || []);\r\n      };\r\n      \r\n      // 주사위 굴리기 결과 이벤트 리스너\r\n      const handleRollDiceResult = (data) => {\r\n        console.log('서버에서 주사위 결과 확인:', data);\r\n        \r\n        // 주사위 풀 업데이트\r\n        if (data.dicePool) {\r\n          setDicePool(data.dicePool);\r\n        }\r\n      };\r\n      \r\n      // 턴 종료 이벤트 리스너\r\n      const handleTurnEnded = (data) => {\r\n        console.log('턴 종료됨:', data);\r\n        \r\n        // 상태 초기화\r\n        setCurrentBrains(0);\r\n        setCurrentShotguns(0);\r\n        setRolledResults([]);\r\n        setSelectedDice([]);\r\n        \r\n        // 턴 종료 콜백 호출\r\n        if (onTurnEnd) {\r\n          onTurnEnd(data.nextPlayer);\r\n        }\r\n      };\r\n      \r\n      // 게임 종료 이벤트 리스너\r\n      const handleGameEnded = (data) => {\r\n        console.log('게임 종료됨:', data);\r\n        \r\n        if (data.winner) {\r\n          setWinner(data.winner);\r\n        }\r\n      };\r\n      \r\n      // 이벤트 리스너 등록\r\n      window.socket.on('gameStarted', handleGameStarted);\r\n      window.socket.on('turnStarted', handleTurnStarted);\r\n      window.socket.on('diceSelected', handleDiceSelected);\r\n      window.socket.on('rollDiceResult', handleRollDiceResult);\r\n      window.socket.on('turnEnded', handleTurnEnded);\r\n      window.socket.on('gameEnded', handleGameEnded);\r\n      \r\n      // 클린업\r\n      return () => {\r\n        window.socket.off('gameStarted', handleGameStarted);\r\n        window.socket.off('turnStarted', handleTurnStarted);\r\n        window.socket.off('diceSelected', handleDiceSelected);\r\n        window.socket.off('rollDiceResult', handleRollDiceResult);\r\n        window.socket.off('turnEnded', handleTurnEnded);\r\n        window.socket.off('gameEnded', handleGameEnded);\r\n      };\r\n    }\r\n  }, [onTurnEnd]);\r\n\r\n  // 메인 렌더링\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {isMyTurn ? (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"dice-area mb-3\">\r\n                {isRolling || showRollingModal ? (\r\n                  <div className=\"text-center\">\r\n                    <p>주사위 굴리는 중...</p>\r\n                  </div>\r\n                ) : (\r\n                  rolledResults.length > 0 ? (\r\n                    <div className=\"rolled-results\">\r\n                      <h4>주사위 결과:</h4>\r\n                      <div className=\"dice-results-container\">\r\n                        {rolledResults.map((result, index) => (\r\n                          <div key={index} className={`dice-result ${result.result.toLowerCase()}`}>\r\n                            <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                            <div className=\"dice-face\">\r\n                              {result.result === 'BRAIN' && '뇌'}\r\n                              {result.result === 'SHOTGUN' && '총'}\r\n                              {result.result === 'FOOTSTEPS' && '발자국'}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary btn-lg\"\r\n                      onClick={handleRoll}\r\n                      disabled={isRolling}\r\n                    >\r\n                      주사위 굴리기\r\n                    </button>\r\n                  )\r\n                )}\r\n              </div>\r\n\r\n              {/* 주사위 굴리기 모달 */}\r\n              {showRollingModal && (\r\n                <DiceRollingModal \r\n                  selectedDice={selectedDice}\r\n                  onRollComplete={handleRollComplete}\r\n                  onClose={() => setShowRollingModal(false)}\r\n                />\r\n              )}\r\n\r\n              {rolledResults.length > 0 && !winner && !isRolling && !showRollingModal && (\r\n                <div className=\"controls\">\r\n                  <button \r\n                    className=\"btn btn-success me-2\"\r\n                    onClick={handleContinue}\r\n                    disabled={currentShotguns >= 3}\r\n                  >\r\n                    계속하기\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-warning\"\r\n                    onClick={handleStop}\r\n                  >\r\n                    {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {currentShotguns >= 3 && (\r\n                <div className=\"alert alert-danger mt-3\">\r\n                  <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"text-center mb-3\">\r\n              <h3>다른 플레이어의 차례입니다.</h3>\r\n              <p>{players[currentTurn]?.nickname}님이 주사위를 굴리고 있습니다...</p>\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":";;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAChE,SAASC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,qBAAqB;AAC/D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,eAAe,MAAM,qDAAqD;AACjF,OAAOC,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,cAAc,MAAM,oDAAoD;AAC/E,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAG,EAAE;;AAExB;AACA,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE;IACHC,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEjB,QAAQ;MAAEkB,IAAI,EAAE;IAAU,CAAC;IAAO;IAC3C;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAY,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAU,CAAC;IAAE;IAC1C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAQ,CAAC;IAAI;IACxC;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAY,CAAC;IAAI;IAC5C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAU,CAAC,CAAI;IAAA;EAE9C,CAAC;EACDC,MAAM,EAAE;IACNH,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC3C;MAAED,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAY,CAAC;IAAM;IAC/C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAU,CAAC;IAAE;IAC7C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAU,CAAC;IAAE;IAC7C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAY,CAAC;IAAG;IAC9C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAQ,CAAC,CAAG;IAAA;EAE9C,CAAC;EACDE,KAAK,EAAE;IACLJ,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAY,CAAC;IAAM;IAC9C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAU,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAY,CAAC;IAAE;IAC9C;MAAED,KAAK,EAAET,YAAY;MAAEU,IAAI,EAAE;IAAU,CAAC,CAAG;IAAA;EAE/C;AACF,CAAC;;AAED;AACA,MAAMG,YAAY,GAAIH,IAAI,IAAK;EAC7B,IAAIA,IAAI,KAAK,KAAK,EAAE,OAAO,QAAQ;EACnC,IAAIA,IAAI,KAAK,QAAQ,EAAE,OAAO,QAAQ;EACtC,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAO,QAAQ;EACrC,OAAO,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMI,kBAAkB,GAAIJ,IAAI,IAAK;EACnC,IAAIA,IAAI,KAAK,KAAK,EAAE;IAClB,OAAO,CAAClB,QAAQ,EAAEE,UAAU,EAAED,YAAY,EAAED,QAAQ,EAAEE,UAAU,EAAED,YAAY,CAAC;EACjF,CAAC,MAAM,IAAIiB,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,CAACf,WAAW,EAAEE,aAAa,EAAED,eAAe,EAAED,WAAW,EAAEE,aAAa,EAAED,eAAe,CAAC;EACnG,CAAC,MAAM,IAAIc,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO,CAACZ,UAAU,EAAEE,YAAY,EAAED,cAAc,EAAED,UAAU,EAAEE,YAAY,EAAED,cAAc,CAAC;EAC7F;EACA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMgB,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAE9B;EACA,IAAIH,MAAM,KAAK,OAAO,EAAE;IACtBG,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,MAAM,IAAIH,MAAM,KAAK,SAAS,EAAE;IAC/BG,cAAc,GAAG,CAAC,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,MAAM,IAAIL,MAAM,KAAK,WAAW,EAAE;IACjCG,cAAc,GAAG,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACxC;;EAEA;EACA,IAAIH,GAAG,CAACI,OAAO,EAAE;IACfJ,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGL,cAAc,CAAC,CAAC,CAAC;IAC1CD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACE,CAAC,GAAGN,cAAc,CAAC,CAAC,CAAC;IAC1CD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACG,CAAC,GAAGP,cAAc,CAAC,CAAC,CAAC;EAC5C;;EAEA;EACAF,GAAG,CAACU,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzBX,GAAG,CAACY,eAAe,CAACD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClC,CAAC;;AAED;AACA,MAAME,cAAc,GAAId,MAAM,IAAK;EACjC,IAAIA,MAAM,KAAK,OAAO,EAAE,OAAO,cAAc;EAC7C,IAAIA,MAAM,KAAK,SAAS,EAAE,OAAO,gBAAgB;EACjD,IAAIA,MAAM,KAAK,WAAW,EAAE,OAAO,kBAAkB;EACrD,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMe,UAAU,GAAG;EACjBC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE,uBAAuB;EAClCC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE,OAAO;EACjBC,eAAe,EAAE,OAAO;EACxBC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,8BAA8B;EACzCC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBX,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPU,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTP,eAAe,EAAE,oBAAoB;EACrCG,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMK,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAC7B,GAAG,CAAC,GAAG7B,QAAQ,CAAC,OAAO;IAC5BkC,QAAQ,EAAE,CAAC,CAACH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9BW,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpBtB,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,oBACER,OAAA;IAAMgB,GAAG,EAAEA,GAAI;IAAC8B,aAAa;IAAAC,QAAA,gBAC3B/C,OAAA;MAAegD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCpD,OAAA;MAAgBqD,KAAK,EAAC,SAAS;MAACC,WAAW;MAACC,OAAO,EAAE;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEX,CAAC;;AAED;AAAAP,EAAA,CAfMD,KAAK;EAAA,QACKzD,QAAQ;AAAA;AAAAqE,EAAA,GADlBZ,KAAK;AAgBX,MAAMa,YAAY,GAAGA,CAAC;EAAEjD,IAAI;EAAEM,MAAM;EAAE4C,SAAS;EAAE5B;AAAS,CAAC,KAAK;EAAA6B,GAAA;EAC9D,MAAM,CAAC3C,GAAG,EAAED,GAAG,CAAC,GAAG7B,MAAM,CAAC,OAAO;IAC/B0E,IAAI,EAAE,CAAC;IACP9B,QAAQ,EAAEA,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/BT,QAAQ,EAAE,CACRH,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG3C,IAAI,CAACC,EAAE,EACvBD,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG3C,IAAI,CAACC,EAAE,EACvBD,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG3C,IAAI,CAACC,EAAE,CACxB;IACD6B,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACfc,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,GAAG;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMC,QAAQ,GAAGjF,SAAS,CAACK,aAAa,EAAEuB,kBAAkB,CAACJ,IAAI,CAAC,CAAC;;EAEnE;EACA,MAAM0D,SAAS,GAAGvD,YAAY,CAACH,IAAI,CAAC;;EAEpC;EACA7B,SAAS,CAAC,MAAM;IACd,IAAI+E,SAAS,EAAE;MACb;MACA3C,GAAG,CAACe,QAAQ,CAACJ,GAAG,CAAC,CAAAI,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,EAAE,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,EAAE,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,CAAC;;MAE5E;MACAf,GAAG,CAACU,QAAQ,CAACC,GAAG,CACd,CAACR,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,EACzB,CAAC,GAAG3C,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,CAAC,EACrB,CAAC3C,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAC1B,CAAC;MAED9C,GAAG,CAACY,eAAe,CAACD,GAAG,CACrBR,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EACtB3C,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EACtB3C,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CACvB,CAAC;IACH,CAAC,MAAM;MACL;MACAhD,kBAAkB,CAACC,MAAM,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACtC;EACF,CAAC,EAAE,CAAC0C,SAAS,EAAE3C,GAAG,EAAEC,GAAG,EAAEF,MAAM,EAAEgB,QAAQ,CAAC,CAAC;;EAE3C;EACA,MAAM,CAACT,QAAQ,EAAE8C,WAAW,CAAC,GAAGzF,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEnD;EACAK,QAAQ,CAAC,MAAM;IACb;IACA,IAAIiC,GAAG,CAACI,OAAO,EAAE;MACf+C,WAAW,CAAC,CACVnD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,EACtBN,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACE,CAAC,EACtBP,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACG,CAAC,CACvB,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,oBACExB,OAAA;IACEgB,GAAG,EAAEA,GAAI;IACToD,UAAU;IACVtB,aAAa;IAAAC,QAAA,gBAEb/C,OAAA;MAAagD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpD,OAAA;MACEqE,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEL,QAAQ,CAAC,CAAC,CAAE;MACjBZ,KAAK,EAAEa;IAAU;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;;AAED;AAAAO,GAAA,CArGMF,YAAY;EAAA,QACGvE,MAAM,EAeRF,SAAS,EAiC1BD,QAAQ;AAAA;AAAAwF,GAAA,GAjDJd,YAAY;AAsGlB,MAAMe,aAAa,GAAGA,CAAC;EAAEhE,IAAI;EAAEM,MAAM;EAAE4C;AAAU,CAAC,KAAK;EAAAe,GAAA;EACrD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMkG,uBAAuB,GAAGA,CAAA,KAAM;IACpCD,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACE3E,OAAA;IAAK6E,SAAS,EAAE,yBAAyBnB,SAAS,IAAI,CAACgB,iBAAiB,GAAG,mBAAmB,GAAG,iBAAiB,EAAG;IAAA3B,QAAA,gBACnH/C,OAAA;MAAK6E,SAAS,EAAE,qBAAqBrE,IAAI,CAACsE,WAAW,CAAC,CAAC,iBAAkB;MAAA/B,QAAA,eACvE/C,OAAA,CAAClB,MAAM;QAACiG,OAAO;QAACC,MAAM,EAAE;UAAElD,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAAEmD,GAAG,EAAE;QAAG,CAAE;QAAAlC,QAAA,gBACvD/C,OAAA;UAAckF,SAAS,EAAE;QAAI;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCpD,OAAA;UACE8B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;UACvBoD,SAAS,EAAE,GAAI;UACfd,UAAU;UACV,wBAAsB,IAAK;UAC3B,yBAAuB;QAAK;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFpD,OAAA,CAACnB,QAAQ;UAACsG,QAAQ,EAAE,IAAK;UAAApC,QAAA,eACvB/C,OAAA,CAACf,OAAO;YACNmG,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE;YACtBC,sBAAsB,EAAE;cAAEC,WAAW,EAAE;YAAI,CAAE;YAAAvC,QAAA,gBAE7C/C,OAAA,CAAC4C,KAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTpD,OAAA,CAACyD,YAAY;cACXjD,IAAI,EAAEA,IAAK;cACXM,MAAM,EAAEA,MAAO;cACf4C,SAAS,EAAEA,SAAU;cACrB5B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNpD,OAAA;MAAK6E,SAAS,EAAE,qBAAqBjD,cAAc,CAACd,MAAM,CAAC,IAAI4D,iBAAiB,GAAG,aAAa,GAAG,EAAE,EAAG;MAAA3B,QAAA,GACrGjC,MAAM,KAAK,OAAO,IAAI,GAAG,EACzBA,MAAM,KAAK,SAAS,IAAI,GAAG,EAC3BA,MAAM,KAAK,WAAW,IAAI,KAAK;IAAA;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAqB,GAAA,CA5CMD,aAAa;AAAAe,GAAA,GAAbf,aAAa;AA6CnB,MAAMgB,IAAI,GAAGA,CAAC;EAAEhF,IAAI;EAAEM,MAAM;EAAE4C;AAAU,CAAC,KAAK;EAC5C,oBAAO1D,OAAA,CAACwE,aAAa;IAAChE,IAAI,EAAEA,IAAK;IAACM,MAAM,EAAEA,MAAO;IAAC4C,SAAS,EAAEA;EAAU;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;;AAED;AAAAqC,GAAA,GAJMD,IAAI;AAKV,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,CAACC,MAAM;EAC/D,MAAMC,WAAW,GAAGL,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,QAAQ,CAAC,CAACC,MAAM;EACrE,MAAME,UAAU,GAAGN,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,OAAO,CAAC,CAACC,MAAM;EAEnE,oBACE/F,OAAA;IAAK6E,SAAS,EAAC,uBAAuB;IAAA9B,QAAA,gBACpC/C,OAAA;MAAI6E,SAAS,EAAC,kBAAkB;MAAA9B,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CpD,OAAA;MAAK6E,SAAS,EAAC,qBAAqB;MAAA9B,QAAA,gBAClC/C,OAAA;QAAK6E,SAAS,EAAC,gBAAgB;QAAA9B,QAAA,gBAC7B/C,OAAA;UAAK6E,SAAS,EAAC;QAAqB;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3CpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAE6C;QAAQ;UAAA3C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNpD,OAAA;QAAK6E,SAAS,EAAC,gBAAgB;QAAA9B,QAAA,gBAC7B/C,OAAA;UAAK6E,SAAS,EAAC;QAAwB;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9CpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAEiD;QAAW;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNpD,OAAA;QAAK6E,SAAS,EAAC,gBAAgB;QAAA9B,QAAA,gBAC7B/C,OAAA;UAAK6E,SAAS,EAAC;QAAuB;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAEkD;QAAU;UAAAhD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnDpD,OAAA;UAAK6E,SAAS,EAAC,iBAAiB;UAAA9B,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpD,OAAA;MAAK6E,SAAS,EAAC,kCAAkC;MAAA9B,QAAA,GAAC,SAC9C,EAAC4C,QAAQ,CAACI,MAAM,EAAC,qBACrB;IAAA;MAAA9C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA8C,GAAA,GAjCMR,cAAc;AAkCpB,SAASS,UAAUA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,oBAAA;EACjE;EACA,MAAM,CAACd,QAAQ,EAAEe,WAAW,CAAC,GAAGhI,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiI,YAAY,EAAEC,eAAe,CAAC,GAAGlI,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmI,aAAa,EAAEC,gBAAgB,CAAC,GAAGpI,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqI,aAAa,EAAEC,gBAAgB,CAAC,GAAGtI,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACuI,eAAe,EAAEC,kBAAkB,CAAC,GAAGxI,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgF,SAAS,EAAEyD,YAAY,CAAC,GAAGzI,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0I,MAAM,EAAEC,SAAS,CAAC,GAAG3I,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC4I,WAAW,EAAEC,cAAc,CAAC,GAAG7I,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAAC8I,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/I,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACAC,SAAS,CAAC,MAAM;IACd,IAAI4H,QAAQ,IAAI,CAACZ,QAAQ,CAACI,MAAM,EAAE;MAChC;MACA,MAAM2B,eAAe,GAAG,CACtB,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B;MACDlB,WAAW,CAACgB,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAACnB,QAAQ,EAAEZ,QAAQ,CAACI,MAAM,CAAC,CAAC;;EAE/B;EACA,MAAM8B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACzB,OAAO,IAAIA,OAAO,CAACL,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAEjD,oBACE/F,OAAA;MAAK6E,SAAS,EAAC,iBAAiB;MAAA9B,QAAA,gBAC9B/C,OAAA;QAAI6E,SAAS,EAAC,kBAAkB;QAAA9B,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCpD,OAAA;QAAK6E,SAAS,EAAC,kBAAkB;QAAA9B,QAAA,eAC/B/C,OAAA;UAAO6E,SAAS,EAAC,qBAAqB;UAAA9B,QAAA,gBACpC/C,OAAA;YAAA+C,QAAA,eACE/C,OAAA;cAAA+C,QAAA,gBACE/C,OAAA;gBAAA+C,QAAA,EAAI;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXpD,OAAA;gBAAA+C,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbpD,OAAA;gBAAA+C,QAAA,EAAI;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpD,OAAA;YAAA+C,QAAA,EACGqD,OAAO,CAAC9B,GAAG,CAAC,CAACwD,MAAM,EAAEC,KAAK,kBACzB/H,OAAA;cAAgB6E,SAAS,EAAEkD,KAAK,KAAK1B,WAAW,GAAG,cAAc,GAAG,EAAG;cAAAtD,QAAA,gBACrE/C,OAAA;gBAAA+C,QAAA,EAAKgF,KAAK,GAAG;cAAC;gBAAA9E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBpD,OAAA;gBAAA+C,QAAA,GACG+E,MAAM,CAACE,QAAQ,EACfD,KAAK,KAAK1B,WAAW,iBAAIrG,OAAA;kBAAM6E,SAAS,EAAC,uBAAuB;kBAAA9B,QAAA,EAAC;gBAAC;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC,eACLpD,OAAA;gBAAA+C,QAAA,GAAK+E,MAAM,CAACG,KAAK,EAAC,KAAG,EAAC9H,aAAa;cAAA;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GANlC2E,KAAK;cAAA9E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAM8E,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;;IAEzB;IACAjB,YAAY,CAAC,IAAI,CAAC;IAElB,IAAIkB,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAErD;MACAL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,YAAY;QACpBL;MACF,CAAC,CAAC;;MAEF;MACAM,UAAU,CAAC,MAAM;QACfpB,mBAAmB,CAAC,IAAI,CAAC;;QAEzB;QACAoB,UAAU,CAAC,MAAM;UACf,IAAIlC,YAAY,IAAIA,YAAY,CAACZ,MAAM,GAAG,CAAC,EAAE;YAC3C;YACA,MAAM+C,OAAO,GAAGnC,YAAY,CAACrC,GAAG,CAACyE,QAAQ,IAAI;cAC3C;cACA,MAAMC,SAAS,GAAG5I,UAAU,CAAC2I,QAAQ,CAAC,CAACzI,KAAK;;cAE5C;cACA,MAAM2I,SAAS,GAAG/H,IAAI,CAACgI,KAAK,CAAChI,IAAI,CAAC2C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;cAC/C,MAAMsF,YAAY,GAAGH,SAAS,CAACC,SAAS,CAAC;cAEzC,OAAO;gBACLzI,IAAI,EAAEuI,QAAQ;gBACdjI,MAAM,EAAEqI,YAAY,CAAC3I,IAAI;gBACzByI,SAAS,EAAEA;cACb,CAAC;YACH,CAAC,CAAC;;YAEF;YACAG,kBAAkB,CAACN,OAAO,CAAC;UAC7B;QACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,MAAM;MACLX,OAAO,CAACkB,KAAK,CAAC,cAAc,CAAC;MAC7BlC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMiC,kBAAkB,GAAIN,OAAO,IAAK;IACtCX,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEU,OAAO,CAAC;;IAEnC;IACAhC,gBAAgB,CAACgC,OAAO,CAAC;;IAEzB;IACA,IAAIQ,SAAS,GAAGvC,aAAa;IAC7B,IAAIwC,WAAW,GAAGtC,eAAe;IAEjC6B,OAAO,CAACU,OAAO,CAAC,CAAC;MAAE1I;IAAO,CAAC,KAAK;MAC9B,IAAIA,MAAM,KAAK,OAAO,EAAEwI,SAAS,EAAE;MACnC,IAAIxI,MAAM,KAAK,SAAS,EAAEyI,WAAW,EAAE;IACzC,CAAC,CAAC;;IAEF;IACA,IAAIlB,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,gBAAgB;QACxBL,MAAM;QACNO,OAAO;QACPW,MAAM,EAAEH,SAAS;QACjBI,QAAQ,EAAEH;MACZ,CAAC,CAAC;IACJ;;IAEA;IACAvC,gBAAgB,CAACsC,SAAS,CAAC;IAC3BpC,kBAAkB,CAACqC,WAAW,CAAC;;IAE/B;IACAV,UAAU,CAAC,MAAM;MACfpB,mBAAmB,CAAC,KAAK,CAAC;MAC1BN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACA,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,aAAa,GAAG/C,aAAa,CAChChB,MAAM,CAAC/E,MAAM,IAAIA,MAAM,CAACA,MAAM,KAAK,WAAW,CAAC,CAC/CwD,GAAG,CAACxD,MAAM,IAAIA,MAAM,CAACN,IAAI,CAAC;;IAE7B;IACA,IAAI6H,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,cAAc;QACtBL,MAAM;QACNqB;MACF,CAAC,CAAC;IACJ;;IAEA;IACA9C,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;;EAED;EACA,MAAM+C,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIxB,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,SAAS;QACjBL,MAAM;QACNN,KAAK,EAAEhB,eAAe,IAAI,CAAC,GAAG,CAAC,GAAGF;MACpC,CAAC,CAAC;IACJ;;IAEA;IACAC,gBAAgB,CAAC,CAAC,CAAC;IACnBE,kBAAkB,CAAC,CAAC,CAAC;IACrBJ,gBAAgB,CAAC,EAAE,CAAC;IACpBF,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;;EAED;EACA,MAAMkD,gBAAgB,GAAGA,CAAC;IAAEnD,YAAY;IAAEoD,cAAc;IAAEC;EAAQ,CAAC,KAAK;IACtE,oBACEhK,OAAA;MAAKiK,KAAK,EAAExH,YAAa;MAAAM,QAAA,eACvB/C,OAAA;QAAKiK,KAAK,EAAEpI,UAAW;QAAAkB,QAAA,gBACrB/C,OAAA;UAAK6E,SAAS,EAAC,oBAAoB;UAAA9B,QAAA,eACjC/C,OAAA,CAAClB,MAAM;YAACiG,OAAO;YAACC,MAAM,EAAE;cAAElD,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;cAAEmD,GAAG,EAAE;YAAG,CAAE;YAAAlC,QAAA,gBACxD/C,OAAA;cAAckF,SAAS,EAAE;YAAI;cAAAjC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChCpD,OAAA;cACE8B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;cACvBoD,SAAS,EAAE,GAAI;cACfd,UAAU;cACV,wBAAsB,IAAK;cAC3B,yBAAuB;YAAK;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACFpD,OAAA,CAACnB,QAAQ;cAACsG,QAAQ,EAAE,IAAK;cAAApC,QAAA,eACvB/C,OAAA,CAACf,OAAO;gBACNmG,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE;gBACtBC,sBAAsB,EAAE;kBAAEC,WAAW,EAAE;gBAAI,CAAE;gBAAAvC,QAAA,gBAE7C/C,OAAA,CAAC4C,KAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EACRuD,YAAY,CAACrC,GAAG,CAAC,CAACyE,QAAQ,EAAEhB,KAAK,kBAChC/H,OAAA,CAACyD,YAAY;kBAEXjD,IAAI,EAAEuI,QAAS;kBACfjI,MAAM,EAAE,OAAQ;kBAChB4C,SAAS,EAAE,IAAK;kBAChB5B,QAAQ,EAAE,CAACiG,KAAK,GAAG,CAAC,GAAGpB,YAAY,CAACZ,MAAM,GAAG,CAAC,EAAE,CAAC,GAAGgC,KAAK,GAAG,GAAG,EAAE,CAAC;gBAAE,GAJ/DA,KAAK;kBAAA9E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKX,CACF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNpD,OAAA;UAAK6E,SAAS,EAAC,kBAAkB;UAAA9B,QAAA,eAC/B/C,OAAA;YAAA+C,QAAA,EAAG;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACAzE,SAAS,CAAC,MAAM;IACd,IAAI0J,MAAM,CAACC,MAAM,EAAE;MACjB;MACA,MAAM4B,iBAAiB,GAAIC,IAAI,IAAK;QAClChC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+B,IAAI,CAAC;QAC5B5C,cAAc,CAAC,IAAI,CAAC;;QAEpB;QACA,IAAI4C,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAACzE,QAAQ,EAAE;UAC7Ce,WAAW,CAACyD,IAAI,CAACC,SAAS,CAACzE,QAAQ,CAAC;QACtC;MACF,CAAC;;MAED;MACA,MAAM0E,iBAAiB,GAAIF,IAAI,IAAK;QAClChC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE+B,IAAI,CAAC;QAC3B;QACA,IAAIA,IAAI,CAACxE,QAAQ,IAAIgC,KAAK,CAAC2C,OAAO,CAACH,IAAI,CAACxE,QAAQ,CAAC,EAAE;UACjDe,WAAW,CAACyD,IAAI,CAACxE,QAAQ,CAAC;QAC5B,CAAC,MAAM;UACL;UACA,MAAM4E,eAAe,GAAG,CACtB,GAAG5C,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B;UACDlB,WAAW,CAAC6D,eAAe,CAAC;QAC9B;QACAvD,gBAAgB,CAAC,CAAC,CAAC;QACnBE,kBAAkB,CAAC,CAAC,CAAC;MACvB,CAAC;;MAED;MACA,MAAMsD,kBAAkB,GAAIL,IAAI,IAAK;QACnChC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE+B,IAAI,CAAC;QAE7BvD,eAAe,CAACuD,IAAI,CAACxD,YAAY,IAAI,EAAE,CAAC;QACxCD,WAAW,CAACyD,IAAI,CAACxE,QAAQ,IAAI,EAAE,CAAC;MAClC,CAAC;;MAED;MACA,MAAM8E,oBAAoB,GAAIN,IAAI,IAAK;QACrChC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE+B,IAAI,CAAC;;QAEpC;QACA,IAAIA,IAAI,CAACxE,QAAQ,EAAE;UACjBe,WAAW,CAACyD,IAAI,CAACxE,QAAQ,CAAC;QAC5B;MACF,CAAC;;MAED;MACA,MAAM+E,eAAe,GAAIP,IAAI,IAAK;QAChChC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE+B,IAAI,CAAC;;QAE3B;QACAnD,gBAAgB,CAAC,CAAC,CAAC;QACnBE,kBAAkB,CAAC,CAAC,CAAC;QACrBJ,gBAAgB,CAAC,EAAE,CAAC;QACpBF,eAAe,CAAC,EAAE,CAAC;;QAEnB;QACA,IAAIN,SAAS,EAAE;UACbA,SAAS,CAAC6D,IAAI,CAACQ,UAAU,CAAC;QAC5B;MACF,CAAC;;MAED;MACA,MAAMC,eAAe,GAAIT,IAAI,IAAK;QAChChC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+B,IAAI,CAAC;QAE5B,IAAIA,IAAI,CAAC/C,MAAM,EAAE;UACfC,SAAS,CAAC8C,IAAI,CAAC/C,MAAM,CAAC;QACxB;MACF,CAAC;;MAED;MACAiB,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,aAAa,EAAEX,iBAAiB,CAAC;MAClD7B,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,aAAa,EAAER,iBAAiB,CAAC;MAClDhC,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,cAAc,EAAEL,kBAAkB,CAAC;MACpDnC,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,gBAAgB,EAAEJ,oBAAoB,CAAC;MACxDpC,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,WAAW,EAAEH,eAAe,CAAC;MAC9CrC,MAAM,CAACC,MAAM,CAACuC,EAAE,CAAC,WAAW,EAAED,eAAe,CAAC;;MAE9C;MACA,OAAO,MAAM;QACXvC,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,aAAa,EAAEZ,iBAAiB,CAAC;QACnD7B,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,aAAa,EAAET,iBAAiB,CAAC;QACnDhC,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,cAAc,EAAEN,kBAAkB,CAAC;QACrDnC,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,gBAAgB,EAAEL,oBAAoB,CAAC;QACzDpC,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,WAAW,EAAEJ,eAAe,CAAC;QAC/CrC,MAAM,CAACC,MAAM,CAACwC,GAAG,CAAC,WAAW,EAAEF,eAAe,CAAC;MACjD,CAAC;IACH;EACF,CAAC,EAAE,CAACtE,SAAS,CAAC,CAAC;;EAEf;EACA,oBACEtG,OAAA;IAAK6E,SAAS,EAAC,aAAa;IAAA9B,QAAA,GACzB8E,gBAAgB,CAAC,CAAC,EAElBT,MAAM,gBACLpH,OAAA;MAAK6E,SAAS,EAAC,iCAAiC;MAAA9B,QAAA,eAC9C/C,OAAA;QAAA+C,QAAA,GAAI,eAAG,EAACqE,MAAM,CAACY,QAAQ,EAAC,uEAAc;MAAA;QAAA/E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENpD,OAAA,CAAAE,SAAA;MAAA6C,QAAA,GACGwD,QAAQ,gBACPvG,OAAA,CAAAE,SAAA;QAAA6C,QAAA,gBACE/C,OAAA;UAAK6E,SAAS,EAAC,kBAAkB;UAAA9B,QAAA,eAC/B/C,OAAA;YAAI6E,SAAS,EAAC,mBAAmB;YAAA9B,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eAENpD,OAAA;UAAK6E,SAAS,EAAC,qBAAqB;UAAA9B,QAAA,eAClC/C,OAAA;YAAK6E,SAAS,EAAC,+BAA+B;YAAA9B,QAAA,gBAC5C/C,OAAA;cAAA+C,QAAA,GAAK,6BAAO,EAACgE,aAAa;YAAA;cAAA9D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjCpD,OAAA;cAAA+C,QAAA,GAAK,6BAAO,EAACkE,eAAe,EAAC,IAAE;YAAA;cAAAhE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpD,OAAA;UAAK6E,SAAS,EAAC,gBAAgB;UAAA9B,QAAA,EAC5BW,SAAS,IAAI8D,gBAAgB,gBAC5BxH,OAAA;YAAK6E,SAAS,EAAC,aAAa;YAAA9B,QAAA,eAC1B/C,OAAA;cAAA+C,QAAA,EAAG;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,GAENyD,aAAa,CAACd,MAAM,GAAG,CAAC,gBACtB/F,OAAA;YAAK6E,SAAS,EAAC,gBAAgB;YAAA9B,QAAA,gBAC7B/C,OAAA;cAAA+C,QAAA,EAAI;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBpD,OAAA;cAAK6E,SAAS,EAAC,wBAAwB;cAAA9B,QAAA,EACpC8D,aAAa,CAACvC,GAAG,CAAC,CAACxD,MAAM,EAAEiH,KAAK,kBAC/B/H,OAAA;gBAAiB6E,SAAS,EAAE,eAAe/D,MAAM,CAACA,MAAM,CAACgE,WAAW,CAAC,CAAC,EAAG;gBAAA/B,QAAA,gBACvE/C,OAAA;kBAAK6E,SAAS,EAAE,aAAa/D,MAAM,CAACN,IAAI,CAACsE,WAAW,CAAC,CAAC;gBAAG;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChEpD,OAAA;kBAAK6E,SAAS,EAAC,WAAW;kBAAA9B,QAAA,GACvBjC,MAAM,CAACA,MAAM,KAAK,OAAO,IAAI,GAAG,EAChCA,MAAM,CAACA,MAAM,KAAK,SAAS,IAAI,GAAG,EAClCA,MAAM,CAACA,MAAM,KAAK,WAAW,IAAI,KAAK;gBAAA;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC,CAAC;cAAA,GANE2E,KAAK;gBAAA9E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAENpD,OAAA;YACE6E,SAAS,EAAC,wBAAwB;YAClCkG,OAAO,EAAE7C,UAAW;YACpB8C,QAAQ,EAAEtH,SAAU;YAAAX,QAAA,EACrB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAEX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGLoE,gBAAgB,iBACfxH,OAAA,CAAC8J,gBAAgB;UACfnD,YAAY,EAAEA,YAAa;UAC3BoD,cAAc,EAAEX,kBAAmB;UACnCY,OAAO,EAAEA,CAAA,KAAMvC,mBAAmB,CAAC,KAAK;QAAE;UAAAxE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CACF,EAEAyD,aAAa,CAACd,MAAM,GAAG,CAAC,IAAI,CAACqB,MAAM,IAAI,CAAC1D,SAAS,IAAI,CAAC8D,gBAAgB,iBACrExH,OAAA;UAAK6E,SAAS,EAAC,UAAU;UAAA9B,QAAA,gBACvB/C,OAAA;YACE6E,SAAS,EAAC,sBAAsB;YAChCkG,OAAO,EAAEpB,cAAe;YACxBqB,QAAQ,EAAE/D,eAAe,IAAI,CAAE;YAAAlE,QAAA,EAChC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpD,OAAA;YACE6E,SAAS,EAAC,iBAAiB;YAC3BkG,OAAO,EAAElB,UAAW;YAAA9G,QAAA,EAEnBkE,eAAe,IAAI,CAAC,GAAG,WAAW,GAAG;UAAK;YAAAhE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,EAEA6D,eAAe,IAAI,CAAC,iBACnBjH,OAAA;UAAK6E,SAAS,EAAC,yBAAyB;UAAA9B,QAAA,gBACtC/C,OAAA;YAAA+C,QAAA,EAAQ;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,8JAC5B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN;MAAA,eACD,CAAC,gBAEHpD,OAAA;QAAK6E,SAAS,EAAC,kBAAkB;QAAA9B,QAAA,gBAC/B/C,OAAA;UAAA+C,QAAA,EAAI;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBpD,OAAA;UAAA+C,QAAA,IAAA0D,oBAAA,GAAIL,OAAO,CAACC,WAAW,CAAC,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBuB,QAAQ,EAAC,sFAAmB;QAAA;UAAA/E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACN,eAEDpD,OAAA,CAAC0F,cAAc;QAACC,QAAQ,EAAEA;MAAS;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACoD,GAAA,CA/aQL,UAAU;AAAA8E,GAAA,GAAV9E,UAAU;AAibnB,eAAeA,UAAU;AAAC,IAAA3C,EAAA,EAAAe,GAAA,EAAAgB,GAAA,EAAAE,GAAA,EAAAS,GAAA,EAAA+E,GAAA;AAAAC,YAAA,CAAA1H,EAAA;AAAA0H,YAAA,CAAA3G,GAAA;AAAA2G,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAzF,GAAA;AAAAyF,YAAA,CAAAhF,GAAA;AAAAgF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}