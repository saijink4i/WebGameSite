{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/ZombieDice.css';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\n\n// 승리 점수 상수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    name: '빨간 주사위',\n    faces: [{\n      image: redBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: redBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    },\n    // 5면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    name: '노란 주사위',\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowShotgun,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowFootsteps,\n      type: 'FOOTSTEPS'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    name: '녹색 주사위',\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    } // 6면\n    ]\n  }\n};\n\n// 단순화된 주사위 컴포넌트\nconst SimpleDice = ({\n  type,\n  isRolling,\n  faceIndex\n}) => {\n  _s();\n  var _DICE_FACES$type, _diceFaces$currentFac;\n  const [currentFace, setCurrentFace] = useState(0);\n  const diceFaces = ((_DICE_FACES$type = DICE_FACES[type]) === null || _DICE_FACES$type === void 0 ? void 0 : _DICE_FACES$type.faces) || [];\n\n  // 주사위 굴리기 애니메이션\n  useEffect(() => {\n    if (isRolling) {\n      // 랜덤하게 면을 변경하는 애니메이션\n      const faceChangeInterval = setInterval(() => {\n        setCurrentFace(Math.floor(Math.random() * 6));\n      }, 100);\n\n      // 애니메이션 종료 후 결과 표시\n      const animationTimer = setTimeout(() => {\n        clearInterval(faceChangeInterval);\n        if (faceIndex !== undefined) {\n          setCurrentFace(faceIndex);\n        }\n      }, 2000);\n      return () => {\n        clearInterval(faceChangeInterval);\n        clearTimeout(animationTimer);\n      };\n    } else if (faceIndex !== undefined) {\n      setCurrentFace(faceIndex);\n    }\n  }, [isRolling, faceIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `simple-dice ${type.toLowerCase()} ${isRolling ? 'rolling' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: (_diceFaces$currentFac = diceFaces[currentFace]) === null || _diceFaces$currentFac === void 0 ? void 0 : _diceFaces$currentFac.image,\n      alt: `${type} 주사위`,\n      className: \"dice-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 애니메이션 영역\n_s(SimpleDice, \"/C2e7lyYA1LAyvOej4Y5bBBG+O4=\");\n_c = SimpleDice;\nconst DiceAnimationArea = ({\n  selectedDice,\n  isRolling,\n  results\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-animation-area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: selectedDice.map((diceType, index) => {\n        const resultItem = !isRolling && results && results[index];\n        const faceIndex = resultItem ? resultItem.faceIndex : undefined;\n        return /*#__PURE__*/_jsxDEV(SimpleDice, {\n          type: diceType,\n          isRolling: isRolling,\n          faceIndex: faceIndex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 풀 상태 컴포넌트\n_c2 = DiceAnimationArea;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 색상별 주사위 카운트\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-counts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", redCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", yellowCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-sample green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", greenCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 결과 컴포넌트\n_c3 = DicePoolStatus;\nconst DiceResult = ({\n  result\n}) => {\n  const getResultText = () => {\n    if (result.result === 'BRAIN') return '뇌';\n    if (result.result === 'SHOTGUN') return '총';\n    if (result.result === 'FOOTSTEPS') return '발자국';\n    return '';\n  };\n  const getResultClass = () => {\n    return `result-${result.result.toLowerCase()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result ${getResultClass()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-type ${result.type.toLowerCase()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-result-text\",\n      children: getResultText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n// 메인 좀비 다이스 게임 컴포넌트\n_c4 = DiceResult;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s2();\n  var _players$currentTurn;\n  // 게임 상태\n  const [gameStarted, setGameStarted] = useState(false);\n  const [playerScores, setPlayerScores] = useState({});\n  const [winner, setWinner] = useState(null);\n\n  // 현재 턴 상태\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [dicePool, setDicePool] = useState([]);\n\n  // 주사위 굴림 상태\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\n\n  // 게임 초기화 함수\n  const initializeGame = () => {\n    // 모든 플레이어 점수 0으로 초기화\n    const initialScores = {};\n    players.forEach(player => {\n      initialScores[player.id] = 0;\n    });\n    setPlayerScores(initialScores);\n    setGameStarted(true);\n    setWinner(null);\n    resetTurn();\n  };\n\n  // 턴 초기화 함수\n  const resetTurn = () => {\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    resetDicePool();\n  };\n\n  // 주사위 풀 초기화 함수\n  const resetDicePool = () => {\n    const initialPool = ['RED', 'RED', 'RED', 'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'];\n    setDicePool(initialPool);\n  };\n\n  // 컴포넌트 마운트 시 게임 초기화\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  // 소켓 이벤트 리스너 설정\n  useEffect(() => {\n    if (!window.socket) {\n      console.error('소켓 연결이 없습니다.');\n      return;\n    }\n    console.log('소켓 이벤트 리스너 설정 중...');\n\n    // 주사위 결과 수신 이벤트\n    window.socket.on('diceRolled', data => {\n      console.log('서버로부터 주사위 결과 수신:', data);\n      const {\n        results,\n        brains,\n        shotguns,\n        footsteps,\n        dicePool: updatedPool\n      } = data;\n\n      // 결과 설정\n      setRolledResults(results);\n      setCurrentBrains(prev => prev + brains);\n      setCurrentShotguns(prev => prev + shotguns);\n\n      // 주사위 선택된 결과 표시\n      setSelectedDice(results.map(r => r.type));\n\n      // 주사위 풀 업데이트\n      setDicePool(updatedPool);\n\n      // 애니메이션 종료\n      setIsRolling(false);\n\n      // 애니메이션 영역 표시 타이머\n      setTimeout(() => {\n        setShowDiceAnimation(false);\n      }, 1000);\n    });\n\n    // 게임 오류 처리\n    window.socket.on('gameError', error => {\n      console.error('게임 오류 수신:', error);\n      alert(`게임 오류: ${error.message}`);\n      setIsRolling(false);\n      setShowDiceAnimation(false);\n    });\n\n    // 클린업 함수\n    return () => {\n      window.socket.off('diceRolled');\n      window.socket.off('gameError');\n      console.log('소켓 이벤트 리스너 제거됨');\n    };\n  }, []);\n\n  // 주사위 굴리기 함수\n  const handleRoll = () => {\n    try {\n      // 주사위 굴림 상태 설정\n      setIsRolling(true);\n      setShowDiceAnimation(true);\n\n      // roomId 정의\n      const roomId = window.location.pathname.split('/')[2];\n\n      // 서버에 주사위 굴리기 요청 로그\n      console.log('서버에 주사위 굴리기 요청:', {\n        roomId,\n        dicePool\n      });\n\n      // 소켓 연결 확인\n      if (!window.socket) {\n        console.error('소켓 연결이 없습니다.');\n        setIsRolling(false);\n        return;\n      }\n\n      // 소켓을 통해 서버로 주사위 굴리기 요청\n      window.socket.emit('rollDice', {\n        roomId,\n        dicePool\n      });\n\n      // 애니메이션 타이머 설정\n      setTimeout(() => {\n        if (isRolling) {\n          console.log('주사위 굴림 애니메이션 완료, 결과 대기 중...');\n        }\n      }, 2000);\n    } catch (error) {\n      console.error('주사위 굴리기 요청 중 오류 발생:', error);\n      setIsRolling(false);\n    }\n  };\n\n  // 턴 종료 함수\n  const handleStop = () => {\n    const roomId = window.location.pathname.split('/')[2];\n    const score = currentShotguns >= 3 ? 0 : currentBrains;\n    console.log('서버에 턴 종료 요청:', {\n      roomId,\n      score\n    });\n    window.socket.emit('endTurn', {\n      roomId,\n      score\n    });\n    onTurnEnd();\n  };\n\n  // 계속 굴리기 함수\n  const handleContinue = () => {\n    if (dicePool.length < 3) {\n      alert('주사위가 부족합니다. 멈추기를 선택하세요.');\n      return;\n    }\n    handleRoll();\n  };\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC810\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index === currentTurn ? 'current-player' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: playerScores[player.id] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 게임 상태 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-announcement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC784 \\uC885\\uB8CC!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD588\\uC2B5\\uB2C8\\uB2E4!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: initializeGame,\n        children: \"\\uC0C8 \\uAC8C\\uC784 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderScoreBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this), showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            results: rolledResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: rolledResults.length > 0 && !isRolling && !showDiceAnimation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rolled-results mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-results-container\",\n                children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n                  result: result\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 21\n            }, this), currentShotguns < 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success me-2\",\n              onClick: handleContinue,\n              disabled: dicePool.length < 3,\n              children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: handleStop,\n              children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : !showDiceAnimation && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            onClick: handleRoll,\n            disabled: isRolling,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_players$currentTurn = players[currentTurn]) === null || _players$currentTurn === void 0 ? void 0 : _players$currentTurn.nickname, \"\\uB2D8\\uC774 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this), showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            results: rolledResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }, this), rolledResults.length > 0 && !isRolling && !showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(DiceResult, {\n              result: result\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_s2(ZombieDice, \"vKlsov9ULENx3WWtF/AKBRSnclY=\");\n_c5 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SimpleDice\");\n$RefreshReg$(_c2, \"DiceAnimationArea\");\n$RefreshReg$(_c3, \"DicePoolStatus\");\n$RefreshReg$(_c4, \"DiceResult\");\n$RefreshReg$(_c5, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","name","faces","image","type","YELLOW","GREEN","SimpleDice","isRolling","faceIndex","_s","_DICE_FACES$type","_diceFaces$currentFac","currentFace","setCurrentFace","diceFaces","faceChangeInterval","setInterval","Math","floor","random","animationTimer","setTimeout","clearInterval","undefined","clearTimeout","className","toLowerCase","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","DiceAnimationArea","selectedDice","results","map","diceType","index","resultItem","_c2","DicePoolStatus","dicePool","redCount","filter","dice","length","yellowCount","greenCount","_c3","DiceResult","result","getResultText","getResultClass","_c4","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s2","_players$currentTurn","gameStarted","setGameStarted","playerScores","setPlayerScores","winner","setWinner","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setDicePool","setSelectedDice","setIsRolling","rolledResults","setRolledResults","showDiceAnimation","setShowDiceAnimation","initializeGame","initialScores","forEach","player","id","resetTurn","resetDicePool","initialPool","window","socket","console","error","log","on","data","brains","shotguns","footsteps","updatedPool","prev","r","alert","message","off","handleRoll","roomId","location","pathname","split","emit","handleStop","score","handleContinue","renderScoreBoard","nickname","onClick","disabled","_c5","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport '../styles/ZombieDice.css';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\n\r\n// 승리 점수 상수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    name: '빨간 주사위',\r\n    faces: [\r\n      { image: redBrain, type: 'BRAIN' },      // 1면\r\n      { image: redBrain, type: 'BRAIN' },      // 2면\r\n      { image: redShotgun, type: 'SHOTGUN' },  // 3면\r\n      { image: redShotgun, type: 'SHOTGUN' },  // 4면\r\n      { image: redShotgun, type: 'SHOTGUN' },  // 5면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' } // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    name: '노란 주사위',\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },      // 1면\r\n      { image: yellowBrain, type: 'BRAIN' },      // 2면\r\n      { image: yellowShotgun, type: 'SHOTGUN' },  // 3면\r\n      { image: yellowShotgun, type: 'SHOTGUN' },  // 4면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: yellowFootsteps, type: 'FOOTSTEPS' }  // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    name: '녹색 주사위',\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },      // 1면\r\n      { image: greenBrain, type: 'BRAIN' },      // 2면\r\n      { image: greenBrain, type: 'BRAIN' },      // 3면\r\n      { image: greenShotgun, type: 'SHOTGUN' },  // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }  // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 단순화된 주사위 컴포넌트\r\nconst SimpleDice = ({ type, isRolling, faceIndex }) => {\r\n  const [currentFace, setCurrentFace] = useState(0);\r\n  const diceFaces = DICE_FACES[type]?.faces || [];\r\n  \r\n  // 주사위 굴리기 애니메이션\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      // 랜덤하게 면을 변경하는 애니메이션\r\n      const faceChangeInterval = setInterval(() => {\r\n        setCurrentFace(Math.floor(Math.random() * 6));\r\n      }, 100);\r\n      \r\n      // 애니메이션 종료 후 결과 표시\r\n      const animationTimer = setTimeout(() => {\r\n        clearInterval(faceChangeInterval);\r\n        if (faceIndex !== undefined) {\r\n          setCurrentFace(faceIndex);\r\n        }\r\n      }, 2000);\r\n      \r\n      return () => {\r\n        clearInterval(faceChangeInterval);\r\n        clearTimeout(animationTimer);\r\n      };\r\n    } else if (faceIndex !== undefined) {\r\n      setCurrentFace(faceIndex);\r\n    }\r\n  }, [isRolling, faceIndex]);\r\n  \r\n  return (\r\n    <div className={`simple-dice ${type.toLowerCase()} ${isRolling ? 'rolling' : ''}`}>\r\n      <img \r\n        src={diceFaces[currentFace]?.image} \r\n        alt={`${type} 주사위`}\r\n        className=\"dice-image\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 애니메이션 영역\r\nconst DiceAnimationArea = ({ selectedDice, isRolling, results }) => {\r\n  return (\r\n    <div className=\"dice-animation-area\">\r\n      <div className=\"dice-container\">\r\n        {selectedDice.map((diceType, index) => {\r\n          const resultItem = !isRolling && results && results[index];\r\n          const faceIndex = resultItem ? resultItem.faceIndex : undefined;\r\n          \r\n          return (\r\n            <SimpleDice \r\n              key={index}\r\n              type={diceType}\r\n              isRolling={isRolling}\r\n              faceIndex={faceIndex}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 풀 상태 컴포넌트\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 색상별 주사위 카운트\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status\">\r\n      <h4>남은 주사위</h4>\r\n      <div className=\"dice-counts\">\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample red\"></div>\r\n          <span>빨간 주사위: {redCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample yellow\"></div>\r\n          <span>노란 주사위: {yellowCount}개</span>\r\n        </div>\r\n        <div className=\"dice-count\">\r\n          <div className=\"dice-sample green\"></div>\r\n          <span>녹색 주사위: {greenCount}개</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 결과 컴포넌트\r\nconst DiceResult = ({ result }) => {\r\n  const getResultText = () => {\r\n    if (result.result === 'BRAIN') return '뇌';\r\n    if (result.result === 'SHOTGUN') return '총';\r\n    if (result.result === 'FOOTSTEPS') return '발자국';\r\n    return '';\r\n  };\r\n  \r\n  const getResultClass = () => {\r\n    return `result-${result.result.toLowerCase()}`;\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result ${getResultClass()}`}>\r\n      <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n      <div className=\"dice-result-text\">{getResultText()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 메인 좀비 다이스 게임 컴포넌트\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  // 게임 상태\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [playerScores, setPlayerScores] = useState({});\r\n  const [winner, setWinner] = useState(null);\r\n  \r\n  // 현재 턴 상태\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [dicePool, setDicePool] = useState([]);\r\n  \r\n  // 주사위 굴림 상태\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\r\n  \r\n  // 게임 초기화 함수\r\n  const initializeGame = () => {\r\n    // 모든 플레이어 점수 0으로 초기화\r\n    const initialScores = {};\r\n    players.forEach(player => {\r\n      initialScores[player.id] = 0;\r\n    });\r\n    \r\n    setPlayerScores(initialScores);\r\n    setGameStarted(true);\r\n    setWinner(null);\r\n    resetTurn();\r\n  };\r\n  \r\n  // 턴 초기화 함수\r\n  const resetTurn = () => {\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    resetDicePool();\r\n  };\r\n  \r\n  // 주사위 풀 초기화 함수\r\n  const resetDicePool = () => {\r\n    const initialPool = [\r\n      'RED', 'RED', 'RED',\r\n      'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW',\r\n      'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'\r\n    ];\r\n    setDicePool(initialPool);\r\n  };\r\n  \r\n  // 컴포넌트 마운트 시 게임 초기화\r\n  useEffect(() => {\r\n    initializeGame();\r\n  }, []);\r\n  \r\n  // 소켓 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (!window.socket) {\r\n      console.error('소켓 연결이 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    console.log('소켓 이벤트 리스너 설정 중...');\r\n    \r\n    // 주사위 결과 수신 이벤트\r\n    window.socket.on('diceRolled', (data) => {\r\n      console.log('서버로부터 주사위 결과 수신:', data);\r\n      \r\n      const { results, brains, shotguns, footsteps, dicePool: updatedPool } = data;\r\n      \r\n      // 결과 설정\r\n      setRolledResults(results);\r\n      setCurrentBrains(prev => prev + brains);\r\n      setCurrentShotguns(prev => prev + shotguns);\r\n      \r\n      // 주사위 선택된 결과 표시\r\n      setSelectedDice(results.map(r => r.type));\r\n      \r\n      // 주사위 풀 업데이트\r\n      setDicePool(updatedPool);\r\n      \r\n      // 애니메이션 종료\r\n      setIsRolling(false);\r\n      \r\n      // 애니메이션 영역 표시 타이머\r\n      setTimeout(() => {\r\n        setShowDiceAnimation(false);\r\n      }, 1000);\r\n    });\r\n    \r\n    // 게임 오류 처리\r\n    window.socket.on('gameError', (error) => {\r\n      console.error('게임 오류 수신:', error);\r\n      alert(`게임 오류: ${error.message}`);\r\n      setIsRolling(false);\r\n      setShowDiceAnimation(false);\r\n    });\r\n    \r\n    // 클린업 함수\r\n    return () => {\r\n      window.socket.off('diceRolled');\r\n      window.socket.off('gameError');\r\n      console.log('소켓 이벤트 리스너 제거됨');\r\n    };\r\n  }, []);\r\n  \r\n  // 주사위 굴리기 함수\r\n  const handleRoll = () => {\r\n    try {\r\n      // 주사위 굴림 상태 설정\r\n      setIsRolling(true);\r\n      setShowDiceAnimation(true);\r\n      \r\n      // roomId 정의\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      // 서버에 주사위 굴리기 요청 로그\r\n      console.log('서버에 주사위 굴리기 요청:', {\r\n        roomId,\r\n        dicePool\r\n      });\r\n      \r\n      // 소켓 연결 확인\r\n      if (!window.socket) {\r\n        console.error('소켓 연결이 없습니다.');\r\n        setIsRolling(false);\r\n        return;\r\n      }\r\n      \r\n      // 소켓을 통해 서버로 주사위 굴리기 요청\r\n      window.socket.emit('rollDice', {\r\n        roomId,\r\n        dicePool\r\n      });\r\n      \r\n      // 애니메이션 타이머 설정\r\n      setTimeout(() => {\r\n        if (isRolling) {\r\n          console.log('주사위 굴림 애니메이션 완료, 결과 대기 중...');\r\n        }\r\n      }, 2000);\r\n      \r\n    } catch (error) {\r\n      console.error('주사위 굴리기 요청 중 오류 발생:', error);\r\n      setIsRolling(false);\r\n    }\r\n  };\r\n  \r\n  // 턴 종료 함수\r\n  const handleStop = () => {\r\n    const roomId = window.location.pathname.split('/')[2];\r\n    const score = currentShotguns >= 3 ? 0 : currentBrains;\r\n    \r\n    console.log('서버에 턴 종료 요청:', { roomId, score });\r\n    window.socket.emit('endTurn', {\r\n      roomId,\r\n      score\r\n    });\r\n    \r\n    onTurnEnd();\r\n  };\r\n  \r\n  // 계속 굴리기 함수\r\n  const handleContinue = () => {\r\n    if (dicePool.length < 3) {\r\n      alert('주사위가 부족합니다. 멈추기를 선택하세요.');\r\n      return;\r\n    }\r\n    \r\n    handleRoll();\r\n  };\r\n  \r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => {\r\n    return (\r\n      <div className=\"score-board\">\r\n        <h3>점수판</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>플레이어</th>\r\n              <th>점수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {players.map((player, index) => (\r\n              <tr \r\n                key={player.id} \r\n                className={index === currentTurn ? 'current-player' : ''}\r\n              >\r\n                <td>{player.nickname}</td>\r\n                <td>{playerScores[player.id] || 0}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 게임 상태 렌더링\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {winner ? (\r\n        <div className=\"winner-announcement\">\r\n          <h2>게임 종료!</h2>\r\n          <p>{winner.nickname}님이 승리했습니다!</p>\r\n          <button \r\n            className=\"btn btn-primary\" \r\n            onClick={initializeGame}\r\n          >\r\n            새 게임 시작\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {renderScoreBoard()}\r\n          \r\n          <div className=\"current-status mb-3\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <div>획득한 뇌: {currentBrains}</div>\r\n              <div>샷건 횟수: {currentShotguns}/3</div>\r\n            </div>\r\n          </div>\r\n          \r\n          {isMyTurn ? (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3>당신의 차례입니다</h3>\r\n              </div>\r\n              \r\n              {showDiceAnimation && (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    results={rolledResults}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"controls\">\r\n                {rolledResults.length > 0 && !isRolling && !showDiceAnimation ? (\r\n                  <>\r\n                    <div className=\"rolled-results mb-3\">\r\n                      <h4>주사위 결과:</h4>\r\n                      <div className=\"dice-results-container\">\r\n                        {rolledResults.map((result, index) => (\r\n                          <DiceResult key={index} result={result} />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {currentShotguns < 3 && (\r\n                      <button \r\n                        className=\"btn btn-success me-2\"\r\n                        onClick={handleContinue}\r\n                        disabled={dicePool.length < 3}\r\n                      >\r\n                        계속하기\r\n                      </button>\r\n                    )}\r\n                    \r\n                    <button \r\n                      className=\"btn btn-warning\"\r\n                      onClick={handleStop}\r\n                    >\r\n                      {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  !showDiceAnimation && (\r\n                    <button \r\n                      className=\"btn btn-primary btn-lg\"\r\n                      onClick={handleRoll}\r\n                      disabled={isRolling}\r\n                    >\r\n                      주사위 굴리기\r\n                    </button>\r\n                  )\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3>다른 플레이어의 차례입니다</h3>\r\n                <p>{players[currentTurn]?.nickname}님이 주사위를 굴리고 있습니다...</p>\r\n              </div>\r\n              \r\n              {showDiceAnimation && (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    results={rolledResults}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {rolledResults.length > 0 && !isRolling && !showDiceAnimation && (\r\n                <div className=\"rolled-results mb-3\">\r\n                  <h4>주사위 결과:</h4>\r\n                  <div className=\"dice-results-container\">\r\n                    {rolledResults.map((result, index) => (\r\n                      <DiceResult key={index} result={result} />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}