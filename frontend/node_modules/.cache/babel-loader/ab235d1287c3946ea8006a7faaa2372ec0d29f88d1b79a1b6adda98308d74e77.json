{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SocketContext } from '../../context/SocketContext';\nimport { UserContext } from '../../context/UserContext';\nimport './ZombieDice.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ZombieDice = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const socket = useContext(SocketContext);\n  const {\n    user\n  } = useContext(UserContext);\n\n  // 게임 상태 관리\n  const [gameState, setGameState] = useState({\n    isStarted: false,\n    players: [],\n    currentTurn: null,\n    dicePool: {\n      red: 3,\n      yellow: 4,\n      green: 6\n    },\n    rolledDice: [],\n    collectedBrains: 0,\n    collectedShotguns: 0,\n    turnScores: {},\n    totalScores: {},\n    playerOrder: [],\n    winner: null\n  });\n\n  // 로그 메시지 관리\n  const [logs, setLogs] = useState([]);\n\n  // 로그 추가 함수\n  const addLog = message => {\n    console.log(message); // 터미널에 로그 출력\n    setLogs(prevLogs => [...prevLogs, {\n      message,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n  useEffect(() => {\n    if (!socket) return;\n\n    // 게임 시작 이벤트 리스너\n    socket.on('game:start', data => {\n      addLog(`게임이 시작되었습니다. 플레이어 순서: ${data.playerOrder.map(p => p.username).join(', ')}`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: true,\n        players: data.players,\n        currentTurn: data.currentTurn,\n        playerOrder: data.playerOrder,\n        turnScores: data.turnScores || {},\n        totalScores: data.totalScores || {}\n      }));\n    });\n\n    // 주사위 굴리기 결과 이벤트 리스너\n    socket.on('game:diceRolled', data => {\n      addLog(`${data.currentPlayer.username}님이 주사위를 굴렸습니다.`);\n      addLog(`결과: ${data.rolledDice.map(die => `${die.color} ${die.face}`).join(', ')}`);\n      setGameState(prev => ({\n        ...prev,\n        dicePool: data.dicePool,\n        rolledDice: data.rolledDice,\n        collectedBrains: data.collectedBrains,\n        collectedShotguns: data.collectedShotguns,\n        currentTurn: data.currentTurn\n      }));\n    });\n\n    // 턴 종료 이벤트 리스너\n    socket.on('game:turnEnd', data => {\n      addLog(`${data.previousPlayer.username}님의 턴이 종료되었습니다.`);\n      addLog(`${data.currentPlayer.username}님의 턴이 시작됩니다.`);\n      setGameState(prev => ({\n        ...prev,\n        currentTurn: data.currentTurn,\n        dicePool: {\n          red: 3,\n          yellow: 4,\n          green: 6\n        },\n        rolledDice: [],\n        collectedBrains: 0,\n        collectedShotguns: 0,\n        turnScores: data.turnScores,\n        totalScores: data.totalScores\n      }));\n    });\n\n    // 게임 종료 이벤트 리스너\n    socket.on('game:end', data => {\n      addLog(`게임이 종료되었습니다. 승자: ${data.winner.username}`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: false,\n        winner: data.winner\n      }));\n    });\n\n    // 게임 상태 업데이트 이벤트 리스너\n    socket.on('game:stateUpdate', data => {\n      addLog('게임 상태가 업데이트되었습니다.');\n      setGameState(prev => ({\n        ...prev,\n        ...data\n      }));\n    });\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      socket.off('game:start');\n      socket.off('game:diceRolled');\n      socket.off('game:turnEnd');\n      socket.off('game:end');\n      socket.off('game:stateUpdate');\n    };\n  }, [socket]);\n\n  // 주사위 굴리기 함수\n  const rollDice = () => {\n    addLog('주사위 굴리기 요청을 보냅니다.');\n    socket.emit('game:rollDice', {\n      roomId,\n      dicePool: gameState.dicePool\n    });\n  };\n\n  // 턴 종료 함수\n  const endTurn = () => {\n    addLog('턴 종료 요청을 보냅니다.');\n    socket.emit('game:endTurn', {\n      roomId\n    });\n  };\n\n  // 게임 종료 및 로비로 돌아가기\n  const exitGame = () => {\n    navigate(`/room/${roomId}`);\n  };\n\n  // 현재 플레이어인지 확인하는 함수\n  const isCurrentPlayer = () => {\n    return gameState.currentTurn && gameState.currentTurn.id === user.id;\n  };\n\n  // 주사위 색상에 따른 스타일 클래스 반환\n  const getDiceColorClass = color => {\n    switch (color) {\n      case 'red':\n        return 'dice-red';\n      case 'yellow':\n        return 'dice-yellow';\n      case 'green':\n        return 'dice-green';\n      default:\n        return '';\n    }\n  };\n\n  // 주사위 면에 따른 아이콘 반환\n  const getDiceFaceIcon = face => {\n    switch (face) {\n      case 'brain':\n        return '🧠';\n      case 'shotgun':\n        return '💥';\n      case 'footsteps':\n        return '👣';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC880\\uBE44 \\uB2E4\\uC774\\uC2A4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), gameState.winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-announcement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83C\\uDFC6 \\uC2B9\\uC790: \", gameState.winner.username, \" \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exitGame,\n        children: \"\\uB85C\\uBE44\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), !gameState.winner && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD50C\\uB808\\uC774\\uC5B4 \\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: gameState.playerOrder.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: gameState.currentTurn && gameState.currentTurn.id === player.id ? 'current-player' : '',\n              children: [player.username, \" - \\uC810\\uC218: \", gameState.totalScores[player.id] || 0, gameState.currentTurn && gameState.currentTurn.id === player.id && ' (현재 턴)']\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"turn-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD134 \\uC815\\uBCF4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), gameState.currentTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4: \", gameState.currentTurn.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uBAA8\\uC740 \\uB1CC: \", gameState.collectedBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", gameState.collectedShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uD480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.red]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.yellow]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.green]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uCD1D \\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.red + gameState.dicePool.yellow + gameState.dicePool.green]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-dice\",\n          children: [gameState.rolledDice.map((die, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dice ${getDiceColorClass(die.color)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dice-face\",\n              children: getDiceFaceIcon(die.face)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dice-info\",\n              children: [die.color, \" \", die.face]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)), gameState.rolledDice.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC544\\uC9C1 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [isCurrentPlayer() && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rollDice,\n            disabled: gameState.collectedShotguns >= 3 || gameState.dicePool.red + gameState.dicePool.yellow + gameState.dicePool.green < 3,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: endTurn,\n            children: \"\\uD134 \\uC885\\uB8CC\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), !isCurrentPlayer() && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uD134\\uC744 \\uAE30\\uB2E4\\uB9AC\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-logs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC8C\\uC784 \\uB85C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-container\",\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-time\",\n            children: [\"[\", log.timestamp, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-message\",\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"VF+3G50YbWXqFwqQb1E3iVFR+H4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","SocketContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ZombieDice","_s","roomId","navigate","socket","user","gameState","setGameState","isStarted","players","currentTurn","dicePool","red","yellow","green","rolledDice","collectedBrains","collectedShotguns","turnScores","totalScores","playerOrder","winner","logs","setLogs","addLog","message","console","log","prevLogs","timestamp","Date","toLocaleTimeString","on","data","map","p","username","join","prev","currentPlayer","die","color","face","previousPlayer","off","rollDice","emit","endTurn","exitGame","isCurrentPlayer","id","getDiceColorClass","getDiceFaceIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","player","index","length","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { SocketContext } from '../../context/SocketContext';\nimport { UserContext } from '../../context/UserContext';\nimport './ZombieDice.css';\n\nconst ZombieDice = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n  const socket = useContext(SocketContext);\n  const { user } = useContext(UserContext);\n  \n  // 게임 상태 관리\n  const [gameState, setGameState] = useState({\n    isStarted: false,\n    players: [],\n    currentTurn: null,\n    dicePool: {\n      red: 3,\n      yellow: 4,\n      green: 6\n    },\n    rolledDice: [],\n    collectedBrains: 0,\n    collectedShotguns: 0,\n    turnScores: {},\n    totalScores: {},\n    playerOrder: [],\n    winner: null\n  });\n  \n  // 로그 메시지 관리\n  const [logs, setLogs] = useState([]);\n  \n  // 로그 추가 함수\n  const addLog = (message) => {\n    console.log(message); // 터미널에 로그 출력\n    setLogs(prevLogs => [...prevLogs, { message, timestamp: new Date().toLocaleTimeString() }]);\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n    \n    // 게임 시작 이벤트 리스너\n    socket.on('game:start', (data) => {\n      addLog(`게임이 시작되었습니다. 플레이어 순서: ${data.playerOrder.map(p => p.username).join(', ')}`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: true,\n        players: data.players,\n        currentTurn: data.currentTurn,\n        playerOrder: data.playerOrder,\n        turnScores: data.turnScores || {},\n        totalScores: data.totalScores || {}\n      }));\n    });\n    \n    // 주사위 굴리기 결과 이벤트 리스너\n    socket.on('game:diceRolled', (data) => {\n      addLog(`${data.currentPlayer.username}님이 주사위를 굴렸습니다.`);\n      addLog(`결과: ${data.rolledDice.map(die => `${die.color} ${die.face}`).join(', ')}`);\n      \n      setGameState(prev => ({\n        ...prev,\n        dicePool: data.dicePool,\n        rolledDice: data.rolledDice,\n        collectedBrains: data.collectedBrains,\n        collectedShotguns: data.collectedShotguns,\n        currentTurn: data.currentTurn\n      }));\n    });\n    \n    // 턴 종료 이벤트 리스너\n    socket.on('game:turnEnd', (data) => {\n      addLog(`${data.previousPlayer.username}님의 턴이 종료되었습니다.`);\n      addLog(`${data.currentPlayer.username}님의 턴이 시작됩니다.`);\n      \n      setGameState(prev => ({\n        ...prev,\n        currentTurn: data.currentTurn,\n        dicePool: {\n          red: 3,\n          yellow: 4,\n          green: 6\n        },\n        rolledDice: [],\n        collectedBrains: 0,\n        collectedShotguns: 0,\n        turnScores: data.turnScores,\n        totalScores: data.totalScores\n      }));\n    });\n    \n    // 게임 종료 이벤트 리스너\n    socket.on('game:end', (data) => {\n      addLog(`게임이 종료되었습니다. 승자: ${data.winner.username}`);\n      setGameState(prev => ({\n        ...prev,\n        isStarted: false,\n        winner: data.winner\n      }));\n    });\n    \n    // 게임 상태 업데이트 이벤트 리스너\n    socket.on('game:stateUpdate', (data) => {\n      addLog('게임 상태가 업데이트되었습니다.');\n      setGameState(prev => ({\n        ...prev,\n        ...data\n      }));\n    });\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      socket.off('game:start');\n      socket.off('game:diceRolled');\n      socket.off('game:turnEnd');\n      socket.off('game:end');\n      socket.off('game:stateUpdate');\n    };\n  }, [socket]);\n\n  // 주사위 굴리기 함수\n  const rollDice = () => {\n    addLog('주사위 굴리기 요청을 보냅니다.');\n    socket.emit('game:rollDice', { roomId, dicePool: gameState.dicePool });\n  };\n\n  // 턴 종료 함수\n  const endTurn = () => {\n    addLog('턴 종료 요청을 보냅니다.');\n    socket.emit('game:endTurn', { roomId });\n  };\n\n  // 게임 종료 및 로비로 돌아가기\n  const exitGame = () => {\n    navigate(`/room/${roomId}`);\n  };\n\n  // 현재 플레이어인지 확인하는 함수\n  const isCurrentPlayer = () => {\n    return gameState.currentTurn && gameState.currentTurn.id === user.id;\n  };\n\n  // 주사위 색상에 따른 스타일 클래스 반환\n  const getDiceColorClass = (color) => {\n    switch (color) {\n      case 'red': return 'dice-red';\n      case 'yellow': return 'dice-yellow';\n      case 'green': return 'dice-green';\n      default: return '';\n    }\n  };\n\n  // 주사위 면에 따른 아이콘 반환\n  const getDiceFaceIcon = (face) => {\n    switch (face) {\n      case 'brain': return '🧠';\n      case 'shotgun': return '💥';\n      case 'footsteps': return '👣';\n      default: return '';\n    }\n  };\n\n  return (\n    <div className=\"zombie-dice-container\">\n      <h1>좀비 다이스</h1>\n      \n      {gameState.winner && (\n        <div className=\"winner-announcement\">\n          <h2>🏆 승자: {gameState.winner.username} 🏆</h2>\n          <button onClick={exitGame}>로비로 돌아가기</button>\n        </div>\n      )}\n      \n      {!gameState.winner && (\n        <>\n          <div className=\"game-info\">\n            <div className=\"player-list\">\n              <h3>플레이어 목록</h3>\n              <ul>\n                {gameState.playerOrder.map((player) => (\n                  <li key={player.id} className={gameState.currentTurn && gameState.currentTurn.id === player.id ? 'current-player' : ''}>\n                    {player.username} - 점수: {gameState.totalScores[player.id] || 0}\n                    {gameState.currentTurn && gameState.currentTurn.id === player.id && ' (현재 턴)'}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            \n            <div className=\"turn-info\">\n              <h3>턴 정보</h3>\n              {gameState.currentTurn && (\n                <>\n                  <p>현재 플레이어: {gameState.currentTurn.username}</p>\n                  <p>모은 뇌: {gameState.collectedBrains}</p>\n                  <p>샷건 횟수: {gameState.collectedShotguns}/3</p>\n                </>\n              )}\n            </div>\n            \n            <div className=\"dice-pool\">\n              <h3>주사위 풀</h3>\n              <p>빨간 주사위: {gameState.dicePool.red}</p>\n              <p>노란 주사위: {gameState.dicePool.yellow}</p>\n              <p>녹색 주사위: {gameState.dicePool.green}</p>\n              <p>총 남은 주사위: {gameState.dicePool.red + gameState.dicePool.yellow + gameState.dicePool.green}</p>\n            </div>\n          </div>\n          \n          <div className=\"dice-results\">\n            <h3>주사위 결과</h3>\n            <div className=\"rolled-dice\">\n              {gameState.rolledDice.map((die, index) => (\n                <div key={index} className={`dice ${getDiceColorClass(die.color)}`}>\n                  <span className=\"dice-face\">{getDiceFaceIcon(die.face)}</span>\n                  <span className=\"dice-info\">{die.color} {die.face}</span>\n                </div>\n              ))}\n              {gameState.rolledDice.length === 0 && <p>아직 주사위를 굴리지 않았습니다.</p>}\n            </div>\n          </div>\n          \n          <div className=\"game-actions\">\n            {isCurrentPlayer() && (\n              <>\n                <button \n                  onClick={rollDice} \n                  disabled={gameState.collectedShotguns >= 3 || (gameState.dicePool.red + gameState.dicePool.yellow + gameState.dicePool.green) < 3}\n                >\n                  주사위 굴리기\n                </button>\n                <button onClick={endTurn}>턴 종료하기</button>\n              </>\n            )}\n            {!isCurrentPlayer() && <p>다른 플레이어의 턴을 기다리는 중입니다...</p>}\n          </div>\n        </>\n      )}\n      \n      <div className=\"game-logs\">\n        <h3>게임 로그</h3>\n        <div className=\"logs-container\">\n          {logs.map((log, index) => (\n            <div key={index} className=\"log-entry\">\n              <span className=\"log-time\">[{log.timestamp}]</span>\n              <span className=\"log-message\">{log.message}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}