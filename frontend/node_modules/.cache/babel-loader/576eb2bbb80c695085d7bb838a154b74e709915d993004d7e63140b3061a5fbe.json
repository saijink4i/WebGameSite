{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport redDice from '../../assets/zombie-dice/dice/red.png';\nimport yellowDice from '../../assets/zombie-dice/dice/yellow.png';\nimport greenDice from '../../assets/zombie-dice/dice/green.png';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DICE_TYPES = {\n  RED: {\n    image: redDice,\n    faces: ['BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN', 'SHOTGUN', 'SHOTGUN']\n  },\n  YELLOW: {\n    image: yellowDice,\n    faces: ['BRAIN', 'BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN', 'SHOTGUN']\n  },\n  GREEN: {\n    image: greenDice,\n    faces: ['BRAIN', 'BRAIN', 'BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN']\n  }\n};\nconst FACE_IMAGES = {\n  RED: {\n    BRAIN: redBrain,\n    FOOTSTEPS: redFootsteps,\n    SHOTGUN: redShotgun\n  },\n  YELLOW: {\n    BRAIN: yellowBrain,\n    FOOTSTEPS: yellowFootsteps,\n    SHOTGUN: yellowShotgun\n  },\n  GREEN: {\n    BRAIN: greenBrain,\n    FOOTSTEPS: greenFootsteps,\n    SHOTGUN: greenShotgun\n  }\n};\n\n// 상수 추가\nconst WINNING_SCORE = 13; // 승리 조건 점수\n\n// 주사위 면 배열 수정\nconst DICE_FACES = {\n  GREEN: ['BRAIN', 'BRAIN', 'BRAIN',\n  // 1, 2, 3\n  'FOOTSTEPS', 'FOOTSTEPS',\n  // 4, 5\n  'SHOTGUN' // 6\n  ],\n  YELLOW: ['BRAIN', 'BRAIN',\n  // 1, 2\n  'FOOTSTEPS', 'FOOTSTEPS',\n  // 3, 4\n  'SHOTGUN', 'SHOTGUN' // 5, 6\n  ],\n  RED: ['BRAIN',\n  // 1\n  'FOOTSTEPS', 'FOOTSTEPS',\n  // 2, 3\n  'SHOTGUN', 'SHOTGUN', 'SHOTGUN' // 4, 5, 6\n  ]\n};\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s();\n  const [dicePool, setDicePool] = useState([...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [keptDice, setKeptDice] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n\n  // 주사위 3개 랜덤 선택\n  const pickDice = () => {\n    const newDice = [];\n    const tempPool = [...dicePool];\n    for (let i = 0; i < 3; i++) {\n      if (tempPool.length === 0) break;\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\n      newDice.push(tempPool[randomIndex]);\n      tempPool.splice(randomIndex, 1);\n    }\n    setDicePool(tempPool);\n    setSelectedDice(newDice);\n  };\n\n  // 주사위 굴리기\n  const rollDice = () => {\n    const results = selectedDice.map(diceType => {\n      const faces = DICE_FACES[diceType];\n      const randomIndex = Math.floor(Math.random() * 6);\n      return {\n        type: diceType,\n        result: faces[randomIndex]\n      };\n    });\n    setRolledResults(results);\n\n    // 결과 계산\n    let newBrains = currentBrains;\n    let newShotguns = currentShotguns;\n    results.forEach(({\n      result,\n      type\n    }) => {\n      if (result === 'BRAIN') newBrains++;\n      if (result === 'SHOTGUN') newShotguns++;\n      if (result === 'FOOTSTEPS') {\n        // 도망간 주사위는 다시 풀에 넣음\n        setDicePool(prev => [...prev, type]);\n      }\n    });\n    setCurrentBrains(newBrains);\n    setCurrentShotguns(newShotguns);\n\n    // 샷건이 3개 이상이면 자동으로 턴 종료\n    if (newShotguns >= 3) {\n      setTimeout(() => {\n        onTurnEnd(0);\n      }, 1000);\n    }\n  };\n\n  // 계속 진행\n  const handleContinue = () => {\n    setRolledResults([]);\n    // 도망간 주사위를 제외한 나머지는 보관\n    const keptDice = rolledResults.filter(result => result.result !== 'FOOTSTEPS').map(result => result.type);\n\n    // 새로운 주사위 선택\n    pickDice();\n  };\n\n  // 턴 종료\n  const handleStop = () => {\n    const finalScore = currentBrains;\n    // 주사위 풀 초기화\n    setDicePool([...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')]);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    setSelectedDice([]);\n    onTurnEnd(finalScore);\n  };\n\n  // 점수판 렌더링\n  const renderScoreBoard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-board\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC810\\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: index === currentTurn ? 'current-player' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, player.nickname, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n\n  // 주사위 굴리기 처리\n  const handleRoll = () => {\n    setIsRolling(true);\n    setTimeout(() => {\n      rollDice();\n      setIsRolling(false);\n    }, 1000);\n  };\n\n  // 승자가 있는지 확인\n  const winner = players.find(player => player.score >= WINNING_SCORE);\n  useEffect(() => {\n    if (isMyTurn) {\n      pickDice();\n    }\n  }, [isMyTurn]);\n\n  // Dice 컴포넌트 추가\n  function Dice({\n    type,\n    result,\n    isRolling\n  }) {\n    const faces = DICE_FACES[type];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice ${isRolling ? 'rolling' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face front\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        },\n        children: !isRolling && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: FACE_IMAGES[type][result],\n          alt: result,\n          className: `face-result ${!isRolling ? 'show' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face back\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face right\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face left\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face top\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-face bottom\",\n        style: {\n          backgroundImage: `url(${DICE_TYPES[type].image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isMyTurn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zombie-dice\",\n      children: [renderScoreBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [players[currentTurn].nickname, \"\\uB2D8\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area mb-3\",\n        children: selectedDice.length > 0 && !rolledResults.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleRoll,\n          disabled: isRolling,\n          children: isRolling ? '주사위 굴리는 중...' : '주사위 굴리기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this) : rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(Dice, {\n          type: result.type,\n          result: result.result,\n          isRolling: isRolling\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), rolledResults.length > 0 && !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: \"\\uBA48\\uCD94\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(ZombieDice, \"qQFGRlUTBES4DjAndRVuYsaJQek=\");\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","redDice","yellowDice","greenDice","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","DICE_TYPES","RED","image","faces","YELLOW","GREEN","FACE_IMAGES","BRAIN","FOOTSTEPS","SHOTGUN","WINNING_SCORE","DICE_FACES","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s","dicePool","setDicePool","Array","fill","selectedDice","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","keptDice","setKeptDice","isRolling","setIsRolling","pickDice","newDice","tempPool","i","length","randomIndex","Math","floor","random","push","splice","rollDice","results","map","diceType","type","result","newBrains","newShotguns","forEach","prev","setTimeout","handleContinue","filter","handleStop","finalScore","renderScoreBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","player","index","nickname","score","handleRoll","winner","find","Dice","style","backgroundImage","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport redDice from '../../assets/zombie-dice/dice/red.png';\r\nimport yellowDice from '../../assets/zombie-dice/dice/yellow.png';\r\nimport greenDice from '../../assets/zombie-dice/dice/green.png';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\nconst DICE_TYPES = {\r\n  RED: {\r\n    image: redDice,\r\n    faces: ['BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN', 'SHOTGUN', 'SHOTGUN']\r\n  },\r\n  YELLOW: {\r\n    image: yellowDice,\r\n    faces: ['BRAIN', 'BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN', 'SHOTGUN']\r\n  },\r\n  GREEN: {\r\n    image: greenDice,\r\n    faces: ['BRAIN', 'BRAIN', 'BRAIN', 'FOOTSTEPS', 'FOOTSTEPS', 'SHOTGUN']\r\n  }\r\n};\r\n\r\nconst FACE_IMAGES = {\r\n  RED: {\r\n    BRAIN: redBrain,\r\n    FOOTSTEPS: redFootsteps,\r\n    SHOTGUN: redShotgun\r\n  },\r\n  YELLOW: {\r\n    BRAIN: yellowBrain,\r\n    FOOTSTEPS: yellowFootsteps,\r\n    SHOTGUN: yellowShotgun\r\n  },\r\n  GREEN: {\r\n    BRAIN: greenBrain,\r\n    FOOTSTEPS: greenFootsteps,\r\n    SHOTGUN: greenShotgun\r\n  }\r\n};\r\n\r\n// 상수 추가\r\nconst WINNING_SCORE = 13; // 승리 조건 점수\r\n\r\n// 주사위 면 배열 수정\r\nconst DICE_FACES = {\r\n  GREEN: [\r\n    'BRAIN', 'BRAIN', 'BRAIN',    // 1, 2, 3\r\n    'FOOTSTEPS', 'FOOTSTEPS',     // 4, 5\r\n    'SHOTGUN'                     // 6\r\n  ],\r\n  YELLOW: [\r\n    'BRAIN', 'BRAIN',             // 1, 2\r\n    'FOOTSTEPS', 'FOOTSTEPS',     // 3, 4\r\n    'SHOTGUN', 'SHOTGUN'          // 5, 6\r\n  ],\r\n  RED: [\r\n    'BRAIN',                      // 1\r\n    'FOOTSTEPS', 'FOOTSTEPS',     // 2, 3\r\n    'SHOTGUN', 'SHOTGUN', 'SHOTGUN' // 4, 5, 6\r\n  ]\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  const [dicePool, setDicePool] = useState([\r\n    ...Array(3).fill('RED'),\r\n    ...Array(4).fill('YELLOW'),\r\n    ...Array(6).fill('GREEN')\r\n  ]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [keptDice, setKeptDice] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n\r\n  // 주사위 3개 랜덤 선택\r\n  const pickDice = () => {\r\n    const newDice = [];\r\n    const tempPool = [...dicePool];\r\n    \r\n    for (let i = 0; i < 3; i++) {\r\n      if (tempPool.length === 0) break;\r\n      const randomIndex = Math.floor(Math.random() * tempPool.length);\r\n      newDice.push(tempPool[randomIndex]);\r\n      tempPool.splice(randomIndex, 1);\r\n    }\r\n    \r\n    setDicePool(tempPool);\r\n    setSelectedDice(newDice);\r\n  };\r\n\r\n  // 주사위 굴리기\r\n  const rollDice = () => {\r\n    const results = selectedDice.map(diceType => {\r\n      const faces = DICE_FACES[diceType];\r\n      const randomIndex = Math.floor(Math.random() * 6);\r\n      return {\r\n        type: diceType,\r\n        result: faces[randomIndex]\r\n      };\r\n    });\r\n    \r\n    setRolledResults(results);\r\n    \r\n    // 결과 계산\r\n    let newBrains = currentBrains;\r\n    let newShotguns = currentShotguns;\r\n    \r\n    results.forEach(({ result, type }) => {\r\n      if (result === 'BRAIN') newBrains++;\r\n      if (result === 'SHOTGUN') newShotguns++;\r\n      if (result === 'FOOTSTEPS') {\r\n        // 도망간 주사위는 다시 풀에 넣음\r\n        setDicePool(prev => [...prev, type]);\r\n      }\r\n    });\r\n\r\n    setCurrentBrains(newBrains);\r\n    setCurrentShotguns(newShotguns);\r\n\r\n    // 샷건이 3개 이상이면 자동으로 턴 종료\r\n    if (newShotguns >= 3) {\r\n      setTimeout(() => {\r\n        onTurnEnd(0);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // 계속 진행\r\n  const handleContinue = () => {\r\n    setRolledResults([]);\r\n    // 도망간 주사위를 제외한 나머지는 보관\r\n    const keptDice = rolledResults\r\n      .filter(result => result.result !== 'FOOTSTEPS')\r\n      .map(result => result.type);\r\n    \r\n    // 새로운 주사위 선택\r\n    pickDice();\r\n  };\r\n\r\n  // 턴 종료\r\n  const handleStop = () => {\r\n    const finalScore = currentBrains;\r\n    // 주사위 풀 초기화\r\n    setDicePool([\r\n      ...Array(3).fill('RED'),\r\n      ...Array(4).fill('YELLOW'),\r\n      ...Array(6).fill('GREEN')\r\n    ]);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n    onTurnEnd(finalScore);\r\n  };\r\n\r\n  // 점수판 렌더링\r\n  const renderScoreBoard = () => (\r\n    <div className=\"score-board\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>플레이어</th>\r\n            <th>점수</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {players.map((player, index) => (\r\n            <tr \r\n              key={player.nickname}\r\n              className={index === currentTurn ? 'current-player' : ''}\r\n            >\r\n              <td>{player.nickname}</td>\r\n              <td>{player.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  // 주사위 굴리기 처리\r\n  const handleRoll = () => {\r\n    setIsRolling(true);\r\n    setTimeout(() => {\r\n      rollDice();\r\n      setIsRolling(false);\r\n    }, 1000);\r\n  };\r\n\r\n  // 승자가 있는지 확인\r\n  const winner = players.find(player => player.score >= WINNING_SCORE);\r\n\r\n  useEffect(() => {\r\n    if (isMyTurn) {\r\n      pickDice();\r\n    }\r\n  }, [isMyTurn]);\r\n\r\n  // Dice 컴포넌트 추가\r\n  function Dice({ type, result, isRolling }) {\r\n    const faces = DICE_FACES[type];\r\n    \r\n    return (\r\n      <div className={`dice ${isRolling ? 'rolling' : ''}`}>\r\n        <div className=\"dice-face front\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}}>\r\n          {!isRolling && <img \r\n            src={FACE_IMAGES[type][result]} \r\n            alt={result}\r\n            className={`face-result ${!isRolling ? 'show' : ''}`}\r\n          />}\r\n        </div>\r\n        <div className=\"dice-face back\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}} />\r\n        <div className=\"dice-face right\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}} />\r\n        <div className=\"dice-face left\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}} />\r\n        <div className=\"dice-face top\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}} />\r\n        <div className=\"dice-face bottom\" style={{backgroundImage: `url(${DICE_TYPES[type].image})`}} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isMyTurn) {\r\n    return (\r\n      <div className=\"zombie-dice\">\r\n        {renderScoreBoard()}\r\n        <div className=\"text-center\">\r\n          <h3>{players[currentTurn].nickname}님의 차례입니다</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"current-status mb-3\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <div>획득한 뇌: {currentBrains}</div>\r\n              <div>샷건 횟수: {currentShotguns}/3</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dice-area mb-3\">\r\n            {selectedDice.length > 0 && !rolledResults.length ? (\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={handleRoll}\r\n                disabled={isRolling}\r\n              >\r\n                {isRolling ? '주사위 굴리는 중...' : '주사위 굴리기'}\r\n              </button>\r\n            ) : (\r\n              rolledResults.map((result, index) => (\r\n                <Dice \r\n                  key={index}\r\n                  type={result.type}\r\n                  result={result.result}\r\n                  isRolling={isRolling}\r\n                />\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {rolledResults.length > 0 && !winner && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                멈추기\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}