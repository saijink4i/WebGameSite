{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\context\\\\SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(null);\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // 소켓 연결 생성\n    const newSocket = io('http://localhost:3001');\n\n    // 소켓 연결 이벤트 로깅\n    newSocket.on('connect', () => {\n      console.log('소켓 서버에 연결되었습니다.');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('소켓 서버와 연결이 끊어졌습니다.');\n    });\n    newSocket.on('error', error => {\n      console.error('소켓 오류:', error);\n    });\n    setSocket(newSocket);\n\n    // 컴포넌트 언마운트 시 소켓 연결 해제\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = SocketProvider;\nexport { SocketContext };\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","io","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","newSocket","on","console","log","error","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext(null);\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 소켓 연결 생성\r\n    const newSocket = io('http://localhost:3001');\r\n    \r\n    // 소켓 연결 이벤트 로깅\r\n    newSocket.on('connect', () => {\r\n      console.log('소켓 서버에 연결되었습니다.');\r\n    });\r\n    \r\n    newSocket.on('disconnect', () => {\r\n      console.log('소켓 서버와 연결이 끊어졌습니다.');\r\n    });\r\n    \r\n    newSocket.on('error', (error) => {\r\n      console.error('소켓 오류:', error);\r\n    });\r\n    \r\n    setSocket(newSocket);\r\n\r\n    // 컴포넌트 언마운트 시 소켓 연결 해제\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { SocketContext }; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEzC,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAGT,EAAE,CAAC,uBAAuB,CAAC;;IAE7C;IACAS,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC,CAAC;IAEFH,SAAS,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC,CAAC,CAAC;IAEFH,SAAS,CAACC,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MAC/BF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;IAEFL,SAAS,CAACC,SAAS,CAAC;;IAEpB;IACA,OAAO,MAAM;MACXA,SAAS,CAACK,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAET,MAAO;IAAAF,QAAA,EACnCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CAjCWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAmC3B,SAASD,aAAa;AAAG,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}