{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../../styles/ZombieDice.css';\n\n// 상수 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13; // 승리 점수\nconst INITIAL_DICE_POOL = {\n  RED: 3,\n  YELLOW: 4,\n  GREEN: 6\n};\nconst ZombieDice = ({\n  players,\n  isHost,\n  roomId\n}) => {\n  _s();\n  // 게임 상태 관리\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(null);\n  const [dicePool, setDicePool] = useState(INITIAL_DICE_POOL);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [playerOrder, setPlayerOrder] = useState([]);\n  const [scores, setScores] = useState({});\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [winner, setWinner] = useState(null);\n\n  // 소켓 참조\n  const socket = window.socket;\n\n  // 로그 출력 함수\n  const log = (message, data) => {\n    if (data) {\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\n    } else {\n      console.log(`[좀비다이스 클라이언트] ${message}`);\n    }\n  };\n\n  // 게임 시작 처리\n  const handleGameStart = () => {\n    if (!socket) return;\n    const order = players.map((player, index) => ({\n      id: player.id,\n      order: index + 1\n    }));\n    setPlayerOrder(order);\n    setCurrentPlayerIndex(0);\n    setGameStarted(true);\n    socket.emit('gameStarted', {\n      roomId,\n      order\n    });\n    log('게임이 시작되었습니다.', order);\n  };\n\n  // 게임 이벤트 리스너 설정\n  useEffect(() => {\n    if (!socket) {\n      log('소켓 연결이 없습니다');\n      return;\n    }\n\n    // 게임 시작 이벤트 수신\n    socket.on('gameStarted', data => {\n      log('게임 시작 이벤트 수신:', data);\n      setPlayerOrder(data.order);\n      // 시작 플레이어를 1번 플레이어로 설정\n      const startingPlayerIndex = data.order.findIndex(player => player.order === 1);\n      setCurrentPlayerIndex(startingPlayerIndex);\n      setGameStarted(true);\n    });\n\n    // 주사위 굴림 결과 수신\n    socket.on('diceRolled', data => {\n      log('주사위 굴림 결과 수신:', data);\n      setRolledResults(data.results);\n      setDicePool(data.updatedPool);\n      setIsRolling(false);\n    });\n\n    // 턴 변경 이벤트 수신\n    socket.on('turnChanged', data => {\n      log('턴 변경 이벤트 수신:', data);\n      const {\n        nextPlayerIndex\n      } = data;\n\n      // 점수 업데이트\n      setScores(prevScores => ({\n        ...prevScores,\n        [players[nextPlayerIndex].id]: prevScores[players[nextPlayerIndex].id] + currentBrains\n      }));\n\n      // 다음 플레이어 설정\n      setCurrentPlayerIndex(nextPlayerIndex);\n\n      // 턴 초기화\n      resetTurn();\n    });\n\n    // 정리 함수\n    return () => {\n      socket.off('gameStarted');\n      socket.off('diceRolled');\n      socket.off('turnChanged');\n    };\n  }, [socket, players]);\n\n  // 턴 초기화\n  const resetTurn = () => {\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    log('턴 초기화');\n  };\n\n  // 주사위 굴리기\n  const handleRollDice = () => {\n    if (!socket || isRolling || Object.values(dicePool).reduce((a, b) => a + b) < 3) return;\n    log('주사위 굴리기 요청');\n\n    // 주사위 굴림 상태 설정\n    setIsRolling(true);\n\n    // 서버에 주사위 굴리기 요청\n    socket.emit('rollDice', {\n      roomId,\n      dicePool\n    });\n  };\n\n  // 턴 종료\n  const handleEndTurn = () => {\n    if (!socket || isRolling) return;\n    log('턴 종료');\n\n    // 점수 업데이트\n    if (currentShotguns < 3) {\n      const currentPlayerId = players[currentPlayerIndex].id;\n      setScores(prevScores => ({\n        ...prevScores,\n        [currentPlayerId]: prevScores[currentPlayerId] + currentBrains\n      }));\n    }\n\n    // 다음 플레이어로 턴 변경\n    setCurrentPlayerIndex(prevIndex => (prevIndex + 1) % players.length);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setDicePool(INITIAL_DICE_POOL);\n    setRolledResults([]);\n\n    // 서버에 턴 종료 요청\n    socket.emit('endTurn', {\n      roomId,\n      keepScore: currentShotguns < 3\n    });\n  };\n  function startGame() {\n    if (allPlayersReady()) {\n      console.log(\"모든 플레이어가 준비되었습니다. 게임을 시작합니다.\");\n      // 서버로 게임 시작 요청 보내기\n      socket.emit('startGame');\n    } else {\n      console.log(\"모든 플레이어가 준비되지 않았습니다.\");\n    }\n  }\n  function rollDice() {\n    console.log(\"주사위 굴리기 요청을 보냅니다.\");\n    socket.emit('rollDice');\n  }\n  socket.on('diceResult', data => {\n    console.log(\"주사위 결과를 받았습니다:\", data);\n    // 화면에 주사위 결과 표시\n    displayDiceResult(data.result);\n  });\n  function playerChoice(continueRolling) {\n    if (continueRolling) {\n      console.log(\"플레이어가 계속 굴리기를 선택했습니다.\");\n      rollDice();\n    } else {\n      console.log(\"플레이어가 멈추기를 선택했습니다.\");\n      // 다음 플레이어로 턴 넘기기 로직\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-board mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-3\",\n          children: \"\\uC810\\uC218\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC21C\\uC11C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: playerOrder.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: currentPlayerIndex === index ? 'table-active' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [players.find(p => p.id === player.id).nickname, \" \", player.id === socket.id && '(나)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.order\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area\",\n        children: [rolledResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `dice-result result-${result.toLowerCase()}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-type ${result.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/zombie-dice/faces/${result.toLowerCase()}.png`,\n                alt: `${result}`,\n                className: \"dice-result-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-result-text\",\n                children: result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uACBD\\uACE0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), \" \\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1 \\uBC1C\\uACAC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-status mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-counts\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", dicePool.RED, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", dicePool.YELLOW, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-sample green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", dicePool.GREEN, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: players[currentPlayerIndex].id === socket.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleRollDice,\n              disabled: isRolling || Object.values(dicePool).reduce((a, b) => a + b) < 3,\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: handleEndTurn,\n              disabled: isRolling,\n              children: \"\\uBA48\\uCD94\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleGameStart,\n        children: \"\\uAC8C\\uC784 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"x7DBHHgmd8iaOdAn9gPPPlPChCk=\");\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","INITIAL_DICE_POOL","RED","YELLOW","GREEN","ZombieDice","players","isHost","roomId","_s","gameStarted","setGameStarted","currentPlayerIndex","setCurrentPlayerIndex","dicePool","setDicePool","rolledResults","setRolledResults","isRolling","setIsRolling","playerOrder","setPlayerOrder","scores","setScores","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","winner","setWinner","socket","window","log","message","data","console","handleGameStart","order","map","player","index","id","emit","on","startingPlayerIndex","findIndex","results","updatedPool","nextPlayerIndex","prevScores","resetTurn","off","handleRollDice","Object","values","reduce","a","b","handleEndTurn","currentPlayerId","prevIndex","length","keepScore","startGame","allPlayersReady","rollDice","displayDiceResult","result","playerChoice","continueRolling","className","children","fileName","_jsxFileName","lineNumber","columnNumber","find","p","nickname","toLowerCase","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport '../../styles/ZombieDice.css';\r\n\r\n// 상수 정의\r\nconst WINNING_SCORE = 13;  // 승리 점수\r\nconst INITIAL_DICE_POOL = {\r\n  RED: 3,\r\n  YELLOW: 4,\r\n  GREEN: 6\r\n};\r\n\r\nconst ZombieDice = ({ players, isHost, roomId }) => {\r\n  // 게임 상태 관리\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(null);\r\n  const [dicePool, setDicePool] = useState(INITIAL_DICE_POOL);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [playerOrder, setPlayerOrder] = useState([]);\r\n  const [scores, setScores] = useState({});\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n  \r\n  // 소켓 참조\r\n  const socket = window.socket;\r\n  \r\n  // 로그 출력 함수\r\n  const log = (message, data) => {\r\n    if (data) {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\r\n    } else {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`);\r\n    }\r\n  };\r\n  \r\n  // 게임 시작 처리\r\n  const handleGameStart = () => {\r\n    if (!socket) return;\r\n\r\n    const order = players.map((player, index) => ({\r\n      id: player.id,\r\n      order: index + 1\r\n    }));\r\n\r\n    setPlayerOrder(order);\r\n    setCurrentPlayerIndex(0);\r\n    setGameStarted(true);\r\n\r\n    socket.emit('gameStarted', { roomId, order });\r\n    log('게임이 시작되었습니다.', order);\r\n  };\r\n  \r\n  // 게임 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      log('소켓 연결이 없습니다');\r\n      return;\r\n    }\r\n    \r\n    // 게임 시작 이벤트 수신\r\n    socket.on('gameStarted', (data) => {\r\n      log('게임 시작 이벤트 수신:', data);\r\n      setPlayerOrder(data.order);\r\n      // 시작 플레이어를 1번 플레이어로 설정\r\n      const startingPlayerIndex = data.order.findIndex(player => player.order === 1);\r\n      setCurrentPlayerIndex(startingPlayerIndex);\r\n      setGameStarted(true);\r\n    });\r\n    \r\n    // 주사위 굴림 결과 수신\r\n    socket.on('diceRolled', (data) => {\r\n      log('주사위 굴림 결과 수신:', data);\r\n      setRolledResults(data.results);\r\n      setDicePool(data.updatedPool);\r\n      setIsRolling(false);\r\n    });\r\n    \r\n    // 턴 변경 이벤트 수신\r\n    socket.on('turnChanged', (data) => {\r\n      log('턴 변경 이벤트 수신:', data);\r\n      \r\n      const { nextPlayerIndex } = data;\r\n      \r\n      // 점수 업데이트\r\n      setScores(prevScores => ({\r\n        ...prevScores,\r\n        [players[nextPlayerIndex].id]: prevScores[players[nextPlayerIndex].id] + currentBrains\r\n      }));\r\n      \r\n      // 다음 플레이어 설정\r\n      setCurrentPlayerIndex(nextPlayerIndex);\r\n      \r\n      // 턴 초기화\r\n      resetTurn();\r\n    });\r\n    \r\n    // 정리 함수\r\n    return () => {\r\n      socket.off('gameStarted');\r\n      socket.off('diceRolled');\r\n      socket.off('turnChanged');\r\n    };\r\n  }, [socket, players]);\r\n  \r\n  // 턴 초기화\r\n  const resetTurn = () => {\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    log('턴 초기화');\r\n  };\r\n  \r\n  // 주사위 굴리기\r\n  const handleRollDice = () => {\r\n    if (!socket || isRolling || Object.values(dicePool).reduce((a, b) => a + b) < 3) return;\r\n    \r\n    log('주사위 굴리기 요청');\r\n    \r\n    // 주사위 굴림 상태 설정\r\n    setIsRolling(true);\r\n    \r\n    // 서버에 주사위 굴리기 요청\r\n    socket.emit('rollDice', {\r\n      roomId,\r\n      dicePool\r\n    });\r\n  };\r\n  \r\n  // 턴 종료\r\n  const handleEndTurn = () => {\r\n    if (!socket || isRolling) return;\r\n    \r\n    log('턴 종료');\r\n    \r\n    // 점수 업데이트\r\n    if (currentShotguns < 3) {\r\n      const currentPlayerId = players[currentPlayerIndex].id;\r\n      setScores(prevScores => ({\r\n        ...prevScores,\r\n        [currentPlayerId]: prevScores[currentPlayerId] + currentBrains\r\n      }));\r\n    }\r\n    \r\n    // 다음 플레이어로 턴 변경\r\n    setCurrentPlayerIndex((prevIndex) => (prevIndex + 1) % players.length);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setDicePool(INITIAL_DICE_POOL);\r\n    setRolledResults([]);\r\n    \r\n    // 서버에 턴 종료 요청\r\n    socket.emit('endTurn', {\r\n      roomId,\r\n      keepScore: currentShotguns < 3\r\n    });\r\n  };\r\n  \r\n  function startGame() {\r\n    if (allPlayersReady()) {\r\n      console.log(\"모든 플레이어가 준비되었습니다. 게임을 시작합니다.\");\r\n      // 서버로 게임 시작 요청 보내기\r\n      socket.emit('startGame');\r\n    } else {\r\n      console.log(\"모든 플레이어가 준비되지 않았습니다.\");\r\n    }\r\n  }\r\n  \r\n  function rollDice() {\r\n    console.log(\"주사위 굴리기 요청을 보냅니다.\");\r\n    socket.emit('rollDice');\r\n  }\r\n  \r\n  socket.on('diceResult', (data) => {\r\n    console.log(\"주사위 결과를 받았습니다:\", data);\r\n    // 화면에 주사위 결과 표시\r\n    displayDiceResult(data.result);\r\n  });\r\n  \r\n  function playerChoice(continueRolling) {\r\n    if (continueRolling) {\r\n      console.log(\"플레이어가 계속 굴리기를 선택했습니다.\");\r\n      rollDice();\r\n    } else {\r\n      console.log(\"플레이어가 멈추기를 선택했습니다.\");\r\n      // 다음 플레이어로 턴 넘기기 로직\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {gameStarted ? (\r\n        <div>\r\n          <div className=\"score-board mb-4\">\r\n            <h3 className=\"text-center mb-3\">점수판</h3>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>플레이어</th>\r\n                  <th>순서</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {playerOrder.map((player, index) => (\r\n                  <tr key={player.id} className={currentPlayerIndex === index ? 'table-active' : ''}>\r\n                    <td>{players.find(p => p.id === player.id).nickname} {player.id === socket.id && '(나)'}</td>\r\n                    <td>{player.order}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div className=\"dice-area\">\r\n            {rolledResults.length > 0 && (\r\n              <div className=\"rolled-results mb-3\">\r\n                <h4>주사위 결과:</h4>\r\n                <div className=\"dice-results-container\">\r\n                  {rolledResults.map((result, index) => (\r\n                    <div \r\n                      key={index} \r\n                      className={`dice-result result-${result.toLowerCase()}`}\r\n                    >\r\n                      <div className={`dice-type ${result.toLowerCase()}`}></div>\r\n                      <img \r\n                        src={`/zombie-dice/faces/${result.toLowerCase()}.png`} \r\n                        alt={`${result}`}\r\n                        className=\"dice-result-image\"\r\n                      />\r\n                      <div className=\"dice-result-text\">{result}</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {currentShotguns >= 3 && (\r\n              <div className=\"alert alert-danger\">\r\n                <strong>경고:</strong> 총이 3개 이상 발견되었습니다! 턴을 종료해야 합니다.\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"dice-pool-status mb-3\">\r\n              <h4>남은 주사위:</h4>\r\n              <div className=\"dice-counts\">\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample red\"></div>\r\n                  <span>빨간 주사위: {dicePool.RED}개</span>\r\n                </div>\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample yellow\"></div>\r\n                  <span>노란 주사위: {dicePool.YELLOW}개</span>\r\n                </div>\r\n                <div className=\"dice-count\">\r\n                  <div className=\"dice-sample green\"></div>\r\n                  <span>녹색 주사위: {dicePool.GREEN}개</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"controls\">\r\n              {players[currentPlayerIndex].id === socket.id ? (\r\n                <>\r\n                  <button \r\n                    className=\"btn btn-primary\" \r\n                    onClick={handleRollDice}\r\n                    disabled={isRolling || Object.values(dicePool).reduce((a, b) => a + b) < 3}\r\n                  >\r\n                    주사위 굴리기\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-warning\" \r\n                    onClick={handleEndTurn}\r\n                    disabled={isRolling}\r\n                  >\r\n                    멈추기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <p>다른 플레이어의 차례입니다...</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        isHost && (\r\n          <div className=\"text-center mb-4\">\r\n            <button \r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={handleGameStart}\r\n            >\r\n              게임 시작\r\n            </button>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}