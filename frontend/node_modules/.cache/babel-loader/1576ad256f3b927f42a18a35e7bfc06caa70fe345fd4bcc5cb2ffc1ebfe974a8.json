{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ZombieDice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZombieDice = ({\n  socket,\n  username,\n  isRoomLeader,\n  roomStatus,\n  players\n}) => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [gameState, setGameState] = useState({\n    isGameStarted: false,\n    currentPlayer: '',\n    playerOrder: [],\n    dicePool: {\n      red: 3,\n      yellow: 4,\n      green: 6\n    },\n    rolledDice: [],\n    brains: 0,\n    shotguns: 0,\n    isMyTurn: false\n  });\n\n  // 게임 시작 요청 처리\n  const handleStartGame = () => {\n    console.log('게임 시작 요청 전송');\n    socket.emit('startGame', {\n      roomId\n    });\n  };\n\n  // 주사위 굴리기 요청\n  const handleRollDice = () => {\n    console.log('주사위 굴리기 요청 전송', gameState.dicePool);\n    socket.emit('rollDice', {\n      roomId,\n      dicePool: gameState.dicePool\n    });\n  };\n\n  // 턴 종료 처리\n  const handleEndTurn = () => {\n    console.log('턴 종료 요청 전송');\n    socket.emit('endTurn', {\n      roomId,\n      brains: gameState.brains\n    });\n  };\n\n  // 주사위 결과 렌더링\n  const renderDice = dice => {\n    const diceColors = {\n      red: '빨간색',\n      yellow: '노란색',\n      green: '녹색'\n    };\n    const diceResults = {\n      brain: '뇌',\n      shotgun: '총',\n      footprints: '발자국'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-result\",\n      children: dice.map((die, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `die ${die.color}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [diceColors[die.color], \" \\uC8FC\\uC0AC\\uC704: \", diceResults[die.result]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 소켓 이벤트 리스너 설정\n  useEffect(() => {\n    if (!socket) return;\n\n    // 게임 시작 이벤트\n    socket.on('gameStarted', data => {\n      console.log('게임 시작됨:', data);\n      setGameState(prevState => ({\n        ...prevState,\n        isGameStarted: true,\n        playerOrder: data.playerOrder,\n        currentPlayer: data.currentPlayer,\n        isMyTurn: data.currentPlayer === username\n      }));\n    });\n\n    // 주사위 결과 이벤트\n    socket.on('diceRolled', data => {\n      console.log('주사위 결과 수신:', data);\n\n      // 주사위 결과 처리\n      const newBrains = gameState.brains + data.rolledDice.filter(die => die.result === 'brain').length;\n      const newShotguns = gameState.shotguns + data.rolledDice.filter(die => die.result === 'shotgun').length;\n      setGameState(prevState => ({\n        ...prevState,\n        dicePool: data.dicePool,\n        rolledDice: data.rolledDice,\n        brains: newBrains,\n        shotguns: newShotguns\n      }));\n    });\n\n    // 턴 변경 이벤트\n    socket.on('turnChanged', data => {\n      console.log('턴 변경됨:', data);\n      setGameState(prevState => ({\n        ...prevState,\n        currentPlayer: data.currentPlayer,\n        isMyTurn: data.currentPlayer === username,\n        brains: 0,\n        shotguns: 0,\n        dicePool: {\n          red: 3,\n          yellow: 4,\n          green: 6\n        },\n        rolledDice: []\n      }));\n    });\n\n    // 게임 종료 이벤트\n    socket.on('gameEnded', data => {\n      console.log('게임 종료됨:', data);\n      alert(`게임 종료! 승자: ${data.winner}`);\n      setGameState({\n        isGameStarted: false,\n        currentPlayer: '',\n        playerOrder: [],\n        dicePool: {\n          red: 3,\n          yellow: 4,\n          green: 6\n        },\n        rolledDice: [],\n        brains: 0,\n        shotguns: 0,\n        isMyTurn: false\n      });\n    });\n    return () => {\n      socket.off('gameStarted');\n      socket.off('diceRolled');\n      socket.off('turnChanged');\n      socket.off('gameEnded');\n    };\n  }, [socket, username, gameState.brains, gameState.shotguns]);\n\n  // 게임 대기 화면\n  if (!gameState.isGameStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zombie-dice-waiting\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC880\\uBE44 \\uB2E4\\uC774\\uC2A4 \\uAC8C\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uCC38\\uAC00\\uC790 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [player.username, \" \", player.isReady ? '(준비 완료)' : '(준비 중)']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), isRoomLeader && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        disabled: !players.every(player => player.isReady),\n        children: \"\\uAC8C\\uC784 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 게임 진행 화면\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC880\\uBE44 \\uB2E4\\uC774\\uC2A4 \\uAC8C\\uC784\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4: \", gameState.currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD50C\\uB808\\uC774\\uC5B4 \\uC21C\\uC11C: \", gameState.playerOrder.join(' → ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC810\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: gameState.playerOrder.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: player === gameState.currentPlayer ? 'current-player' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: gameState.scores && gameState.scores[player] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, player, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC8FC\\uC0AC\\uC704 \\uD480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.red, \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.yellow, \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", gameState.dicePool.green, \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD604\\uC7AC \\uD134 \\uC810\\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB1CC: \", gameState.brains, \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD1D: \", gameState.shotguns, \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), gameState.rolledDice.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), renderDice(gameState.rolledDice)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), gameState.isMyTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRollDice,\n        disabled: gameState.shotguns >= 3,\n        className: \"roll-button\",\n        children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEndTurn,\n        children: \"\\uD134 \\uC885\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), !gameState.isMyTurn && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"waiting-message\",\n      children: [gameState.currentPlayer, \"\\uB2D8\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4. \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), gameState.shotguns >= 3 && gameState.isMyTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCD1D\\uC744 3\\uBC88 \\uB9DE\\uC558\\uC2B5\\uB2C8\\uB2E4! \\uC774\\uBC88 \\uD134\\uC5D0 \\uBAA8\\uC740 \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEndTurn,\n        children: \"\\uB2E4\\uC74C \\uD50C\\uB808\\uC774\\uC5B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"m1buL1m+9xjxEnngBu05yWIXErs=\", false, function () {\n  return [useParams];\n});\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","ZombieDice","socket","username","isRoomLeader","roomStatus","players","_s","roomId","gameState","setGameState","isGameStarted","currentPlayer","playerOrder","dicePool","red","yellow","green","rolledDice","brains","shotguns","isMyTurn","handleStartGame","console","log","emit","handleRollDice","handleEndTurn","renderDice","dice","diceColors","diceResults","brain","shotgun","footprints","className","children","map","die","index","color","result","fileName","_jsxFileName","lineNumber","columnNumber","on","data","prevState","newBrains","filter","length","newShotguns","alert","winner","off","player","isReady","onClick","disabled","every","join","scores","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './ZombieDice.css';\r\n\r\nconst ZombieDice = ({ socket, username, isRoomLeader, roomStatus, players }) => {\r\n  const { roomId } = useParams();\r\n  const [gameState, setGameState] = useState({\r\n    isGameStarted: false,\r\n    currentPlayer: '',\r\n    playerOrder: [],\r\n    dicePool: {\r\n      red: 3,\r\n      yellow: 4,\r\n      green: 6\r\n    },\r\n    rolledDice: [],\r\n    brains: 0,\r\n    shotguns: 0,\r\n    isMyTurn: false\r\n  });\r\n\r\n  // 게임 시작 요청 처리\r\n  const handleStartGame = () => {\r\n    console.log('게임 시작 요청 전송');\r\n    socket.emit('startGame', { roomId });\r\n  };\r\n\r\n  // 주사위 굴리기 요청\r\n  const handleRollDice = () => {\r\n    console.log('주사위 굴리기 요청 전송', gameState.dicePool);\r\n    socket.emit('rollDice', { \r\n      roomId, \r\n      dicePool: gameState.dicePool \r\n    });\r\n  };\r\n\r\n  // 턴 종료 처리\r\n  const handleEndTurn = () => {\r\n    console.log('턴 종료 요청 전송');\r\n    socket.emit('endTurn', { \r\n      roomId, \r\n      brains: gameState.brains \r\n    });\r\n  };\r\n\r\n  // 주사위 결과 렌더링\r\n  const renderDice = (dice) => {\r\n    const diceColors = {\r\n      red: '빨간색',\r\n      yellow: '노란색',\r\n      green: '녹색'\r\n    };\r\n\r\n    const diceResults = {\r\n      brain: '뇌',\r\n      shotgun: '총',\r\n      footprints: '발자국'\r\n    };\r\n\r\n    return (\r\n      <div className=\"dice-result\">\r\n        {dice.map((die, index) => (\r\n          <div key={index} className={`die ${die.color}`}>\r\n            <p>{diceColors[die.color]} 주사위: {diceResults[die.result]}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 소켓 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    // 게임 시작 이벤트\r\n    socket.on('gameStarted', (data) => {\r\n      console.log('게임 시작됨:', data);\r\n      setGameState(prevState => ({\r\n        ...prevState,\r\n        isGameStarted: true,\r\n        playerOrder: data.playerOrder,\r\n        currentPlayer: data.currentPlayer,\r\n        isMyTurn: data.currentPlayer === username\r\n      }));\r\n    });\r\n\r\n    // 주사위 결과 이벤트\r\n    socket.on('diceRolled', (data) => {\r\n      console.log('주사위 결과 수신:', data);\r\n      \r\n      // 주사위 결과 처리\r\n      const newBrains = gameState.brains + data.rolledDice.filter(die => die.result === 'brain').length;\r\n      const newShotguns = gameState.shotguns + data.rolledDice.filter(die => die.result === 'shotgun').length;\r\n      \r\n      setGameState(prevState => ({\r\n        ...prevState,\r\n        dicePool: data.dicePool,\r\n        rolledDice: data.rolledDice,\r\n        brains: newBrains,\r\n        shotguns: newShotguns\r\n      }));\r\n    });\r\n\r\n    // 턴 변경 이벤트\r\n    socket.on('turnChanged', (data) => {\r\n      console.log('턴 변경됨:', data);\r\n      setGameState(prevState => ({\r\n        ...prevState,\r\n        currentPlayer: data.currentPlayer,\r\n        isMyTurn: data.currentPlayer === username,\r\n        brains: 0,\r\n        shotguns: 0,\r\n        dicePool: {\r\n          red: 3,\r\n          yellow: 4,\r\n          green: 6\r\n        },\r\n        rolledDice: []\r\n      }));\r\n    });\r\n\r\n    // 게임 종료 이벤트\r\n    socket.on('gameEnded', (data) => {\r\n      console.log('게임 종료됨:', data);\r\n      alert(`게임 종료! 승자: ${data.winner}`);\r\n      setGameState({\r\n        isGameStarted: false,\r\n        currentPlayer: '',\r\n        playerOrder: [],\r\n        dicePool: {\r\n          red: 3,\r\n          yellow: 4,\r\n          green: 6\r\n        },\r\n        rolledDice: [],\r\n        brains: 0,\r\n        shotguns: 0,\r\n        isMyTurn: false\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameStarted');\r\n      socket.off('diceRolled');\r\n      socket.off('turnChanged');\r\n      socket.off('gameEnded');\r\n    };\r\n  }, [socket, username, gameState.brains, gameState.shotguns]);\r\n\r\n  // 게임 대기 화면\r\n  if (!gameState.isGameStarted) {\r\n    return (\r\n      <div className=\"zombie-dice-waiting\">\r\n        <h2>좀비 다이스 게임</h2>\r\n        <div className=\"players-list\">\r\n          <h3>참가자 목록</h3>\r\n          <ul>\r\n            {players.map((player, index) => (\r\n              <li key={index}>\r\n                {player.username} {player.isReady ? '(준비 완료)' : '(준비 중)'}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {isRoomLeader && (\r\n          <button \r\n            onClick={handleStartGame}\r\n            disabled={!players.every(player => player.isReady)}\r\n          >\r\n            게임 시작\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 게임 진행 화면\r\n  return (\r\n    <div className=\"zombie-dice-game\">\r\n      <h2>좀비 다이스 게임</h2>\r\n      \r\n      <div className=\"game-info\">\r\n        <p>현재 플레이어: {gameState.currentPlayer}</p>\r\n        <p>플레이어 순서: {gameState.playerOrder.join(' → ')}</p>\r\n      </div>\r\n      \r\n      <div className=\"scoreboard\">\r\n        <h3>점수판</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>플레이어</th>\r\n              <th>점수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {gameState.playerOrder.map(player => (\r\n              <tr key={player} className={player === gameState.currentPlayer ? 'current-player' : ''}>\r\n                <td>{player}</td>\r\n                <td>{gameState.scores && gameState.scores[player] || 0}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      <div className=\"dice-pool\">\r\n        <h3>주사위 풀</h3>\r\n        <p>빨간 주사위: {gameState.dicePool.red}개</p>\r\n        <p>노란 주사위: {gameState.dicePool.yellow}개</p>\r\n        <p>녹색 주사위: {gameState.dicePool.green}개</p>\r\n      </div>\r\n      \r\n      <div className=\"score\">\r\n        <h3>현재 턴 점수</h3>\r\n        <p>뇌: {gameState.brains}개</p>\r\n        <p>총: {gameState.shotguns}개</p>\r\n      </div>\r\n      \r\n      {gameState.rolledDice.length > 0 && (\r\n        <div className=\"dice-results\">\r\n          <h3>주사위 결과</h3>\r\n          {renderDice(gameState.rolledDice)}\r\n        </div>\r\n      )}\r\n      \r\n      {gameState.isMyTurn && (\r\n        <div className=\"actions\">\r\n          <button \r\n            onClick={handleRollDice} \r\n            disabled={gameState.shotguns >= 3}\r\n            className=\"roll-button\"\r\n          >\r\n            주사위 굴리기\r\n          </button>\r\n          <button onClick={handleEndTurn}>\r\n            턴 종료\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {!gameState.isMyTurn && (\r\n        <p className=\"waiting-message\">{gameState.currentPlayer}님의 차례입니다. 기다려주세요.</p>\r\n      )}\r\n      \r\n      {gameState.shotguns >= 3 && gameState.isMyTurn && (\r\n        <div className=\"game-over\">\r\n          <p>총을 3번 맞았습니다! 이번 턴에 모은 뇌를 모두 잃었습니다.</p>\r\n          <button onClick={handleEndTurn}>다음 플레이어</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZombieDice;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC;IACzCgB,aAAa,EAAE,KAAK;IACpBC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;MACRC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACT,CAAC;IACDC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BtB,MAAM,CAACuB,IAAI,CAAC,WAAW,EAAE;MAAEjB;IAAO,CAAC,CAAC;EACtC,CAAC;;EAED;EACA,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3BH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEf,SAAS,CAACK,QAAQ,CAAC;IAChDZ,MAAM,CAACuB,IAAI,CAAC,UAAU,EAAE;MACtBjB,MAAM;MACNM,QAAQ,EAAEL,SAAS,CAACK;IACtB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBtB,MAAM,CAACuB,IAAI,CAAC,SAAS,EAAE;MACrBjB,MAAM;MACNW,MAAM,EAAEV,SAAS,CAACU;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMS,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAG;MACjBf,GAAG,EAAE,KAAK;MACVC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE;IACT,CAAC;IAED,MAAMc,WAAW,GAAG;MAClBC,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IACd,CAAC;IAED,oBACElC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBP,IAAI,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBvC,OAAA;QAAiBmC,SAAS,EAAE,OAAOG,GAAG,CAACE,KAAK,EAAG;QAAAJ,QAAA,eAC7CpC,OAAA;UAAAoC,QAAA,GAAIN,UAAU,CAACQ,GAAG,CAACE,KAAK,CAAC,EAAC,uBAAM,EAACT,WAAW,CAACO,GAAG,CAACG,MAAM,CAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADrDN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;;EAED;EACAjD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,MAAM,EAAE;;IAEb;IACAA,MAAM,CAAC4C,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjCxB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEuB,IAAI,CAAC;MAC5BrC,YAAY,CAACsC,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZrC,aAAa,EAAE,IAAI;QACnBE,WAAW,EAAEkC,IAAI,CAAClC,WAAW;QAC7BD,aAAa,EAAEmC,IAAI,CAACnC,aAAa;QACjCS,QAAQ,EAAE0B,IAAI,CAACnC,aAAa,KAAKT;MACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;;IAEF;IACAD,MAAM,CAAC4C,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MAChCxB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEuB,IAAI,CAAC;;MAE/B;MACA,MAAME,SAAS,GAAGxC,SAAS,CAACU,MAAM,GAAG4B,IAAI,CAAC7B,UAAU,CAACgC,MAAM,CAACZ,GAAG,IAAIA,GAAG,CAACG,MAAM,KAAK,OAAO,CAAC,CAACU,MAAM;MACjG,MAAMC,WAAW,GAAG3C,SAAS,CAACW,QAAQ,GAAG2B,IAAI,CAAC7B,UAAU,CAACgC,MAAM,CAACZ,GAAG,IAAIA,GAAG,CAACG,MAAM,KAAK,SAAS,CAAC,CAACU,MAAM;MAEvGzC,YAAY,CAACsC,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZlC,QAAQ,EAAEiC,IAAI,CAACjC,QAAQ;QACvBI,UAAU,EAAE6B,IAAI,CAAC7B,UAAU;QAC3BC,MAAM,EAAE8B,SAAS;QACjB7B,QAAQ,EAAEgC;MACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;;IAEF;IACAlD,MAAM,CAAC4C,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjCxB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuB,IAAI,CAAC;MAC3BrC,YAAY,CAACsC,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZpC,aAAa,EAAEmC,IAAI,CAACnC,aAAa;QACjCS,QAAQ,EAAE0B,IAAI,CAACnC,aAAa,KAAKT,QAAQ;QACzCgB,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,CAAC;QACXN,QAAQ,EAAE;UACRC,GAAG,EAAE,CAAC;UACNC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE;QACT,CAAC;QACDC,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;;IAEF;IACAhB,MAAM,CAAC4C,EAAE,CAAC,WAAW,EAAGC,IAAI,IAAK;MAC/BxB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEuB,IAAI,CAAC;MAC5BM,KAAK,CAAC,cAAcN,IAAI,CAACO,MAAM,EAAE,CAAC;MAClC5C,YAAY,CAAC;QACXC,aAAa,EAAE,KAAK;QACpBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;UACRC,GAAG,EAAE,CAAC;UACNC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE;QACT,CAAC;QACDC,UAAU,EAAE,EAAE;QACdC,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACXnB,MAAM,CAACqD,GAAG,CAAC,aAAa,CAAC;MACzBrD,MAAM,CAACqD,GAAG,CAAC,YAAY,CAAC;MACxBrD,MAAM,CAACqD,GAAG,CAAC,aAAa,CAAC;MACzBrD,MAAM,CAACqD,GAAG,CAAC,WAAW,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACrD,MAAM,EAAEC,QAAQ,EAAEM,SAAS,CAACU,MAAM,EAAEV,SAAS,CAACW,QAAQ,CAAC,CAAC;;EAE5D;EACA,IAAI,CAACX,SAAS,CAACE,aAAa,EAAE;IAC5B,oBACEX,OAAA;MAAKmC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCpC,OAAA;QAAAoC,QAAA,EAAI;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7C,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BpC,OAAA;UAAAoC,QAAA,EAAI;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACf7C,OAAA;UAAAoC,QAAA,EACG9B,OAAO,CAAC+B,GAAG,CAAC,CAACmB,MAAM,EAAEjB,KAAK,kBACzBvC,OAAA;YAAAoC,QAAA,GACGoB,MAAM,CAACrD,QAAQ,EAAC,GAAC,EAACqD,MAAM,CAACC,OAAO,GAAG,SAAS,GAAG,QAAQ;UAAA,GADjDlB,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACLzC,YAAY,iBACXJ,OAAA;QACE0D,OAAO,EAAEpC,eAAgB;QACzBqC,QAAQ,EAAE,CAACrD,OAAO,CAACsD,KAAK,CAACJ,MAAM,IAAIA,MAAM,CAACC,OAAO,CAAE;QAAArB,QAAA,EACpD;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;;EAEA;EACA,oBACE7C,OAAA;IAAKmC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpC,OAAA;MAAAoC,QAAA,EAAI;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElB7C,OAAA;MAAKmC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBpC,OAAA;QAAAoC,QAAA,GAAG,yCAAS,EAAC3B,SAAS,CAACG,aAAa;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzC7C,OAAA;QAAAoC,QAAA,GAAG,yCAAS,EAAC3B,SAAS,CAACI,WAAW,CAACgD,IAAI,CAAC,KAAK,CAAC;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEN7C,OAAA;MAAKmC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpC,OAAA;QAAAoC,QAAA,EAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZ7C,OAAA;QAAAoC,QAAA,gBACEpC,OAAA;UAAAoC,QAAA,eACEpC,OAAA;YAAAoC,QAAA,gBACEpC,OAAA;cAAAoC,QAAA,EAAI;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb7C,OAAA;cAAAoC,QAAA,EAAI;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR7C,OAAA;UAAAoC,QAAA,EACG3B,SAAS,CAACI,WAAW,CAACwB,GAAG,CAACmB,MAAM,iBAC/BxD,OAAA;YAAiBmC,SAAS,EAAEqB,MAAM,KAAK/C,SAAS,CAACG,aAAa,GAAG,gBAAgB,GAAG,EAAG;YAAAwB,QAAA,gBACrFpC,OAAA;cAAAoC,QAAA,EAAKoB;YAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjB7C,OAAA;cAAAoC,QAAA,EAAK3B,SAAS,CAACqD,MAAM,IAAIrD,SAAS,CAACqD,MAAM,CAACN,MAAM,CAAC,IAAI;YAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFrDW,MAAM;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGX,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN7C,OAAA;MAAKmC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBpC,OAAA;QAAAoC,QAAA,EAAI;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd7C,OAAA;QAAAoC,QAAA,GAAG,mCAAQ,EAAC3B,SAAS,CAACK,QAAQ,CAACC,GAAG,EAAC,QAAC;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxC7C,OAAA;QAAAoC,QAAA,GAAG,mCAAQ,EAAC3B,SAAS,CAACK,QAAQ,CAACE,MAAM,EAAC,QAAC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3C7C,OAAA;QAAAoC,QAAA,GAAG,mCAAQ,EAAC3B,SAAS,CAACK,QAAQ,CAACG,KAAK,EAAC,QAAC;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAEN7C,OAAA;MAAKmC,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBpC,OAAA;QAAAoC,QAAA,EAAI;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB7C,OAAA;QAAAoC,QAAA,GAAG,UAAG,EAAC3B,SAAS,CAACU,MAAM,EAAC,QAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7B7C,OAAA;QAAAoC,QAAA,GAAG,UAAG,EAAC3B,SAAS,CAACW,QAAQ,EAAC,QAAC;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EAELpC,SAAS,CAACS,UAAU,CAACiC,MAAM,GAAG,CAAC,iBAC9BnD,OAAA;MAAKmC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpC,OAAA;QAAAoC,QAAA,EAAI;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACdjB,UAAU,CAACnB,SAAS,CAACS,UAAU,CAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN,EAEApC,SAAS,CAACY,QAAQ,iBACjBrB,OAAA;MAAKmC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBpC,OAAA;QACE0D,OAAO,EAAEhC,cAAe;QACxBiC,QAAQ,EAAElD,SAAS,CAACW,QAAQ,IAAI,CAAE;QAClCe,SAAS,EAAC,aAAa;QAAAC,QAAA,EACxB;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7C,OAAA;QAAQ0D,OAAO,EAAE/B,aAAc;QAAAS,QAAA,EAAC;MAEhC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEA,CAACpC,SAAS,CAACY,QAAQ,iBAClBrB,OAAA;MAAGmC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAE3B,SAAS,CAACG,aAAa,EAAC,oFAAiB;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7E,EAEApC,SAAS,CAACW,QAAQ,IAAI,CAAC,IAAIX,SAAS,CAACY,QAAQ,iBAC5CrB,OAAA;MAAKmC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBpC,OAAA;QAAAoC,QAAA,EAAG;MAAkC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzC7C,OAAA;QAAQ0D,OAAO,EAAE/B,aAAc;QAAAS,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAzPIN,UAAU;EAAA,QACKJ,SAAS;AAAA;AAAAkE,EAAA,GADxB9D,UAAU;AA2PhB,eAAeA,UAAU;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}