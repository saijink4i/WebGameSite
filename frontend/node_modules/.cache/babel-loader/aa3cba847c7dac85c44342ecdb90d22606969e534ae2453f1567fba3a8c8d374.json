{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\nimport * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    faces: [{\n      image: redBrain,\n      type: 'SHOTGUN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'BRAIN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'BRAIN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// 바닥 컴포넌트\nconst Floor = () => {\n  _s();\n  const [ref] = usePlane(() => ({\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -2, 0],\n    type: 'Static'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [20, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shadowMaterial\", {\n      color: \"#171717\",\n      transparent: true,\n      opacity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n// 물리 기반 주사위 컴포넌트\n_s(Floor, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n  return [usePlane];\n});\n_c = Floor;\nconst PhysicalDice = ({\n  type,\n  result,\n  isRolling,\n  position\n}) => {\n  _s2();\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    position: position || [0, 5, 0],\n    rotation: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI],\n    args: [1, 1, 1],\n    allowSleep: true,\n    sleepSpeedLimit: 0.1,\n    sleepTimeLimit: 1\n  }));\n\n  // 텍스처 로드\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\n\n  // 주사위 색상 설정\n  const diceColor = getDiceColor(type);\n\n  // 주사위 굴리기 효과\n  useEffect(() => {\n    if (isRolling) {\n      // 주사위 위치 초기화\n      api.position.set((position === null || position === void 0 ? void 0 : position[0]) || 0, (position === null || position === void 0 ? void 0 : position[1]) || 5, (position === null || position === void 0 ? void 0 : position[2]) || 0);\n\n      // 랜덤한 힘과 회전으로 주사위 던지기\n      api.velocity.set((Math.random() - 0.5) * 5, 3 + Math.random() * 2, (Math.random() - 0.5) * 5);\n      api.angularVelocity.set(Math.random() * 10 - 5, Math.random() * 10 - 5, Math.random() * 10 - 5);\n    } else {\n      // 결과에 맞게 주사위 회전 조정\n      adjustDiceRotation(result, api, ref);\n    }\n  }, [isRolling, api, ref, result, position]);\n\n  // 주사위 회전 상태 모니터링\n  const [rotation, setRotation] = useState([0, 0, 0]);\n\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\n  useFrame(() => {\n    // 주사위 회전 상태 업데이트\n    if (ref.current) {\n      setRotation([ref.current.rotation.x, ref.current.rotation.y, ref.current.rotation.z]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    castShadow: true,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[0],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[1],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[2],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[3],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[4],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[5],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 색상 가져오기\n_s2(PhysicalDice, \"1rcDKM9NLbavOIHBYrEOjOjSUL0=\", false, function () {\n  return [useBox, useLoader, useFrame];\n});\n_c2 = PhysicalDice;\nconst getDiceColor = type => {\n  if (type === 'RED') return 0xff0000;\n  if (type === 'YELLOW') return 0xffff00;\n  if (type === 'GREEN') return 0x00ff00;\n  return 0xffffff;\n};\n\n// 주사위 타입에 따른 텍스처 가져오기\nconst getTexturesForType = type => {\n  if (type === 'RED') {\n    return [redBrain, redShotgun, redFootsteps, redBrain, redShotgun, redFootsteps];\n  } else if (type === 'YELLOW') {\n    return [yellowBrain, yellowShotgun, yellowFootsteps, yellowBrain, yellowShotgun, yellowFootsteps];\n  } else if (type === 'GREEN') {\n    return [greenBrain, greenShotgun, greenFootsteps, greenBrain, greenShotgun, greenFootsteps];\n  }\n  return [];\n};\n\n// 결과에 맞게 주사위 회전 조정 함수 수정\nconst adjustDiceRotation = (result, api, ref) => {\n  let targetRotation = [0, 0, 0];\n\n  // 결과에 따라 주사위 회전 설정\n  if (result === 'BRAIN') {\n    targetRotation = [0, 0, 0]; // 뇌가 위로 오도록\n  } else if (result === 'SHOTGUN') {\n    targetRotation = [0, Math.PI / 2, 0]; // 총이 위로 오도록\n  } else if (result === 'FOOTSTEPS') {\n    targetRotation = [Math.PI / 2, 0, 0]; // 발자국이 위로 오도록\n  }\n\n  // 주사위 회전 설정 - 수정된 부분\n  if (ref.current) {\n    ref.current.rotation.x = targetRotation[0];\n    ref.current.rotation.y = targetRotation[1];\n    ref.current.rotation.z = targetRotation[2];\n  }\n\n  // 물리 속성 정지\n  api.velocity.set(0, 0, 0);\n  api.angularVelocity.set(0, 0, 0);\n};\n\n// 주사위 컨테이너 컴포넌트\nconst DiceContainer = ({\n  type,\n  result,\n  isRolling\n}) => {\n  _s3();\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const handleAnimationComplete = () => {\n    setAnimationComplete(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-3d-container ${type.toLowerCase()}-dice-container`,\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        shadows: true,\n        camera: {\n          position: [0, 2, 5],\n          fov: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [10, 10, 10],\n          intensity: 0.8,\n          castShadow: true,\n          \"shadow-mapSize-width\": 1024,\n          \"shadow-mapSize-height\": 1024\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: null,\n          children: /*#__PURE__*/_jsxDEV(Physics, {\n            gravity: [0, -9.8, 0],\n            defaultContactMaterial: {\n              restitution: 0.3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PhysicalDice, {\n              type: type,\n              result: result,\n              isRolling: isRolling,\n              position: [0, 5, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`,\n      children: [result === 'BRAIN' && '뇌', result === 'SHOTGUN' && '총', result === 'FOOTSTEPS' && '발자국']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n\n// 결과 타입에 따른 클래스 이름 가져오기\n_s3(DiceContainer, \"Vm61eBUTB3kLEMMMnioQCEBlDHU=\");\n_c3 = DiceContainer;\nconst getResultClass = result => {\n  if (result === 'BRAIN') return 'result-brain';\n  if (result === 'SHOTGUN') return 'result-shotgun';\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\n  return '';\n};\n\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\nconst Dice = ({\n  type,\n  result,\n  isRolling\n}) => {\n  return /*#__PURE__*/_jsxDEV(DiceContainer, {\n    type: type,\n    result: result,\n    isRolling: isRolling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 10\n  }, this);\n};\n\n// 주사위 굴리기 화면 컴포넌트 추가\n_c4 = Dice;\nconst DiceRollingScene = ({\n  selectedDice,\n  onRollComplete\n}) => {\n  _s4();\n  const [rollResults, setRollResults] = useState([]);\n  const [isRollingComplete, setIsRollingComplete] = useState(false);\n\n  // 주사위 굴리기 효과 및 결과 생성\n  useEffect(() => {\n    if (selectedDice && selectedDice.length > 0) {\n      // 주사위 결과 생성\n      const results = selectedDice.map(diceType => {\n        // 주사위 타입에 따른 면 정보 가져오기\n        const diceFaces = DICE_FACES[diceType].faces;\n\n        // 랜덤하게 면 선택 (1-6)\n        const faceIndex = Math.floor(Math.random() * 6);\n        const selectedFace = diceFaces[faceIndex];\n        return {\n          type: diceType,\n          result: selectedFace.type,\n          faceIndex: faceIndex\n        };\n      });\n      setRollResults(results);\n\n      // 애니메이션 후 결과 처리\n      const timer = setTimeout(() => {\n        setIsRollingComplete(true);\n        if (onRollComplete) {\n          onRollComplete(results);\n        }\n      }, 2500); // 2.5초 후 애니메이션 완료\n\n      return () => clearTimeout(timer);\n    }\n  }, [selectedDice, onRollComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-rolling-scene\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      camera: {\n        position: [0, 5, 10],\n        fov: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [10, 10, 10],\n        intensity: 0.8,\n        castShadow: true,\n        \"shadow-mapSize-width\": 1024,\n        \"shadow-mapSize-height\": 1024\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(Physics, {\n          gravity: [0, -9.8, 0],\n          defaultContactMaterial: {\n            restitution: 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), selectedDice.map((diceType, index) => {\n            var _rollResults$index;\n            return /*#__PURE__*/_jsxDEV(PhysicalDice, {\n              type: diceType,\n              result: ((_rollResults$index = rollResults[index]) === null || _rollResults$index === void 0 ? void 0 : _rollResults$index.result) || 'BRAIN',\n              isRolling: !isRollingComplete,\n              position: [index * 2 - selectedDice.length + 1, 5 + index * 0.5, 0]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 풀 상태 컴포넌트 추가\n_s4(DiceRollingScene, \"6U7QcKjNxjKBqfw6hstBuuAjS+k=\");\n_c5 = DiceRollingScene;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 주사위 타입별 개수 계산\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: redCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uBE68\\uAC15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: yellowCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uB178\\uB791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: greenCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uCD08\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-total text-center mt-2\",\n      children: [\"\\uCD1D \", dicePool.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_c6 = DicePoolStatus;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s5();\n  const [dicePool, setDicePool] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [isRolling, setIsRolling] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  // 주사위 굴리기 모달 상태 추가\n  const [showRollingModal, setShowRollingModal] = useState(false);\n\n  // 점수판 렌더링 함수 추가\n  const renderScoreBoard = () => {\n    if (!players || players.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-board mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mb-3\",\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC810\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC0C1\\uD0DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index === currentTurn ? 'current-player' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.score || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: index === currentTurn ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-success\",\n                children: \"\\uC9C4\\uD589\\uC911\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-secondary\",\n                children: \"\\uB300\\uAE30\\uC911\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, player.nickname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 주사위 굴리기 요청 함수 수정\n  const handleRoll = () => {\n    console.log('주사위 굴리기 요청');\n\n    // 선택된 주사위가 없으면 먼저 선택\n    if (!selectedDice || selectedDice.length === 0) {\n      console.log('선택된 주사위 없음, 주사위 선택 요청');\n      if (window.socket) {\n        const roomId = window.location.pathname.split('/')[2];\n        window.socket.emit('gameAction', {\n          action: 'selectDice',\n          roomId\n        });\n      } else {\n        console.error('소켓 연결이 없습니다!');\n      }\n    } else {\n      // 주사위 굴리기 모달 표시\n      setIsRolling(true);\n      setShowRollingModal(true);\n    }\n  };\n\n  // 주사위 굴리기 결과 처리 함수\n  const handleRollComplete = results => {\n    console.log('주사위 굴리기 결과:', results);\n\n    // 결과 저장\n    setRolledResults(results);\n\n    // 결과 계산\n    let newBrains = currentBrains;\n    let newShotguns = currentShotguns;\n    results.forEach(({\n      result\n    }) => {\n      if (result === 'BRAIN') newBrains++;\n      if (result === 'SHOTGUN') newShotguns++;\n    });\n\n    // 서버에 결과 전송\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDiceResult',\n        roomId,\n        results,\n        brains: newBrains,\n        shotguns: newShotguns\n      });\n    }\n\n    // 상태 업데이트\n    setCurrentBrains(newBrains);\n    setCurrentShotguns(newShotguns);\n\n    // 모달 닫기 (약간의 딜레이 후)\n    setTimeout(() => {\n      setShowRollingModal(false);\n      setIsRolling(false);\n    }, 500);\n  };\n\n  // 서버 이벤트 핸들러 수정\n  useEffect(() => {\n    if (window.socket) {\n      // 주사위 선택 이벤트 리스너\n      const handleDiceSelected = data => {\n        console.log('주사위 선택됨:', data);\n        setSelectedDice(data.selectedDice || []);\n        setDicePool(data.dicePool || []);\n      };\n\n      // 주사위 굴리기 결과 이벤트 리스너 (서버에서 결과 확인용)\n      const handleRollDiceResult = data => {\n        console.log('서버에서 주사위 결과 확인:', data);\n\n        // 주사위 풀 업데이트\n        if (data.dicePool) {\n          setDicePool(data.dicePool);\n        }\n\n        // 승자 확인\n        if (data.winner) {\n          setWinner(data.winner);\n        }\n      };\n\n      // 이벤트 리스너 등록\n      window.socket.on('diceSelected', handleDiceSelected);\n      window.socket.on('rollDiceResult', handleRollDiceResult);\n\n      // 기존 이벤트 리스너 유지\n      // ...\n\n      // 클린업\n      return () => {\n        window.socket.off('diceSelected', handleDiceSelected);\n        window.socket.off('rollDiceResult', handleRollDiceResult);\n        // 기존 클린업 유지\n        // ...\n      };\n    }\n  }, [currentBrains, currentShotguns, isMyTurn, onTurnEnd]);\n\n  // 내 턴일 때 화면 수정\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"my-turn-indicator\",\n          children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), showRollingModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-rolling-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-rolling-modal-content\",\n          children: /*#__PURE__*/_jsxDEV(DiceRollingScene, {\n            selectedDice: selectedDice,\n            onRollComplete: handleRollComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-area mb-3\",\n        children: !showRollingModal && (isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 17\n        }, this) : rolledResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `dice-result ${result.result.toLowerCase()}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-type ${result.type.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-face\",\n                children: [result.result === 'BRAIN' && '뇌', result.result === 'SHOTGUN' && '총', result.result === 'FOOTSTEPS' && '발자국']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          onClick: handleRoll,\n          disabled: isRolling,\n          children: selectedDice.length === 0 ? \"주사위 선택\" : \"주사위 굴리기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this), rolledResults.length > 0 && !winner && !isRolling && !showRollingModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n_s5(ZombieDice, \"XV2y1AbCBwpNQNdddOcdqTTida0=\");\n_c7 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Floor\");\n$RefreshReg$(_c2, \"PhysicalDice\");\n$RefreshReg$(_c3, \"DiceContainer\");\n$RefreshReg$(_c4, \"Dice\");\n$RefreshReg$(_c5, \"DiceRollingScene\");\n$RefreshReg$(_c6, \"DicePoolStatus\");\n$RefreshReg$(_c7, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","Suspense","Canvas","useFrame","useLoader","Physics","useBox","usePlane","THREE","TextureLoader","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","faces","image","type","YELLOW","GREEN","Floor","_s","ref","rotation","Math","PI","position","receiveShadow","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","transparent","opacity","_c","PhysicalDice","result","isRolling","_s2","api","mass","random","allowSleep","sleepSpeedLimit","sleepTimeLimit","textures","getTexturesForType","diceColor","getDiceColor","set","velocity","angularVelocity","adjustDiceRotation","setRotation","current","x","y","z","castShadow","attachArray","map","_c2","targetRotation","DiceContainer","_s3","animationComplete","setAnimationComplete","handleAnimationComplete","className","toLowerCase","shadows","camera","fov","intensity","fallback","gravity","defaultContactMaterial","restitution","getResultClass","_c3","Dice","_c4","DiceRollingScene","selectedDice","onRollComplete","_s4","rollResults","setRollResults","isRollingComplete","setIsRollingComplete","length","results","diceType","diceFaces","faceIndex","floor","selectedFace","timer","setTimeout","clearTimeout","index","_rollResults$index","_c5","DicePoolStatus","dicePool","redCount","filter","dice","yellowCount","greenCount","_c6","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s5","setDicePool","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setIsRolling","winner","setWinner","showRollingModal","setShowRollingModal","renderScoreBoard","player","nickname","score","handleRoll","console","log","window","socket","roomId","location","pathname","split","emit","action","error","handleRollComplete","newBrains","newShotguns","forEach","brains","shotguns","handleDiceSelected","data","handleRollDiceResult","on","off","onClick","disabled","handleContinue","handleStop","_c7","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\r\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\r\nimport * as THREE from 'three';\r\nimport { TextureLoader } from 'three';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    faces: [\r\n      { image: redBrain, type: 'SHOTGUN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: redShotgun, type: 'BRAIN' },   // 4면\r\n      { image: redShotgun, type: 'FOOTSTEPS' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: yellowShotgun, type: 'FOOTSTEPS' },  // 5면\r\n      { image: yellowShotgun, type: 'BRAIN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 바닥 컴포넌트\r\nconst Floor = () => {\r\n  const [ref] = usePlane(() => ({ \r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    position: [0, -2, 0],\r\n    type: 'Static'\r\n  }));\r\n  \r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeGeometry args={[20, 20]} />\r\n      <shadowMaterial color=\"#171717\" transparent opacity={0.2} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 물리 기반 주사위 컴포넌트\r\nconst PhysicalDice = ({ type, result, isRolling, position }) => {\r\n  const [ref, api] = useBox(() => ({ \r\n    mass: 1,\r\n    position: position || [0, 5, 0],\r\n    rotation: [\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI\r\n    ],\r\n    args: [1, 1, 1],\r\n    allowSleep: true,\r\n    sleepSpeedLimit: 0.1,\r\n    sleepTimeLimit: 1\r\n  }));\r\n  \r\n  // 텍스처 로드\r\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\r\n  \r\n  // 주사위 색상 설정\r\n  const diceColor = getDiceColor(type);\r\n  \r\n  // 주사위 굴리기 효과\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      // 주사위 위치 초기화\r\n      api.position.set(position?.[0] || 0, position?.[1] || 5, position?.[2] || 0);\r\n      \r\n      // 랜덤한 힘과 회전으로 주사위 던지기\r\n      api.velocity.set(\r\n        (Math.random() - 0.5) * 5,\r\n        3 + Math.random() * 2,\r\n        (Math.random() - 0.5) * 5\r\n      );\r\n      \r\n      api.angularVelocity.set(\r\n        Math.random() * 10 - 5,\r\n        Math.random() * 10 - 5,\r\n        Math.random() * 10 - 5\r\n      );\r\n    } else {\r\n      // 결과에 맞게 주사위 회전 조정\r\n      adjustDiceRotation(result, api, ref);\r\n    }\r\n  }, [isRolling, api, ref, result, position]);\r\n  \r\n  // 주사위 회전 상태 모니터링\r\n  const [rotation, setRotation] = useState([0, 0, 0]);\r\n  \r\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\r\n  useFrame(() => {\r\n    // 주사위 회전 상태 업데이트\r\n    if (ref.current) {\r\n      setRotation([\r\n        ref.current.rotation.x,\r\n        ref.current.rotation.y,\r\n        ref.current.rotation.z\r\n      ]);\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <mesh \r\n      ref={ref}\r\n      castShadow\r\n      receiveShadow\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[0]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[1]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[2]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[3]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[4]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[5]} \r\n        color={diceColor}\r\n      />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 주사위 색상 가져오기\r\nconst getDiceColor = (type) => {\r\n  if (type === 'RED') return 0xff0000;\r\n  if (type === 'YELLOW') return 0xffff00;\r\n  if (type === 'GREEN') return 0x00ff00;\r\n  return 0xffffff;\r\n};\r\n\r\n// 주사위 타입에 따른 텍스처 가져오기\r\nconst getTexturesForType = (type) => {\r\n  if (type === 'RED') {\r\n    return [redBrain, redShotgun, redFootsteps, redBrain, redShotgun, redFootsteps];\r\n  } else if (type === 'YELLOW') {\r\n    return [yellowBrain, yellowShotgun, yellowFootsteps, yellowBrain, yellowShotgun, yellowFootsteps];\r\n  } else if (type === 'GREEN') {\r\n    return [greenBrain, greenShotgun, greenFootsteps, greenBrain, greenShotgun, greenFootsteps];\r\n  }\r\n  return [];\r\n};\r\n\r\n// 결과에 맞게 주사위 회전 조정 함수 수정\r\nconst adjustDiceRotation = (result, api, ref) => {\r\n  let targetRotation = [0, 0, 0];\r\n  \r\n  // 결과에 따라 주사위 회전 설정\r\n  if (result === 'BRAIN') {\r\n    targetRotation = [0, 0, 0]; // 뇌가 위로 오도록\r\n  } else if (result === 'SHOTGUN') {\r\n    targetRotation = [0, Math.PI / 2, 0]; // 총이 위로 오도록\r\n  } else if (result === 'FOOTSTEPS') {\r\n    targetRotation = [Math.PI / 2, 0, 0]; // 발자국이 위로 오도록\r\n  }\r\n  \r\n  // 주사위 회전 설정 - 수정된 부분\r\n  if (ref.current) {\r\n    ref.current.rotation.x = targetRotation[0];\r\n    ref.current.rotation.y = targetRotation[1];\r\n    ref.current.rotation.z = targetRotation[2];\r\n  }\r\n  \r\n  // 물리 속성 정지\r\n  api.velocity.set(0, 0, 0);\r\n  api.angularVelocity.set(0, 0, 0);\r\n};\r\n\r\n// 주사위 컨테이너 컴포넌트\r\nconst DiceContainer = ({ type, result, isRolling }) => {\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n  \r\n  const handleAnimationComplete = () => {\r\n    setAnimationComplete(true);\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`}>\r\n      <div className={`dice-3d-container ${type.toLowerCase()}-dice-container`}>\r\n        <Canvas shadows camera={{ position: [0, 2, 5], fov: 50 }}>\r\n          <ambientLight intensity={0.5} />\r\n          <directionalLight\r\n            position={[10, 10, 10]}\r\n            intensity={0.8}\r\n            castShadow\r\n            shadow-mapSize-width={1024}\r\n            shadow-mapSize-height={1024}\r\n          />\r\n          <Suspense fallback={null}>\r\n            <Physics \r\n              gravity={[0, -9.8, 0]} \r\n              defaultContactMaterial={{ restitution: 0.3 }}\r\n            >\r\n              <Floor />\r\n              <PhysicalDice \r\n                type={type} \r\n                result={result} \r\n                isRolling={isRolling} \r\n                position={[0, 5, 0]}\r\n              />\r\n            </Physics>\r\n          </Suspense>\r\n        </Canvas>\r\n      </div>\r\n      <div className={`dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`}>\r\n        {result === 'BRAIN' && '뇌'}\r\n        {result === 'SHOTGUN' && '총'}\r\n        {result === 'FOOTSTEPS' && '발자국'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 결과 타입에 따른 클래스 이름 가져오기\r\nconst getResultClass = (result) => {\r\n  if (result === 'BRAIN') return 'result-brain';\r\n  if (result === 'SHOTGUN') return 'result-shotgun';\r\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\r\n  return '';\r\n};\r\n\r\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\r\nconst Dice = ({ type, result, isRolling }) => {\r\n  return <DiceContainer type={type} result={result} isRolling={isRolling} />;\r\n};\r\n\r\n// 주사위 굴리기 화면 컴포넌트 추가\r\nconst DiceRollingScene = ({ selectedDice, onRollComplete }) => {\r\n  const [rollResults, setRollResults] = useState([]);\r\n  const [isRollingComplete, setIsRollingComplete] = useState(false);\r\n  \r\n  // 주사위 굴리기 효과 및 결과 생성\r\n  useEffect(() => {\r\n    if (selectedDice && selectedDice.length > 0) {\r\n      // 주사위 결과 생성\r\n      const results = selectedDice.map(diceType => {\r\n        // 주사위 타입에 따른 면 정보 가져오기\r\n        const diceFaces = DICE_FACES[diceType].faces;\r\n        \r\n        // 랜덤하게 면 선택 (1-6)\r\n        const faceIndex = Math.floor(Math.random() * 6);\r\n        const selectedFace = diceFaces[faceIndex];\r\n        \r\n        return {\r\n          type: diceType,\r\n          result: selectedFace.type,\r\n          faceIndex: faceIndex\r\n        };\r\n      });\r\n      \r\n      setRollResults(results);\r\n      \r\n      // 애니메이션 후 결과 처리\r\n      const timer = setTimeout(() => {\r\n        setIsRollingComplete(true);\r\n        if (onRollComplete) {\r\n          onRollComplete(results);\r\n        }\r\n      }, 2500); // 2.5초 후 애니메이션 완료\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [selectedDice, onRollComplete]);\r\n  \r\n  return (\r\n    <div className=\"dice-rolling-scene\">\r\n      <Canvas shadows camera={{ position: [0, 5, 10], fov: 50 }}>\r\n        <ambientLight intensity={0.5} />\r\n        <directionalLight\r\n          position={[10, 10, 10]}\r\n          intensity={0.8}\r\n          castShadow\r\n          shadow-mapSize-width={1024}\r\n          shadow-mapSize-height={1024}\r\n        />\r\n        <Suspense fallback={null}>\r\n          <Physics \r\n            gravity={[0, -9.8, 0]} \r\n            defaultContactMaterial={{ restitution: 0.3 }}\r\n          >\r\n            <Floor />\r\n            {selectedDice.map((diceType, index) => (\r\n              <PhysicalDice \r\n                key={index}\r\n                type={diceType}\r\n                result={rollResults[index]?.result || 'BRAIN'}\r\n                isRolling={!isRollingComplete}\r\n                position={[index * 2 - selectedDice.length + 1, 5 + index * 0.5, 0]}\r\n              />\r\n            ))}\r\n          </Physics>\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 풀 상태 컴포넌트 추가\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 주사위 타입별 개수 계산\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status mt-4\">\r\n      <h4 className=\"text-center mb-3\">남은 주사위</h4>\r\n      <div className=\"dice-pool-container\">\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color red\"></div>\r\n          <div className=\"dice-pool-count\">{redCount}</div>\r\n          <div className=\"dice-pool-label\">빨강</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color yellow\"></div>\r\n          <div className=\"dice-pool-count\">{yellowCount}</div>\r\n          <div className=\"dice-pool-label\">노랑</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color green\"></div>\r\n          <div className=\"dice-pool-count\">{greenCount}</div>\r\n          <div className=\"dice-pool-label\">초록</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dice-pool-total text-center mt-2\">\r\n        총 {dicePool.length}개 남음\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  \r\n  // 주사위 굴리기 모달 상태 추가\r\n  const [showRollingModal, setShowRollingModal] = useState(false);\r\n  \r\n  // 점수판 렌더링 함수 추가\r\n  const renderScoreBoard = () => {\r\n    if (!players || players.length === 0) return null;\r\n    \r\n    return (\r\n      <div className=\"score-board mb-4\">\r\n        <h3 className=\"text-center mb-3\">점수판</h3>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>플레이어</th>\r\n              <th>점수</th>\r\n              <th>상태</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {players.map((player, index) => (\r\n              <tr \r\n                key={player.nickname} \r\n                className={index === currentTurn ? 'current-player' : ''}\r\n              >\r\n                <td>{player.nickname}</td>\r\n                <td>{player.score || 0}</td>\r\n                <td>\r\n                  {index === currentTurn ? (\r\n                    <span className=\"badge bg-success\">진행중</span>\r\n                  ) : (\r\n                    <span className=\"badge bg-secondary\">대기중</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 주사위 굴리기 요청 함수 수정\r\n  const handleRoll = () => {\r\n    console.log('주사위 굴리기 요청');\r\n    \r\n    // 선택된 주사위가 없으면 먼저 선택\r\n    if (!selectedDice || selectedDice.length === 0) {\r\n      console.log('선택된 주사위 없음, 주사위 선택 요청');\r\n      \r\n      if (window.socket) {\r\n        const roomId = window.location.pathname.split('/')[2];\r\n        window.socket.emit('gameAction', {\r\n          action: 'selectDice',\r\n          roomId\r\n        });\r\n      } else {\r\n        console.error('소켓 연결이 없습니다!');\r\n      }\r\n    } else {\r\n      // 주사위 굴리기 모달 표시\r\n      setIsRolling(true);\r\n      setShowRollingModal(true);\r\n    }\r\n  };\r\n  \r\n  // 주사위 굴리기 결과 처리 함수\r\n  const handleRollComplete = (results) => {\r\n    console.log('주사위 굴리기 결과:', results);\r\n    \r\n    // 결과 저장\r\n    setRolledResults(results);\r\n    \r\n    // 결과 계산\r\n    let newBrains = currentBrains;\r\n    let newShotguns = currentShotguns;\r\n    \r\n    results.forEach(({ result }) => {\r\n      if (result === 'BRAIN') newBrains++;\r\n      if (result === 'SHOTGUN') newShotguns++;\r\n    });\r\n    \r\n    // 서버에 결과 전송\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDiceResult',\r\n        roomId,\r\n        results,\r\n        brains: newBrains,\r\n        shotguns: newShotguns\r\n      });\r\n    }\r\n    \r\n    // 상태 업데이트\r\n    setCurrentBrains(newBrains);\r\n    setCurrentShotguns(newShotguns);\r\n    \r\n    // 모달 닫기 (약간의 딜레이 후)\r\n    setTimeout(() => {\r\n      setShowRollingModal(false);\r\n      setIsRolling(false);\r\n    }, 500);\r\n  };\r\n  \r\n  // 서버 이벤트 핸들러 수정\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      // 주사위 선택 이벤트 리스너\r\n      const handleDiceSelected = (data) => {\r\n        console.log('주사위 선택됨:', data);\r\n        \r\n        setSelectedDice(data.selectedDice || []);\r\n        setDicePool(data.dicePool || []);\r\n      };\r\n      \r\n      // 주사위 굴리기 결과 이벤트 리스너 (서버에서 결과 확인용)\r\n      const handleRollDiceResult = (data) => {\r\n        console.log('서버에서 주사위 결과 확인:', data);\r\n        \r\n        // 주사위 풀 업데이트\r\n        if (data.dicePool) {\r\n          setDicePool(data.dicePool);\r\n        }\r\n        \r\n        // 승자 확인\r\n        if (data.winner) {\r\n          setWinner(data.winner);\r\n        }\r\n      };\r\n      \r\n      // 이벤트 리스너 등록\r\n      window.socket.on('diceSelected', handleDiceSelected);\r\n      window.socket.on('rollDiceResult', handleRollDiceResult);\r\n      \r\n      // 기존 이벤트 리스너 유지\r\n      // ...\r\n      \r\n      // 클린업\r\n      return () => {\r\n        window.socket.off('diceSelected', handleDiceSelected);\r\n        window.socket.off('rollDiceResult', handleRollDiceResult);\r\n        // 기존 클린업 유지\r\n        // ...\r\n      };\r\n    }\r\n  }, [currentBrains, currentShotguns, isMyTurn, onTurnEnd]);\r\n  \r\n  // 내 턴일 때 화면 수정\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"text-center mb-3\">\r\n            <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n          </div>\r\n          \r\n          <div className=\"current-status mb-3\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <div>획득한 뇌: {currentBrains}</div>\r\n              <div>샷건 횟수: {currentShotguns}/3</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 주사위 굴리기 모달 */}\r\n          {showRollingModal && (\r\n            <div className=\"dice-rolling-modal\">\r\n              <div className=\"dice-rolling-modal-content\">\r\n                <DiceRollingScene \r\n                  selectedDice={selectedDice}\r\n                  onRollComplete={handleRollComplete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"dice-area mb-3\">\r\n            {!showRollingModal && (\r\n              isRolling ? (\r\n                <div className=\"text-center\">\r\n                  <p>주사위 굴리는 중...</p>\r\n                </div>\r\n              ) : (\r\n                rolledResults.length > 0 ? (\r\n                  <div className=\"rolled-results\">\r\n                    <h4>주사위 결과:</h4>\r\n                    <div className=\"dice-results-container\">\r\n                      {rolledResults.map((result, index) => (\r\n                        <div key={index} className={`dice-result ${result.result.toLowerCase()}`}>\r\n                          <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                          <div className=\"dice-face\">\r\n                            {result.result === 'BRAIN' && '뇌'}\r\n                            {result.result === 'SHOTGUN' && '총'}\r\n                            {result.result === 'FOOTSTEPS' && '발자국'}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <button \r\n                    className=\"btn btn-primary btn-lg\"\r\n                    onClick={handleRoll}\r\n                    disabled={isRolling}\r\n                  >\r\n                    {selectedDice.length === 0 ? \"주사위 선택\" : \"주사위 굴리기\"}\r\n                  </button>\r\n                )\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          {rolledResults.length > 0 && !winner && !isRolling && !showRollingModal && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}