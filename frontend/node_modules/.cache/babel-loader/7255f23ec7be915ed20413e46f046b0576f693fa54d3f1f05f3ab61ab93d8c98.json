{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport '../../styles/ZombieDice.css';\n\n// 상수 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13; // 승리 점수\nconst INITIAL_DICE_POOL = ['RED', 'RED', 'RED', 'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'];\nconst ZombieDice = ({\n  players,\n  onGameEnd\n}) => {\n  _s();\n  // 게임 상태 관리\n  const [gameStarted, setGameStarted] = useState(false);\n  const [dicePool, setDicePool] = useState([]);\n  const [isMyTurn, setIsMyTurn] = useState(false);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [isRolling, setIsRolling] = useState(false);\n  const [scores, setScores] = useState({});\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [winner, setWinner] = useState(null);\n\n  // 소켓 참조\n  const socket = window.socket;\n\n  // 로그 출력 함수\n  const log = (message, data) => {\n    if (data) {\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\n    } else {\n      console.log(`[좀비다이스 클라이언트] ${message}`);\n    }\n  };\n\n  // 게임 시작 처리\n  useEffect(() => {\n    if (!socket) {\n      log('소켓 연결이 없습니다.');\n      return;\n    }\n\n    // 게임 시작 이벤트 수신\n    socket.on('zombieDiceStarted', data => {\n      log('게임 시작 이벤트 수신:', data);\n      const {\n        players: gamePlayers,\n        currentTurn,\n        currentPlayer\n      } = data;\n      setGameStarted(true);\n\n      // 내 차례인지 확인\n      const myPlayer = gamePlayers.find(p => p.id === socket.id);\n      setIsMyTurn(myPlayer && currentPlayer.id === socket.id);\n      setCurrentPlayer(currentPlayer);\n\n      // 초기 점수 설정\n      const initialScores = {};\n      gamePlayers.forEach(p => {\n        initialScores[p.id] = 0;\n      });\n      setScores(initialScores);\n\n      // 주사위 풀 초기화\n      resetDicePool();\n    });\n\n    // 정리 함수\n    return () => {\n      socket.off('zombieDiceStarted');\n    };\n  }, [socket]);\n\n  // 게임 이벤트 리스너 설정\n  useEffect(() => {\n    if (!socket || !gameStarted) return;\n    log('게임 이벤트 리스너 설정');\n\n    // 주사위 굴림 결과 수신\n    socket.on('diceRolled', data => {\n      log('주사위 굴림 결과 수신:', data);\n      const {\n        player,\n        results,\n        brains,\n        shotguns,\n        dicePool: updatedPool,\n        totalBrains,\n        totalShotguns\n      } = data;\n\n      // 주사위 결과 표시\n      setRolledResults(results);\n      setSelectedDice(results.map(r => r.type));\n\n      // 총 획득 뇌/총 업데이트\n      setCurrentBrains(totalBrains);\n      setCurrentShotguns(totalShotguns);\n\n      // 주사위 풀 업데이트\n      setDicePool(updatedPool);\n\n      // 애니메이션 종료\n      setIsRolling(false);\n    });\n\n    // 턴 변경 이벤트 수신\n    socket.on('turnChanged', data => {\n      log('턴 변경 이벤트 수신:', data);\n      const {\n        nextPlayer,\n        scores: updatedScores\n      } = data;\n\n      // 점수 업데이트\n      setScores(updatedScores);\n\n      // 승자 확인\n      let gameWinner = null;\n      for (const [playerId, score] of Object.entries(updatedScores)) {\n        if (score >= WINNING_SCORE) {\n          gameWinner = players.find(p => p.id === playerId);\n          break;\n        }\n      }\n      if (gameWinner) {\n        setWinner(gameWinner);\n        log('게임 종료: 승자 결정됨', gameWinner);\n      } else {\n        // 내 차례인지 확인\n        setIsMyTurn(socket.id === nextPlayer);\n\n        // 현재 플레이어 업데이트\n        const nextPlayerObj = players.find(p => p.id === nextPlayer);\n        setCurrentPlayer(nextPlayerObj);\n\n        // 새 턴 초기화\n        resetTurn();\n      }\n    });\n\n    // 게임 오류 수신\n    socket.on('gameError', error => {\n      log('게임 오류 수신:', error);\n      alert(`게임 오류: ${error.message}`);\n    });\n\n    // 정리 함수\n    return () => {\n      socket.off('diceRolled');\n      socket.off('turnChanged');\n      socket.off('gameError');\n    };\n  }, [socket, gameStarted, players]);\n\n  // 게임 시작 함수\n  const startGame = () => {\n    if (!socket) {\n      log('소켓 연결이 없습니다.');\n      return;\n    }\n    const roomId = window.location.pathname.split('/')[2];\n    log('게임 시작 요청 전송:', {\n      roomId,\n      players\n    });\n    socket.emit('startZombieDice', {\n      roomId,\n      players\n    });\n  };\n\n  // 주사위 굴리기 요청\n  const handleRoll = () => {\n    if (!socket || !isMyTurn) return;\n    const roomId = window.location.pathname.split('/')[2];\n\n    // 주사위 풀이 비어있는지 확인\n    if (dicePool.length < 3) {\n      alert('주사위가 부족합니다. 턴을 종료하세요.');\n      return;\n    }\n    setIsRolling(true);\n    log('주사위 굴리기 요청 전송:', {\n      roomId,\n      dicePool\n    });\n    socket.emit('rollDice', {\n      roomId,\n      dicePool\n    });\n  };\n\n  // 턴 종료 요청\n  const handleStop = () => {\n    if (!socket || !isMyTurn) return;\n    const roomId = window.location.pathname.split('/')[2];\n    const keepScore = currentShotguns < 3;\n    log('턴 종료 요청 전송:', {\n      roomId,\n      keepScore\n    });\n    socket.emit('endTurn', {\n      roomId,\n      keepScore\n    });\n  };\n\n  // 주사위 풀 초기화\n  const resetDicePool = () => {\n    setDicePool([...INITIAL_DICE_POOL]);\n    log('주사위 풀 초기화됨');\n  };\n\n  // 턴 초기화\n  const resetTurn = () => {\n    setRolledResults([]);\n    setSelectedDice([]);\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    resetDicePool();\n    log('턴 초기화됨');\n  };\n\n  // 게임 다시 시작\n  const restartGame = () => {\n    setGameStarted(false);\n    setWinner(null);\n    resetTurn();\n    startGame();\n    log('게임 재시작');\n  };\n\n  // 게임 UI 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"\\uC880\\uBE44 \\uB2E4\\uC774\\uC2A4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC8C\\uC784\\uC744 \\uC2DC\\uC791\\uD558\\uB824\\uBA74 \\uC544\\uB798 \\uBC84\\uD2BC\\uC744 \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: startGame,\n        children: \"\\uAC8C\\uC784 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-announcement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \" \\uC2B9\\uB9AC! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD5C\\uC885 \\uC810\\uC218: \", scores[winner.id], \"\\uC810\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: restartGame,\n        children: \"\\uB2E4\\uC2DC \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-board mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-3\",\n          children: \"\\uC810\\uC218\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC810\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: currentPlayer && currentPlayer.id === player.id ? 'current-player' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: scores[player.id] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: [\"\\uD604\\uC7AC \\uCC28\\uB840: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.nickname) || '대기 중'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 22\n          }, this), isMyTurn && ' (나)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-stats mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\uD68D\\uB4DD\\uD55C \\uB1CC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"display-4\",\n                  children: currentBrains\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\uBC1C\\uACAC\\uB41C \\uCD1D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"display-4\",\n                  children: currentShotguns\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), rolledResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rolled-results mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-results-container\",\n          children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dice-result result-${result.result.toLowerCase()}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `dice-type ${result.type.toLowerCase()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/zombie-dice/faces/${result.type.toLowerCase()}-${result.result.toLowerCase()}.png`,\n              alt: `${result.result}`,\n              className: \"dice-result-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-result-text\",\n              children: result.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uACBD\\uACE0:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this), \" \\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1 \\uBC1C\\uACAC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-status mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704: \", dicePool.length, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-counts\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-sample red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uBE68\\uAC04 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'RED').length, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-sample yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uB178\\uB780 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'YELLOW').length, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-sample green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uB179\\uC0C9 \\uC8FC\\uC0AC\\uC704: \", dicePool.filter(d => d === 'GREEN').length, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg me-2\",\n            onClick: handleRoll,\n            disabled: isRolling || dicePool.length < 3 || currentShotguns >= 3,\n            children: isRolling ? '굴리는 중...' : '주사위 굴리기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-lg\",\n            onClick: handleStop,\n            disabled: isRolling,\n            children: currentShotguns >= 3 ? '턴 종료 (0점)' : `턴 종료 (${currentBrains}점 획득)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: [currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.nickname, \"\\uB2D8\\uC758 \\uCC28\\uB840\\uB97C \\uAE30\\uB2E4\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(ZombieDice, \"IGuzMxU5xGBGiGQB2TRt2WaLPL0=\");\n_c = ZombieDice;\nexport default ZombieDice;\nvar _c;\n$RefreshReg$(_c, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","INITIAL_DICE_POOL","ZombieDice","players","onGameEnd","_s","gameStarted","setGameStarted","dicePool","setDicePool","isMyTurn","setIsMyTurn","currentPlayer","setCurrentPlayer","selectedDice","setSelectedDice","rolledResults","setRolledResults","isRolling","setIsRolling","scores","setScores","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","winner","setWinner","socket","window","log","message","data","console","on","gamePlayers","currentTurn","myPlayer","find","p","id","initialScores","forEach","resetDicePool","off","player","results","brains","shotguns","updatedPool","totalBrains","totalShotguns","map","r","type","nextPlayer","updatedScores","gameWinner","playerId","score","Object","entries","nextPlayerObj","resetTurn","error","alert","startGame","roomId","location","pathname","split","emit","handleRoll","length","handleStop","keepScore","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","nickname","result","index","toLowerCase","src","alt","filter","d","disabled","_c","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport '../../styles/ZombieDice.css';\r\n\r\n// 상수 정의\r\nconst WINNING_SCORE = 13;  // 승리 점수\r\nconst INITIAL_DICE_POOL = [\r\n  'RED', 'RED', 'RED',\r\n  'YELLOW', 'YELLOW', 'YELLOW', 'YELLOW',\r\n  'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN', 'GREEN'\r\n];\r\n\r\nconst ZombieDice = ({ players, onGameEnd }) => {\r\n  // 게임 상태 관리\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [isMyTurn, setIsMyTurn] = useState(false);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [scores, setScores] = useState({});\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n  \r\n  // 소켓 참조\r\n  const socket = window.socket;\r\n  \r\n  // 로그 출력 함수\r\n  const log = (message, data) => {\r\n    if (data) {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`, data);\r\n    } else {\r\n      console.log(`[좀비다이스 클라이언트] ${message}`);\r\n    }\r\n  };\r\n  \r\n  // 게임 시작 처리\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      log('소켓 연결이 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    // 게임 시작 이벤트 수신\r\n    socket.on('zombieDiceStarted', (data) => {\r\n      log('게임 시작 이벤트 수신:', data);\r\n      \r\n      const { players: gamePlayers, currentTurn, currentPlayer } = data;\r\n      setGameStarted(true);\r\n      \r\n      // 내 차례인지 확인\r\n      const myPlayer = gamePlayers.find(p => p.id === socket.id);\r\n      setIsMyTurn(myPlayer && currentPlayer.id === socket.id);\r\n      setCurrentPlayer(currentPlayer);\r\n      \r\n      // 초기 점수 설정\r\n      const initialScores = {};\r\n      gamePlayers.forEach(p => {\r\n        initialScores[p.id] = 0;\r\n      });\r\n      setScores(initialScores);\r\n      \r\n      // 주사위 풀 초기화\r\n      resetDicePool();\r\n    });\r\n    \r\n    // 정리 함수\r\n    return () => {\r\n      socket.off('zombieDiceStarted');\r\n    };\r\n  }, [socket]);\r\n  \r\n  // 게임 이벤트 리스너 설정\r\n  useEffect(() => {\r\n    if (!socket || !gameStarted) return;\r\n    \r\n    log('게임 이벤트 리스너 설정');\r\n    \r\n    // 주사위 굴림 결과 수신\r\n    socket.on('diceRolled', (data) => {\r\n      log('주사위 굴림 결과 수신:', data);\r\n      \r\n      const { \r\n        player, results, brains, shotguns, \r\n        dicePool: updatedPool, totalBrains, totalShotguns \r\n      } = data;\r\n      \r\n      // 주사위 결과 표시\r\n      setRolledResults(results);\r\n      setSelectedDice(results.map(r => r.type));\r\n      \r\n      // 총 획득 뇌/총 업데이트\r\n      setCurrentBrains(totalBrains);\r\n      setCurrentShotguns(totalShotguns);\r\n      \r\n      // 주사위 풀 업데이트\r\n      setDicePool(updatedPool);\r\n      \r\n      // 애니메이션 종료\r\n      setIsRolling(false);\r\n    });\r\n    \r\n    // 턴 변경 이벤트 수신\r\n    socket.on('turnChanged', (data) => {\r\n      log('턴 변경 이벤트 수신:', data);\r\n      \r\n      const { nextPlayer, scores: updatedScores } = data;\r\n      \r\n      // 점수 업데이트\r\n      setScores(updatedScores);\r\n      \r\n      // 승자 확인\r\n      let gameWinner = null;\r\n      for (const [playerId, score] of Object.entries(updatedScores)) {\r\n        if (score >= WINNING_SCORE) {\r\n          gameWinner = players.find(p => p.id === playerId);\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (gameWinner) {\r\n        setWinner(gameWinner);\r\n        log('게임 종료: 승자 결정됨', gameWinner);\r\n      } else {\r\n        // 내 차례인지 확인\r\n        setIsMyTurn(socket.id === nextPlayer);\r\n        \r\n        // 현재 플레이어 업데이트\r\n        const nextPlayerObj = players.find(p => p.id === nextPlayer);\r\n        setCurrentPlayer(nextPlayerObj);\r\n        \r\n        // 새 턴 초기화\r\n        resetTurn();\r\n      }\r\n    });\r\n    \r\n    // 게임 오류 수신\r\n    socket.on('gameError', (error) => {\r\n      log('게임 오류 수신:', error);\r\n      alert(`게임 오류: ${error.message}`);\r\n    });\r\n    \r\n    // 정리 함수\r\n    return () => {\r\n      socket.off('diceRolled');\r\n      socket.off('turnChanged');\r\n      socket.off('gameError');\r\n    };\r\n  }, [socket, gameStarted, players]);\r\n  \r\n  // 게임 시작 함수\r\n  const startGame = () => {\r\n    if (!socket) {\r\n      log('소켓 연결이 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    const roomId = window.location.pathname.split('/')[2];\r\n    log('게임 시작 요청 전송:', { roomId, players });\r\n    \r\n    socket.emit('startZombieDice', {\r\n      roomId,\r\n      players\r\n    });\r\n  };\r\n  \r\n  // 주사위 굴리기 요청\r\n  const handleRoll = () => {\r\n    if (!socket || !isMyTurn) return;\r\n    \r\n    const roomId = window.location.pathname.split('/')[2];\r\n    \r\n    // 주사위 풀이 비어있는지 확인\r\n    if (dicePool.length < 3) {\r\n      alert('주사위가 부족합니다. 턴을 종료하세요.');\r\n      return;\r\n    }\r\n    \r\n    setIsRolling(true);\r\n    \r\n    log('주사위 굴리기 요청 전송:', { roomId, dicePool });\r\n    \r\n    socket.emit('rollDice', {\r\n      roomId,\r\n      dicePool\r\n    });\r\n  };\r\n  \r\n  // 턴 종료 요청\r\n  const handleStop = () => {\r\n    if (!socket || !isMyTurn) return;\r\n    \r\n    const roomId = window.location.pathname.split('/')[2];\r\n    const keepScore = currentShotguns < 3;\r\n    \r\n    log('턴 종료 요청 전송:', { roomId, keepScore });\r\n    \r\n    socket.emit('endTurn', {\r\n      roomId,\r\n      keepScore\r\n    });\r\n  };\r\n  \r\n  // 주사위 풀 초기화\r\n  const resetDicePool = () => {\r\n    setDicePool([...INITIAL_DICE_POOL]);\r\n    log('주사위 풀 초기화됨');\r\n  };\r\n  \r\n  // 턴 초기화\r\n  const resetTurn = () => {\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    resetDicePool();\r\n    log('턴 초기화됨');\r\n  };\r\n  \r\n  // 게임 다시 시작\r\n  const restartGame = () => {\r\n    setGameStarted(false);\r\n    setWinner(null);\r\n    resetTurn();\r\n    startGame();\r\n    log('게임 재시작');\r\n  };\r\n  \r\n  // 게임 UI 렌더링\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      <h2 className=\"text-center mb-4\">좀비 다이스</h2>\r\n      \r\n      {!gameStarted ? (\r\n        <div className=\"text-center\">\r\n          <p>게임을 시작하려면 아래 버튼을 클릭하세요.</p>\r\n          <button className=\"btn btn-primary\" onClick={startGame}>\r\n            게임 시작\r\n          </button>\r\n        </div>\r\n      ) : winner ? (\r\n        <div className=\"winner-announcement\">\r\n          <h3>🏆 {winner.nickname} 승리! 🏆</h3>\r\n          <p>최종 점수: {scores[winner.id]}점</p>\r\n          <button className=\"btn btn-primary\" onClick={restartGame}>\r\n            다시 시작\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* 점수판 */}\r\n          <div className=\"score-board mb-4\">\r\n            <h3 className=\"text-center mb-3\">점수판</h3>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>플레이어</th>\r\n                  <th>점수</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {players.map(player => (\r\n                  <tr \r\n                    key={player.id} \r\n                    className={currentPlayer && currentPlayer.id === player.id ? 'current-player' : ''}\r\n                  >\r\n                    <td>{player.nickname}</td>\r\n                    <td>{scores[player.id] || 0}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          {/* 현재 턴 정보 */}\r\n          <div className=\"current-status mb-3\">\r\n            <p className=\"mb-0\">\r\n              현재 차례: <strong>{currentPlayer?.nickname || '대기 중'}</strong>\r\n              {isMyTurn && ' (나)'}\r\n            </p>\r\n          </div>\r\n          \r\n          {/* 현재 턴 상태 */}\r\n          <div className=\"turn-stats mb-3\">\r\n            <div className=\"row text-center\">\r\n              <div className=\"col\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5>획득한 뇌</h5>\r\n                    <p className=\"display-4\">{currentBrains}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5>발견된 총</h5>\r\n                    <p className=\"display-4\">{currentShotguns}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* 주사위 결과 영역 */}\r\n          {rolledResults.length > 0 && (\r\n            <div className=\"rolled-results mb-3\">\r\n              <h4>주사위 결과:</h4>\r\n              <div className=\"dice-results-container\">\r\n                {rolledResults.map((result, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`dice-result result-${result.result.toLowerCase()}`}\r\n                  >\r\n                    <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                    <img \r\n                      src={`/zombie-dice/faces/${result.type.toLowerCase()}-${result.result.toLowerCase()}.png`} \r\n                      alt={`${result.result}`}\r\n                      className=\"dice-result-image\"\r\n                    />\r\n                    <div className=\"dice-result-text\">{result.result}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* 경고 메시지 */}\r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger\">\r\n              <strong>경고:</strong> 총이 3개 이상 발견되었습니다! 턴을 종료해야 합니다.\r\n            </div>\r\n          )}\r\n          \r\n          {/* 주사위 풀 상태 */}\r\n          <div className=\"dice-pool-status mb-3\">\r\n            <h4>남은 주사위: {dicePool.length}개</h4>\r\n            <div className=\"dice-counts\">\r\n              <div className=\"dice-count\">\r\n                <div className=\"dice-sample red\"></div>\r\n                <span>빨간 주사위: {dicePool.filter(d => d === 'RED').length}개</span>\r\n              </div>\r\n              <div className=\"dice-count\">\r\n                <div className=\"dice-sample yellow\"></div>\r\n                <span>노란 주사위: {dicePool.filter(d => d === 'YELLOW').length}개</span>\r\n              </div>\r\n              <div className=\"dice-count\">\r\n                <div className=\"dice-sample green\"></div>\r\n                <span>녹색 주사위: {dicePool.filter(d => d === 'GREEN').length}개</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* 조작 버튼 */}\r\n          <div className=\"controls\">\r\n            {isMyTurn ? (\r\n              <>\r\n                <button \r\n                  className=\"btn btn-primary btn-lg me-2\" \r\n                  onClick={handleRoll} \r\n                  disabled={isRolling || dicePool.length < 3 || currentShotguns >= 3}\r\n                >\r\n                  {isRolling ? '굴리는 중...' : '주사위 굴리기'}\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-warning btn-lg\" \r\n                  onClick={handleStop} \r\n                  disabled={isRolling}\r\n                >\r\n                  {currentShotguns >= 3 ? '턴 종료 (0점)' : `턴 종료 (${currentBrains}점 획득)`}\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <p className=\"text-center\">\r\n                {currentPlayer?.nickname}님의 차례를 기다리고 있습니다...\r\n              </p>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZombieDice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}