{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Cursor\\\\game\\\\frontend\\\\src\\\\components\\\\games\\\\ZombieDice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\nimport * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\nimport '../styles/ZombieDice.css';\n\n// 승리 점수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WINNING_SCORE = 13;\n\n// 주사위 면 정의\nconst DICE_FACES = {\n  RED: {\n    faces: [{\n      image: redBrain,\n      type: 'SHOTGUN'\n    },\n    // 1면\n    {\n      image: redFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: redFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: redShotgun,\n      type: 'BRAIN'\n    },\n    // 4면\n    {\n      image: redShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: redShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  },\n  YELLOW: {\n    faces: [{\n      image: yellowBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: yellowBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 3면\n    {\n      image: yellowFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: yellowShotgun,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: yellowShotgun,\n      type: 'BRAIN'\n    } // 6면\n    ]\n  },\n  GREEN: {\n    faces: [{\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 1면\n    {\n      image: greenBrain,\n      type: 'FOOTSTEPS'\n    },\n    // 2면\n    {\n      image: greenBrain,\n      type: 'BRAIN'\n    },\n    // 3면\n    {\n      image: greenFootsteps,\n      type: 'SHOTGUN'\n    },\n    // 4면\n    {\n      image: greenFootsteps,\n      type: 'FOOTSTEPS'\n    },\n    // 5면\n    {\n      image: greenShotgun,\n      type: 'SHOTGUN'\n    } // 6면\n    ]\n  }\n};\n\n// 주사위 색상 가져오기\nconst getDiceColor = type => {\n  if (type === 'RED') return 0xff0000;\n  if (type === 'YELLOW') return 0xffff00;\n  if (type === 'GREEN') return 0x00ff00;\n  return 0xffffff;\n};\n\n// 주사위 타입에 따른 텍스처 가져오기\nconst getTexturesForType = type => {\n  var _DICE_FACES$type;\n  // DICE_FACES에서 해당 타입의 주사위 면 정보 가져오기\n  const faces = ((_DICE_FACES$type = DICE_FACES[type]) === null || _DICE_FACES$type === void 0 ? void 0 : _DICE_FACES$type.faces) || [];\n\n  // 6개 면의 이미지를 배열로 반환\n  return faces.map(face => face.image);\n};\n\n// 결과에 맞게 주사위 회전 조정\nconst adjustDiceRotation = (result, faceIndex, api, ref) => {\n  // 주사위 면에 따른 회전 설정\n  // 주사위 큐브에서 각 면의 인덱스:\n  // 0: +x (오른쪽), 1: -x (왼쪽)\n  // 2: +y (위), 3: -y (아래)\n  // 4: +z (앞), 5: -z (뒤)\n\n  let targetRotation = [0, 0, 0];\n  switch (faceIndex) {\n    case 0:\n      // +x (오른쪽) 면이 위로\n      targetRotation = [0, 0, -Math.PI / 2];\n      break;\n    case 1:\n      // -x (왼쪽) 면이 위로\n      targetRotation = [0, 0, Math.PI / 2];\n      break;\n    case 2:\n      // +y (위) 면이 위로\n      targetRotation = [0, 0, 0];\n      break;\n    case 3:\n      // -y (아래) 면이 위로\n      targetRotation = [Math.PI, 0, 0];\n      break;\n    case 4:\n      // +z (앞) 면이 위로\n      targetRotation = [Math.PI / 2, 0, 0];\n      break;\n    case 5:\n      // -z (뒤) 면이 위로\n      targetRotation = [-Math.PI / 2, 0, 0];\n      break;\n    default:\n      // 기본값 - 위 면이 위로\n      targetRotation = [0, 0, 0];\n  }\n\n  // 주사위 회전 설정\n  if (ref.current) {\n    ref.current.rotation.x = targetRotation[0];\n    ref.current.rotation.y = targetRotation[1];\n    ref.current.rotation.z = targetRotation[2];\n  }\n\n  // 물리 속성 정지\n  api.velocity.set(0, 0, 0);\n  api.angularVelocity.set(0, 0, 0);\n};\n\n// 결과 타입에 따른 클래스 이름 가져오기\nconst getResultClass = result => {\n  if (result === 'BRAIN') return 'result-brain';\n  if (result === 'SHOTGUN') return 'result-shotgun';\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\n  return '';\n};\n\n// 모달 스타일을 상수로 컴포넌트 외부에 정의\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '80%',\n  maxWidth: '600px',\n  backgroundColor: 'white',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n  zIndex: 1000,\n  padding: '20px'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: 999\n};\n\n// 바닥 컴포넌트\nconst Floor = () => {\n  _s();\n  const [ref] = usePlane(() => ({\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -2, 0],\n    type: 'Static'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [30, 30]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shadowMaterial\", {\n      color: \"#171717\",\n      transparent: true,\n      opacity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n// 벽 컴포넌트 추가 (주사위가 화면 밖으로 나가지 않도록)\n_s(Floor, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n  return [usePlane];\n});\n_c = Floor;\nconst Wall = ({\n  position,\n  rotation\n}) => {\n  _s2();\n  const [ref] = usePlane(() => ({\n    position,\n    rotation,\n    type: 'Static'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [30, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      transparent: true,\n      opacity: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n// 물리 기반 주사위 컴포넌트\n_s2(Wall, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n  return [usePlane];\n});\n_c2 = Wall;\nconst PhysicalDice = ({\n  type,\n  result,\n  isRolling,\n  position\n}) => {\n  _s3();\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    position: position || [0, 3, 0],\n    // 낮은 시작 높이\n    rotation: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI],\n    args: [1, 1, 1],\n    allowSleep: true,\n    sleepSpeedLimit: 0.1,\n    sleepTimeLimit: 1\n  }));\n\n  // 텍스처 로드\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\n\n  // 주사위 색상 설정\n  const diceColor = getDiceColor(type);\n\n  // 주사위 굴리기 효과\n  useEffect(() => {\n    if (isRolling) {\n      // 주사위 위치 초기화 - 더 제한된 영역에서 시작\n      api.position.set(((position === null || position === void 0 ? void 0 : position[0]) || 0) + (Math.random() * 0.5 - 0.25),\n      // 약간의 랜덤 오프셋\n      (position === null || position === void 0 ? void 0 : position[1]) || 3, ((position === null || position === void 0 ? void 0 : position[2]) || 0) + (Math.random() * 0.5 - 0.25));\n\n      // 랜덤한 힘과 회전으로 주사위 던지기 (더 제한된 힘)\n      api.velocity.set((Math.random() - 0.5) * 3,\n      // 감소된 수평 속도\n      2 + Math.random() * 1,\n      // 감소된 수직 속도\n      (Math.random() - 0.5) * 3 // 감소된 수평 속도\n      );\n      api.angularVelocity.set(Math.random() * 8 - 4, Math.random() * 8 - 4, Math.random() * 8 - 4);\n    } else {\n      var _DICE_FACES$type2;\n      // 결과에 맞게 주사위 회전 조정\n      const faces = ((_DICE_FACES$type2 = DICE_FACES[type]) === null || _DICE_FACES$type2 === void 0 ? void 0 : _DICE_FACES$type2.faces) || [];\n      const faceIndex = faces.findIndex(face => face.type === result);\n      adjustDiceRotation(result, faceIndex, api, ref);\n    }\n  }, [isRolling, api, ref, result, position, type]);\n\n  // 주사위 회전 상태 모니터링\n  const [rotation, setRotation] = useState([0, 0, 0]);\n\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\n  useFrame(() => {\n    // 주사위 회전 상태 업데이트\n    if (ref.current) {\n      setRotation([ref.current.rotation.x, ref.current.rotation.y, ref.current.rotation.z]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    castShadow: true,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[0],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[1],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[2],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[3],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[4],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      map: textures[5],\n      color: diceColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 애니메이션 영역 컴포넌트 - 모달 대신 사용\n_s3(PhysicalDice, \"1rcDKM9NLbavOIHBYrEOjOjSUL0=\", false, function () {\n  return [useBox, useLoader, useFrame];\n});\n_c3 = PhysicalDice;\nconst DiceAnimationArea = ({\n  selectedDice,\n  isRolling,\n  onAnimationComplete\n}) => {\n  _s4();\n  const [animationProgress, setAnimationProgress] = useState(0);\n\n  // 애니메이션 진행 효과\n  useEffect(() => {\n    if (isRolling) {\n      const animationDuration = 2000; // 2초\n      const startTime = Date.now();\n      const animationTimer = setInterval(() => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(elapsed / animationDuration, 1);\n        setAnimationProgress(progress);\n        if (progress >= 1) {\n          clearInterval(animationTimer);\n\n          // 애니메이션 완료 후 결과 처리\n          setTimeout(() => {\n            if (onAnimationComplete) {\n              // 주사위 결과 생성\n              const results = selectedDice.map(diceType => {\n                // 주사위 타입에 따른 면 정보 가져오기\n                const diceFaces = DICE_FACES[diceType].faces;\n\n                // 랜덤하게 면 선택 (1-6)\n                const faceIndex = Math.floor(Math.random() * 6);\n                const selectedFace = diceFaces[faceIndex];\n                return {\n                  type: diceType,\n                  result: selectedFace.type,\n                  faceIndex: faceIndex\n                };\n              });\n              onAnimationComplete(results);\n            }\n          }, 500);\n        }\n      }, 16);\n      return () => clearInterval(animationTimer);\n    }\n  }, [isRolling, selectedDice, onAnimationComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-animation-area\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      camera: {\n        position: [0, 5, 10],\n        fov: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [10, 10, 10],\n        intensity: 0.8,\n        castShadow: true,\n        \"shadow-mapSize-width\": 1024,\n        \"shadow-mapSize-height\": 1024\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(Physics, {\n          gravity: [0, -9.8, 0],\n          defaultContactMaterial: {\n            restitution: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Wall, {\n            position: [15, 0, 0],\n            rotation: [0, -Math.PI / 2, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Wall, {\n            position: [-15, 0, 0],\n            rotation: [0, Math.PI / 2, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Wall, {\n            position: [0, 0, 15],\n            rotation: [0, Math.PI, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Wall, {\n            position: [0, 0, -15],\n            rotation: [0, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), selectedDice.map((diceType, index) => /*#__PURE__*/_jsxDEV(PhysicalDice, {\n            type: diceType,\n            result: 'BRAIN' // 임시 결과\n            ,\n            isRolling: isRolling,\n            position: [(index % 3 - 1) * 1.5, 3 + Math.floor(index / 3) * 1.5, 0]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n\n// 주사위 컨테이너 컴포넌트\n_s4(DiceAnimationArea, \"W6QPS6pJsxAM+BWqHP3SEiAFaow=\");\n_c4 = DiceAnimationArea;\nconst DiceContainer = ({\n  type,\n  result,\n  isRolling\n}) => {\n  _s5();\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const handleAnimationComplete = () => {\n    setAnimationComplete(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-3d-container ${type.toLowerCase()}-dice-container`,\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        shadows: true,\n        camera: {\n          position: [0, 2, 5],\n          fov: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [10, 10, 10],\n          intensity: 0.8,\n          castShadow: true,\n          \"shadow-mapSize-width\": 1024,\n          \"shadow-mapSize-height\": 1024\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: null,\n          children: /*#__PURE__*/_jsxDEV(Physics, {\n            gravity: [0, -9.8, 0],\n            defaultContactMaterial: {\n              restitution: 0.3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Floor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Wall, {\n              position: [15, 0, 0],\n              rotation: [0, -Math.PI / 2, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Wall, {\n              position: [-15, 0, 0],\n              rotation: [0, Math.PI / 2, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Wall, {\n              position: [0, 0, 15],\n              rotation: [0, Math.PI, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Wall, {\n              position: [0, 0, -15],\n              rotation: [0, 0, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(PhysicalDice, {\n              type: type,\n              result: result,\n              isRolling: isRolling,\n              position: [0, 5, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`,\n      children: [result === 'BRAIN' && '뇌', result === 'SHOTGUN' && '총', result === 'FOOTSTEPS' && '발자국']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\n_s5(DiceContainer, \"Vm61eBUTB3kLEMMMnioQCEBlDHU=\");\n_c5 = DiceContainer;\nconst Dice = ({\n  type,\n  result,\n  isRolling\n}) => {\n  return /*#__PURE__*/_jsxDEV(DiceContainer, {\n    type: type,\n    result: result,\n    isRolling: isRolling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 10\n  }, this);\n};\n\n// 주사위 풀 상태 컴포넌트\n_c6 = Dice;\nconst DicePoolStatus = ({\n  dicePool\n}) => {\n  // 주사위 타입별 개수 계산\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice-pool-status mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"\\uB0A8\\uC740 \\uC8FC\\uC0AC\\uC704\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: redCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uBE68\\uAC15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: yellowCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uB178\\uB791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-pool-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-color green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-count\",\n          children: greenCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-pool-label\",\n          children: \"\\uCD08\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-pool-total text-center mt-2\",\n      children: [\"\\uCD1D \", dicePool.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n\n// 메인 ZombieDice 컴포넌트\n_c7 = DicePoolStatus;\nfunction ZombieDice({\n  players,\n  currentTurn,\n  onTurnEnd,\n  isMyTurn\n}) {\n  _s6();\n  var _players$currentTurn;\n  // 상태 정의\n  const [dicePool, setDicePool] = useState([]);\n  const [selectedDice, setSelectedDice] = useState([]);\n  const [rolledResults, setRolledResults] = useState([]);\n  const [currentBrains, setCurrentBrains] = useState(0);\n  const [currentShotguns, setCurrentShotguns] = useState(0);\n  const [isRolling, setIsRolling] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // 모달 제거 - 주사위 애니메이션 상태만 유지\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\n\n  // 게임 시작 시 주사위 풀 초기화\n  useEffect(() => {\n    if (isMyTurn && !dicePool.length) {\n      // 주사위 풀 초기화\n      const initialDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n      setDicePool(initialDicePool);\n    }\n  }, [isMyTurn, dicePool.length]);\n\n  // 점수판 렌더링 함수\n  const renderScoreBoard = () => {\n    if (!players || players.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mb-3\",\n        children: \"\\uC810\\uC218\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC21C\\uC11C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uD50C\\uB808\\uC774\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC810\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index === currentTurn ? 'table-active' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.nickname, index === currentTurn && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ms-2 badge bg-primary\",\n                  children: \"\\uD134\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.score, \" / \", WINNING_SCORE]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 주사위 굴리기 요청 함수 수정\n  const handleRoll = () => {\n    console.log('주사위 굴리기 요청');\n\n    // 주사위 굴리기 상태 설정\n    setIsRolling(true);\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n\n      // 주사위 선택 요청 - 서버에 전송하여 모든 플레이어가 볼 수 있게 함\n      window.socket.emit('gameAction', {\n        action: 'selectDice',\n        roomId,\n        requestRoll: true // 주사위 굴리기도 요청\n      });\n    } else {\n      console.error('소켓 연결이 없습니다!');\n      setIsRolling(false);\n    }\n  };\n\n  // 주사위 굴리기 결과 처리 함수 수정\n  const handleRollComplete = results => {\n    console.log('주사위 굴리기 완료:', results);\n\n    // 주사위 굴리기 상태 종료\n    setIsRolling(false);\n    setShowDiceAnimation(false);\n    if (!results || results.length === 0) {\n      // 결과가 없는 경우 (오류)\n      return;\n    }\n\n    // 주사위 결과 저장\n    setRolledResults(results);\n\n    // 뇌와 총 개수 집계\n    let brains = currentBrains;\n    let shotguns = currentShotguns;\n    results.forEach(result => {\n      if (result.result === 'BRAIN') {\n        brains++;\n      } else if (result.result === 'SHOTGUN') {\n        shotguns++;\n      }\n    });\n    setCurrentBrains(brains);\n    setCurrentShotguns(shotguns);\n\n    // 게임 액션 서버에 전송\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'rollDiceResult',\n        roomId,\n        results,\n        brains,\n        shotguns\n      });\n    }\n  };\n\n  // 계속하기 버튼 핸들러\n  const handleContinue = () => {\n    // 발자국 결과인 주사위만 필터링\n    const footstepsDice = rolledResults.filter(result => result.result === 'FOOTSTEPS').map(result => result.type);\n\n    // 계속 진행 요청\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'continueTurn',\n        roomId,\n        footstepsDice\n      });\n    }\n\n    // 결과 초기화\n    setRolledResults([]);\n  };\n\n  // 멈추기 버튼 핸들러\n  const handleStop = () => {\n    // 턴 종료 요청\n    if (window.socket) {\n      const roomId = window.location.pathname.split('/')[2];\n      window.socket.emit('gameAction', {\n        action: 'endTurn',\n        roomId,\n        score: currentShotguns >= 3 ? 0 : currentBrains\n      });\n    }\n\n    // 상태 초기화\n    setCurrentBrains(0);\n    setCurrentShotguns(0);\n    setRolledResults([]);\n    setSelectedDice([]);\n  };\n\n  // 서버 이벤트 핸들러 수정\n  useEffect(() => {\n    if (window.socket) {\n      // 게임 시작 이벤트 리스너\n      const handleGameStarted = data => {\n        console.log('게임 시작됨:', data);\n        setGameStarted(true);\n\n        // 주사위 풀 초기화 추가\n        if (data.gameState && data.gameState.dicePool) {\n          setDicePool(data.gameState.dicePool);\n        }\n      };\n\n      // 턴 시작 이벤트 리스너\n      const handleTurnStarted = data => {\n        console.log('턴 시작됨:', data);\n        // 주사위 풀 설정 - 명시적으로 확인\n        if (data.dicePool && Array.isArray(data.dicePool)) {\n          setDicePool(data.dicePool);\n        } else {\n          // 주사위 풀이 없거나 배열이 아닌 경우 기본값 설정\n          const defaultDicePool = [...Array(3).fill('RED'), ...Array(4).fill('YELLOW'), ...Array(6).fill('GREEN')];\n          setDicePool(defaultDicePool);\n        }\n        setCurrentBrains(0);\n        setCurrentShotguns(0);\n      };\n\n      // 주사위 선택 이벤트 리스너 수정\n      const handleDiceSelected = data => {\n        console.log('주사위 선택됨:', data);\n        setSelectedDice(data.selectedDice || []);\n        setDicePool(data.dicePool || []);\n\n        // 주사위 굴리기 요청이 함께 있으면 애니메이션 시작\n        if (data.requestRoll) {\n          setIsRolling(true);\n          setShowDiceAnimation(true);\n        }\n      };\n\n      // 주사위 굴리기 결과 이벤트 리스너 수정\n      const handleRollDiceResult = data => {\n        console.log('서버에서 주사위 결과 확인:', data);\n\n        // 주사위 풀 업데이트\n        if (data.dicePool) {\n          setDicePool(data.dicePool);\n        }\n\n        // 다른 플레이어의 결과도 표시\n        if (data.results && data.results.length > 0) {\n          setRolledResults(data.results);\n          // 현재 턴 플레이어가 아닌 경우에도 결과 보여주기\n          if (!isMyTurn) {\n            // 애니메이션 종료\n            setIsRolling(false);\n            setShowDiceAnimation(false);\n          }\n        }\n        if (!isMyTurn) {\n          // 다른 플레이어의 뇌와 샷건 개수 정보도 업데이트\n          if (data.brains !== undefined) {\n            setCurrentBrains(data.brains);\n          }\n          if (data.shotguns !== undefined) {\n            setCurrentShotguns(data.shotguns);\n          }\n        }\n      };\n\n      // 턴 종료 이벤트 리스너\n      const handleTurnEnded = data => {\n        console.log('턴 종료됨:', data);\n\n        // 상태 초기화\n        setCurrentBrains(0);\n        setCurrentShotguns(0);\n        setRolledResults([]);\n        setSelectedDice([]);\n\n        // 턴 종료 콜백 호출\n        if (onTurnEnd) {\n          onTurnEnd(data.nextPlayer);\n        }\n      };\n\n      // 게임 종료 이벤트 리스너\n      const handleGameEnded = data => {\n        console.log('게임 종료됨:', data);\n        if (data.winner) {\n          setWinner(data.winner);\n        }\n      };\n\n      // 새로운 이벤트 리스너 추가 - 주사위 굴리기 시작\n      const handleDiceRolling = data => {\n        console.log('주사위 굴리기 시작:', data);\n\n        // 모든 플레이어에게 주사위 애니메이션 표시\n        setSelectedDice(data.selectedDice || []);\n        setIsRolling(true);\n        setShowDiceAnimation(true);\n\n        // 애니메이션 타이머 설정 (실제 애니메이션 종료는 결과 수신 시)\n        if (!isMyTurn) {\n          // 결과를 받지 못하는 경우를 대비한 타임아웃\n          setTimeout(() => {\n            if (isRolling) {\n              setIsRolling(false);\n              setShowDiceAnimation(false);\n            }\n          }, 3500);\n        }\n      };\n\n      // 이벤트 리스너 등록\n      window.socket.on('gameStarted', handleGameStarted);\n      window.socket.on('turnStarted', handleTurnStarted);\n      window.socket.on('diceSelected', handleDiceSelected);\n      window.socket.on('rollDiceResult', handleRollDiceResult);\n      window.socket.on('turnEnded', handleTurnEnded);\n      window.socket.on('gameEnded', handleGameEnded);\n      window.socket.on('diceRolling', handleDiceRolling); // 새 이벤트\n\n      // 클린업\n      return () => {\n        window.socket.off('gameStarted', handleGameStarted);\n        window.socket.off('turnStarted', handleTurnStarted);\n        window.socket.off('diceSelected', handleDiceSelected);\n        window.socket.off('rollDiceResult', handleRollDiceResult);\n        window.socket.off('turnEnded', handleTurnEnded);\n        window.socket.off('gameEnded', handleGameEnded);\n        window.socket.off('diceRolling', handleDiceRolling); // 새 이벤트\n      };\n    }\n  }, [onTurnEnd, isMyTurn, isRolling]);\n\n  // 메인 렌더링 수정\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zombie-dice\",\n    children: [renderScoreBoard(), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \", winner.nickname, \"\\uB2D8\\uC774 \\uC2B9\\uB9AC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4! \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isMyTurn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-turn-indicator\",\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 15\n        }, this), showDiceAnimation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            onAnimationComplete: handleRollComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-area mb-3\",\n          children: isRolling ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 21\n          }, this) : rolledResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rolled-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dice-results-container\",\n              children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-result ${result.result.toLowerCase()}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `dice-type ${result.type.toLowerCase()}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 828,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dice-face\",\n                  children: [result.result === 'BRAIN' && '뇌', result.result === 'SHOTGUN' && '총', result.result === 'FOOTSTEPS' && '발자국']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 31\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            onClick: handleRoll,\n            disabled: isRolling,\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB2E4\\uB978 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_players$currentTurn = players[currentTurn]) === null || _players$currentTurn === void 0 ? void 0 : _players$currentTurn.nickname, \"\\uB2D8\\uC774 \\uC8FC\\uC0AC\\uC704\\uB97C \\uAD74\\uB9AC\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-status mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uD68D\\uB4DD\\uD55C \\uB1CC: \", currentBrains]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\uC0F7\\uAC74 \\uD69F\\uC218: \", currentShotguns, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 15\n        }, this), showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-animation-container mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uAD74\\uB9AC\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DiceAnimationArea, {\n            selectedDice: selectedDice,\n            isRolling: isRolling,\n            onAnimationComplete: null // 관전자는 결과 처리하지 않음\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 17\n        }, this), rolledResults.length > 0 && !isRolling && !showDiceAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rolled-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC8FC\\uC0AC\\uC704 \\uACB0\\uACFC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice-results-container\",\n            children: rolledResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `dice-result ${result.result.toLowerCase()}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `dice-type ${result.type.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dice-face\",\n                children: [result.result === 'BRAIN' && '뇌', result.result === 'SHOTGUN' && '총', result.result === 'FOOTSTEPS' && '발자국']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success me-2\",\n          onClick: handleContinue,\n          disabled: currentShotguns >= 3,\n          children: \"\\uACC4\\uC18D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: handleStop,\n          children: currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 13\n      }, this), currentShotguns >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D\\uC774 3\\uAC1C \\uC774\\uC0C1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 15\n        }, this), \" \\uC774\\uBC88 \\uD134\\uC5D0 \\uD68D\\uB4DD\\uD55C \\uB1CC\\uB97C \\uBAA8\\uB450 \\uC783\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uD134\\uC744 \\uC885\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DicePoolStatus, {\n        dicePool: dicePool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 784,\n    columnNumber: 5\n  }, this);\n}\n_s6(ZombieDice, \"tukl738D4yGVk9o7lU/qNRx5mUg=\");\n_c8 = ZombieDice;\nexport default ZombieDice;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Floor\");\n$RefreshReg$(_c2, \"Wall\");\n$RefreshReg$(_c3, \"PhysicalDice\");\n$RefreshReg$(_c4, \"DiceAnimationArea\");\n$RefreshReg$(_c5, \"DiceContainer\");\n$RefreshReg$(_c6, \"Dice\");\n$RefreshReg$(_c7, \"DicePoolStatus\");\n$RefreshReg$(_c8, \"ZombieDice\");","map":{"version":3,"names":["useState","useEffect","useRef","Suspense","Canvas","useFrame","useLoader","Physics","useBox","usePlane","THREE","TextureLoader","redBrain","redFootsteps","redShotgun","yellowBrain","yellowFootsteps","yellowShotgun","greenBrain","greenFootsteps","greenShotgun","jsxDEV","_jsxDEV","Fragment","_Fragment","WINNING_SCORE","DICE_FACES","RED","faces","image","type","YELLOW","GREEN","getDiceColor","getTexturesForType","_DICE_FACES$type","map","face","adjustDiceRotation","result","faceIndex","api","ref","targetRotation","Math","PI","current","rotation","x","y","z","velocity","set","angularVelocity","getResultClass","modalStyle","position","top","left","transform","width","maxWidth","backgroundColor","borderRadius","boxShadow","zIndex","padding","overlayStyle","right","bottom","Floor","_s","receiveShadow","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","transparent","opacity","_c","Wall","_s2","_c2","PhysicalDice","isRolling","_s3","mass","random","allowSleep","sleepSpeedLimit","sleepTimeLimit","textures","diceColor","_DICE_FACES$type2","findIndex","setRotation","castShadow","attachArray","_c3","DiceAnimationArea","selectedDice","onAnimationComplete","_s4","animationProgress","setAnimationProgress","animationDuration","startTime","Date","now","animationTimer","setInterval","elapsed","progress","min","clearInterval","setTimeout","results","diceType","diceFaces","floor","selectedFace","className","shadows","camera","fov","intensity","fallback","gravity","defaultContactMaterial","restitution","index","_c4","DiceContainer","_s5","animationComplete","setAnimationComplete","handleAnimationComplete","toLowerCase","_c5","Dice","_c6","DicePoolStatus","dicePool","redCount","filter","dice","length","yellowCount","greenCount","_c7","ZombieDice","players","currentTurn","onTurnEnd","isMyTurn","_s6","_players$currentTurn","setDicePool","setSelectedDice","rolledResults","setRolledResults","currentBrains","setCurrentBrains","currentShotguns","setCurrentShotguns","setIsRolling","winner","setWinner","gameStarted","setGameStarted","showDiceAnimation","setShowDiceAnimation","initialDicePool","Array","fill","renderScoreBoard","player","nickname","score","handleRoll","console","log","window","socket","roomId","location","pathname","split","emit","action","requestRoll","error","handleRollComplete","brains","shotguns","forEach","handleContinue","footstepsDice","handleStop","handleGameStarted","data","gameState","handleTurnStarted","isArray","defaultDicePool","handleDiceSelected","handleRollDiceResult","undefined","handleTurnEnded","nextPlayer","handleGameEnded","handleDiceRolling","on","off","onClick","disabled","_c8","$RefreshReg$"],"sources":["F:/Workspace/Cursor/game/frontend/src/components/games/ZombieDice.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\r\nimport { Physics, useBox, usePlane } from '@react-three/cannon';\r\nimport * as THREE from 'three';\r\nimport { TextureLoader } from 'three';\r\nimport redBrain from '../../assets/zombie-dice/faces/red-brain.png';\r\nimport redFootsteps from '../../assets/zombie-dice/faces/red-footsteps.png';\r\nimport redShotgun from '../../assets/zombie-dice/faces/red-shotgun.png';\r\nimport yellowBrain from '../../assets/zombie-dice/faces/yellow-brain.png';\r\nimport yellowFootsteps from '../../assets/zombie-dice/faces/yellow-footsteps.png';\r\nimport yellowShotgun from '../../assets/zombie-dice/faces/yellow-shotgun.png';\r\nimport greenBrain from '../../assets/zombie-dice/faces/green-brain.png';\r\nimport greenFootsteps from '../../assets/zombie-dice/faces/green-footsteps.png';\r\nimport greenShotgun from '../../assets/zombie-dice/faces/green-shotgun.png';\r\nimport '../styles/ZombieDice.css';\r\n\r\n// 승리 점수\r\nconst WINNING_SCORE = 13;\r\n\r\n// 주사위 면 정의\r\nconst DICE_FACES = {\r\n  RED: {\r\n    faces: [\r\n      { image: redBrain, type: 'SHOTGUN' },      // 1면\r\n      { image: redFootsteps, type: 'FOOTSTEPS' }, // 2면\r\n      { image: redFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: redShotgun, type: 'BRAIN' },   // 4면\r\n      { image: redShotgun, type: 'FOOTSTEPS' },   // 5면\r\n      { image: redShotgun, type: 'SHOTGUN' }    // 6면\r\n    ]\r\n  },\r\n  YELLOW: {\r\n    faces: [\r\n      { image: yellowBrain, type: 'BRAIN' },     // 1면\r\n      { image: yellowBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 3면\r\n      { image: yellowFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: yellowShotgun, type: 'FOOTSTEPS' },  // 5면\r\n      { image: yellowShotgun, type: 'BRAIN' }   // 6면\r\n    ]\r\n  },\r\n  GREEN: {\r\n    faces: [\r\n      { image: greenBrain, type: 'BRAIN' },     // 1면\r\n      { image: greenBrain, type: 'FOOTSTEPS' },     // 2면\r\n      { image: greenBrain, type: 'BRAIN' },     // 3면\r\n      { image: greenFootsteps, type: 'SHOTGUN' }, // 4면\r\n      { image: greenFootsteps, type: 'FOOTSTEPS' }, // 5면\r\n      { image: greenShotgun, type: 'SHOTGUN' }   // 6면\r\n    ]\r\n  }\r\n};\r\n\r\n// 주사위 색상 가져오기\r\nconst getDiceColor = (type) => {\r\n  if (type === 'RED') return 0xff0000;\r\n  if (type === 'YELLOW') return 0xffff00;\r\n  if (type === 'GREEN') return 0x00ff00;\r\n  return 0xffffff;\r\n};\r\n\r\n// 주사위 타입에 따른 텍스처 가져오기\r\nconst getTexturesForType = (type) => {\r\n  // DICE_FACES에서 해당 타입의 주사위 면 정보 가져오기\r\n  const faces = DICE_FACES[type]?.faces || [];\r\n  \r\n  // 6개 면의 이미지를 배열로 반환\r\n  return faces.map(face => face.image);\r\n};\r\n\r\n// 결과에 맞게 주사위 회전 조정\r\nconst adjustDiceRotation = (result, faceIndex, api, ref) => {\r\n  // 주사위 면에 따른 회전 설정\r\n  // 주사위 큐브에서 각 면의 인덱스:\r\n  // 0: +x (오른쪽), 1: -x (왼쪽)\r\n  // 2: +y (위), 3: -y (아래)\r\n  // 4: +z (앞), 5: -z (뒤)\r\n  \r\n  let targetRotation = [0, 0, 0];\r\n  \r\n  switch(faceIndex) {\r\n    case 0: // +x (오른쪽) 면이 위로\r\n      targetRotation = [0, 0, -Math.PI/2];\r\n      break;\r\n    case 1: // -x (왼쪽) 면이 위로\r\n      targetRotation = [0, 0, Math.PI/2];\r\n      break;\r\n    case 2: // +y (위) 면이 위로\r\n      targetRotation = [0, 0, 0];\r\n      break;\r\n    case 3: // -y (아래) 면이 위로\r\n      targetRotation = [Math.PI, 0, 0];\r\n      break;\r\n    case 4: // +z (앞) 면이 위로\r\n      targetRotation = [Math.PI/2, 0, 0];\r\n      break;\r\n    case 5: // -z (뒤) 면이 위로\r\n      targetRotation = [-Math.PI/2, 0, 0];\r\n      break;\r\n    default:\r\n      // 기본값 - 위 면이 위로\r\n      targetRotation = [0, 0, 0];\r\n  }\r\n  \r\n  // 주사위 회전 설정\r\n  if (ref.current) {\r\n    ref.current.rotation.x = targetRotation[0];\r\n    ref.current.rotation.y = targetRotation[1];\r\n    ref.current.rotation.z = targetRotation[2];\r\n  }\r\n  \r\n  // 물리 속성 정지\r\n  api.velocity.set(0, 0, 0);\r\n  api.angularVelocity.set(0, 0, 0);\r\n};\r\n\r\n// 결과 타입에 따른 클래스 이름 가져오기\r\nconst getResultClass = (result) => {\r\n  if (result === 'BRAIN') return 'result-brain';\r\n  if (result === 'SHOTGUN') return 'result-shotgun';\r\n  if (result === 'FOOTSTEPS') return 'result-footsteps';\r\n  return '';\r\n};\r\n\r\n// 모달 스타일을 상수로 컴포넌트 외부에 정의\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '80%',\r\n  maxWidth: '600px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  zIndex: 1000,\r\n  padding: '20px'\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: 999\r\n};\r\n\r\n// 바닥 컴포넌트\r\nconst Floor = () => {\r\n  const [ref] = usePlane(() => ({ \r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    position: [0, -2, 0],\r\n    type: 'Static'\r\n  }));\r\n  \r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeGeometry args={[30, 30]} />\r\n      <shadowMaterial color=\"#171717\" transparent opacity={0.2} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 벽 컴포넌트 추가 (주사위가 화면 밖으로 나가지 않도록)\r\nconst Wall = ({ position, rotation }) => {\r\n  const [ref] = usePlane(() => ({ \r\n    position,\r\n    rotation,\r\n    type: 'Static'\r\n  }));\r\n  \r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeGeometry args={[30, 10]} />\r\n      <meshStandardMaterial transparent opacity={0} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 물리 기반 주사위 컴포넌트\r\nconst PhysicalDice = ({ type, result, isRolling, position }) => {\r\n  const [ref, api] = useBox(() => ({ \r\n    mass: 1,\r\n    position: position || [0, 3, 0], // 낮은 시작 높이\r\n    rotation: [\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI\r\n    ],\r\n    args: [1, 1, 1],\r\n    allowSleep: true,\r\n    sleepSpeedLimit: 0.1,\r\n    sleepTimeLimit: 1\r\n  }));\r\n  \r\n  // 텍스처 로드\r\n  const textures = useLoader(TextureLoader, getTexturesForType(type));\r\n  \r\n  // 주사위 색상 설정\r\n  const diceColor = getDiceColor(type);\r\n  \r\n  // 주사위 굴리기 효과\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      // 주사위 위치 초기화 - 더 제한된 영역에서 시작\r\n      api.position.set(\r\n        (position?.[0] || 0) + (Math.random() * 0.5 - 0.25), // 약간의 랜덤 오프셋\r\n        position?.[1] || 3, \r\n        (position?.[2] || 0) + (Math.random() * 0.5 - 0.25)\r\n      );\r\n      \r\n      // 랜덤한 힘과 회전으로 주사위 던지기 (더 제한된 힘)\r\n      api.velocity.set(\r\n        (Math.random() - 0.5) * 3, // 감소된 수평 속도\r\n        2 + Math.random() * 1,     // 감소된 수직 속도\r\n        (Math.random() - 0.5) * 3  // 감소된 수평 속도\r\n      );\r\n      \r\n      api.angularVelocity.set(\r\n        Math.random() * 8 - 4,\r\n        Math.random() * 8 - 4,\r\n        Math.random() * 8 - 4\r\n      );\r\n    } else {\r\n      // 결과에 맞게 주사위 회전 조정\r\n      const faces = DICE_FACES[type]?.faces || [];\r\n      const faceIndex = faces.findIndex(face => face.type === result);\r\n      adjustDiceRotation(result, faceIndex, api, ref);\r\n    }\r\n  }, [isRolling, api, ref, result, position, type]);\r\n  \r\n  // 주사위 회전 상태 모니터링\r\n  const [rotation, setRotation] = useState([0, 0, 0]);\r\n  \r\n  // useFrame을 사용하여 매 프레임마다 상태 업데이트\r\n  useFrame(() => {\r\n    // 주사위 회전 상태 업데이트\r\n    if (ref.current) {\r\n      setRotation([\r\n        ref.current.rotation.x,\r\n        ref.current.rotation.y,\r\n        ref.current.rotation.z\r\n      ]);\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <mesh \r\n      ref={ref}\r\n      castShadow\r\n      receiveShadow\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[0]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[1]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[2]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[3]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[4]} \r\n        color={diceColor}\r\n      />\r\n      <meshStandardMaterial \r\n        attachArray=\"material\" \r\n        map={textures[5]} \r\n        color={diceColor}\r\n      />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n// 주사위 애니메이션 영역 컴포넌트 - 모달 대신 사용\r\nconst DiceAnimationArea = ({ selectedDice, isRolling, onAnimationComplete }) => {\r\n  const [animationProgress, setAnimationProgress] = useState(0);\r\n  \r\n  // 애니메이션 진행 효과\r\n  useEffect(() => {\r\n    if (isRolling) {\r\n      const animationDuration = 2000; // 2초\r\n      const startTime = Date.now();\r\n      \r\n      const animationTimer = setInterval(() => {\r\n        const elapsed = Date.now() - startTime;\r\n        const progress = Math.min(elapsed / animationDuration, 1);\r\n        setAnimationProgress(progress);\r\n        \r\n        if (progress >= 1) {\r\n          clearInterval(animationTimer);\r\n          \r\n          // 애니메이션 완료 후 결과 처리\r\n          setTimeout(() => {\r\n            if (onAnimationComplete) {\r\n              // 주사위 결과 생성\r\n              const results = selectedDice.map(diceType => {\r\n                // 주사위 타입에 따른 면 정보 가져오기\r\n                const diceFaces = DICE_FACES[diceType].faces;\r\n                \r\n                // 랜덤하게 면 선택 (1-6)\r\n                const faceIndex = Math.floor(Math.random() * 6);\r\n                const selectedFace = diceFaces[faceIndex];\r\n                \r\n                return {\r\n                  type: diceType,\r\n                  result: selectedFace.type,\r\n                  faceIndex: faceIndex\r\n                };\r\n              });\r\n              \r\n              onAnimationComplete(results);\r\n            }\r\n          }, 500);\r\n        }\r\n      }, 16);\r\n      \r\n      return () => clearInterval(animationTimer);\r\n    }\r\n  }, [isRolling, selectedDice, onAnimationComplete]);\r\n  \r\n  return (\r\n    <div className=\"dice-animation-area\">\r\n      <Canvas shadows camera={{ position: [0, 5, 10], fov: 50 }}>\r\n        <ambientLight intensity={0.5} />\r\n        <directionalLight\r\n          position={[10, 10, 10]}\r\n          intensity={0.8}\r\n          castShadow\r\n          shadow-mapSize-width={1024}\r\n          shadow-mapSize-height={1024}\r\n        />\r\n        <Suspense fallback={null}>\r\n          <Physics \r\n            gravity={[0, -9.8, 0]} \r\n            defaultContactMaterial={{ restitution: 0.5 }}\r\n          >\r\n            <Floor />\r\n            {/* 경계벽 추가 */}\r\n            <Wall position={[15, 0, 0]} rotation={[0, -Math.PI/2, 0]} />\r\n            <Wall position={[-15, 0, 0]} rotation={[0, Math.PI/2, 0]} />\r\n            <Wall position={[0, 0, 15]} rotation={[0, Math.PI, 0]} />\r\n            <Wall position={[0, 0, -15]} rotation={[0, 0, 0]} />\r\n            \r\n            {selectedDice.map((diceType, index) => (\r\n              <PhysicalDice \r\n                key={index}\r\n                type={diceType}\r\n                result={'BRAIN'} // 임시 결과\r\n                isRolling={isRolling}\r\n                position={[\r\n                  (index % 3 - 1) * 1.5,\r\n                  3 + Math.floor(index / 3) * 1.5,\r\n                  0\r\n                ]}\r\n              />\r\n            ))}\r\n          </Physics>\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 주사위 컨테이너 컴포넌트\r\nconst DiceContainer = ({ type, result, isRolling }) => {\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n  \r\n  const handleAnimationComplete = () => {\r\n    setAnimationComplete(true);\r\n  };\r\n  \r\n  return (\r\n    <div className={`dice-result-container ${isRolling && !animationComplete ? 'rolling-container' : 'animation-ended'}`}>\r\n      <div className={`dice-3d-container ${type.toLowerCase()}-dice-container`}>\r\n        <Canvas shadows camera={{ position: [0, 2, 5], fov: 50 }}>\r\n          <ambientLight intensity={0.5} />\r\n          <directionalLight\r\n            position={[10, 10, 10]}\r\n            intensity={0.8}\r\n            castShadow\r\n            shadow-mapSize-width={1024}\r\n            shadow-mapSize-height={1024}\r\n          />\r\n          <Suspense fallback={null}>\r\n            <Physics \r\n              gravity={[0, -9.8, 0]} \r\n              defaultContactMaterial={{ restitution: 0.3 }}\r\n            >\r\n              <Floor />\r\n              <Wall position={[15, 0, 0]} rotation={[0, -Math.PI/2, 0]} /> {/* 오른쪽 벽 */}\r\n              <Wall position={[-15, 0, 0]} rotation={[0, Math.PI/2, 0]} /> {/* 왼쪽 벽 */}\r\n              <Wall position={[0, 0, 15]} rotation={[0, Math.PI, 0]} /> {/* 뒤 벽 */}\r\n              <Wall position={[0, 0, -15]} rotation={[0, 0, 0]} /> {/* 앞 벽 */}\r\n              <PhysicalDice \r\n                type={type} \r\n                result={result} \r\n                isRolling={isRolling} \r\n                position={[0, 5, 0]}\r\n              />\r\n            </Physics>\r\n          </Suspense>\r\n        </Canvas>\r\n      </div>\r\n      <div className={`dice-result-label ${getResultClass(result)} ${animationComplete ? 'show-result' : ''}`}>\r\n        {result === 'BRAIN' && '뇌'}\r\n        {result === 'SHOTGUN' && '총'}\r\n        {result === 'FOOTSTEPS' && '발자국'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 기존 Dice 컴포넌트를 DiceContainer로 대체\r\nconst Dice = ({ type, result, isRolling }) => {\r\n  return <DiceContainer type={type} result={result} isRolling={isRolling} />;\r\n};\r\n\r\n// 주사위 풀 상태 컴포넌트\r\nconst DicePoolStatus = ({ dicePool }) => {\r\n  // 주사위 타입별 개수 계산\r\n  const redCount = dicePool.filter(dice => dice === 'RED').length;\r\n  const yellowCount = dicePool.filter(dice => dice === 'YELLOW').length;\r\n  const greenCount = dicePool.filter(dice => dice === 'GREEN').length;\r\n  \r\n  return (\r\n    <div className=\"dice-pool-status mt-4\">\r\n      <h4 className=\"text-center mb-3\">남은 주사위</h4>\r\n      <div className=\"dice-pool-container\">\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color red\"></div>\r\n          <div className=\"dice-pool-count\">{redCount}</div>\r\n          <div className=\"dice-pool-label\">빨강</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color yellow\"></div>\r\n          <div className=\"dice-pool-count\">{yellowCount}</div>\r\n          <div className=\"dice-pool-label\">노랑</div>\r\n        </div>\r\n        <div className=\"dice-pool-item\">\r\n          <div className=\"dice-pool-color green\"></div>\r\n          <div className=\"dice-pool-count\">{greenCount}</div>\r\n          <div className=\"dice-pool-label\">초록</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dice-pool-total text-center mt-2\">\r\n        총 {dicePool.length}개 남음\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 메인 ZombieDice 컴포넌트\r\nfunction ZombieDice({ players, currentTurn, onTurnEnd, isMyTurn }) {\r\n  // 상태 정의\r\n  const [dicePool, setDicePool] = useState([]);\r\n  const [selectedDice, setSelectedDice] = useState([]);\r\n  const [rolledResults, setRolledResults] = useState([]);\r\n  const [currentBrains, setCurrentBrains] = useState(0);\r\n  const [currentShotguns, setCurrentShotguns] = useState(0);\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  \r\n  // 모달 제거 - 주사위 애니메이션 상태만 유지\r\n  const [showDiceAnimation, setShowDiceAnimation] = useState(false);\r\n  \r\n  // 게임 시작 시 주사위 풀 초기화\r\n  useEffect(() => {\r\n    if (isMyTurn && !dicePool.length) {\r\n      // 주사위 풀 초기화\r\n      const initialDicePool = [\r\n        ...Array(3).fill('RED'),\r\n        ...Array(4).fill('YELLOW'),\r\n        ...Array(6).fill('GREEN')\r\n      ];\r\n      setDicePool(initialDicePool);\r\n    }\r\n  }, [isMyTurn, dicePool.length]);\r\n  \r\n  // 점수판 렌더링 함수\r\n  const renderScoreBoard = () => {\r\n    if (!players || players.length === 0) return null;\r\n    \r\n    return (\r\n      <div className=\"scoreboard mb-4\">\r\n        <h3 className=\"text-center mb-3\">점수판</h3>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>순서</th>\r\n                <th>플레이어</th>\r\n                <th>점수</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {players.map((player, index) => (\r\n                <tr key={index} className={index === currentTurn ? 'table-active' : ''}>\r\n                  <td>{index + 1}</td>\r\n                  <td>\r\n                    {player.nickname}\r\n                    {index === currentTurn && <span className=\"ms-2 badge bg-primary\">턴</span>}\r\n                  </td>\r\n                  <td>{player.score} / {WINNING_SCORE}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // 주사위 굴리기 요청 함수 수정\r\n  const handleRoll = () => {\r\n    console.log('주사위 굴리기 요청');\r\n    \r\n    // 주사위 굴리기 상태 설정\r\n    setIsRolling(true);\r\n    \r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      \r\n      // 주사위 선택 요청 - 서버에 전송하여 모든 플레이어가 볼 수 있게 함\r\n      window.socket.emit('gameAction', {\r\n        action: 'selectDice',\r\n        roomId,\r\n        requestRoll: true // 주사위 굴리기도 요청\r\n      });\r\n    } else {\r\n      console.error('소켓 연결이 없습니다!');\r\n      setIsRolling(false);\r\n    }\r\n  };\r\n  \r\n  // 주사위 굴리기 결과 처리 함수 수정\r\n  const handleRollComplete = (results) => {\r\n    console.log('주사위 굴리기 완료:', results);\r\n    \r\n    // 주사위 굴리기 상태 종료\r\n    setIsRolling(false);\r\n    setShowDiceAnimation(false);\r\n    \r\n    if (!results || results.length === 0) {\r\n      // 결과가 없는 경우 (오류)\r\n      return;\r\n    }\r\n    \r\n    // 주사위 결과 저장\r\n    setRolledResults(results);\r\n    \r\n    // 뇌와 총 개수 집계\r\n    let brains = currentBrains;\r\n    let shotguns = currentShotguns;\r\n    \r\n    results.forEach(result => {\r\n      if (result.result === 'BRAIN') {\r\n        brains++;\r\n      } else if (result.result === 'SHOTGUN') {\r\n        shotguns++;\r\n      }\r\n    });\r\n    \r\n    setCurrentBrains(brains);\r\n    setCurrentShotguns(shotguns);\r\n    \r\n    // 게임 액션 서버에 전송\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'rollDiceResult',\r\n        roomId,\r\n        results,\r\n        brains,\r\n        shotguns\r\n      });\r\n    }\r\n  };\r\n  \r\n  // 계속하기 버튼 핸들러\r\n  const handleContinue = () => {\r\n    // 발자국 결과인 주사위만 필터링\r\n    const footstepsDice = rolledResults\r\n      .filter(result => result.result === 'FOOTSTEPS')\r\n      .map(result => result.type);\r\n    \r\n    // 계속 진행 요청\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'continueTurn',\r\n        roomId,\r\n        footstepsDice\r\n      });\r\n    }\r\n    \r\n    // 결과 초기화\r\n    setRolledResults([]);\r\n  };\r\n  \r\n  // 멈추기 버튼 핸들러\r\n  const handleStop = () => {\r\n    // 턴 종료 요청\r\n    if (window.socket) {\r\n      const roomId = window.location.pathname.split('/')[2];\r\n      window.socket.emit('gameAction', {\r\n        action: 'endTurn',\r\n        roomId,\r\n        score: currentShotguns >= 3 ? 0 : currentBrains\r\n      });\r\n    }\r\n    \r\n    // 상태 초기화\r\n    setCurrentBrains(0);\r\n    setCurrentShotguns(0);\r\n    setRolledResults([]);\r\n    setSelectedDice([]);\r\n  };\r\n  \r\n  // 서버 이벤트 핸들러 수정\r\n  useEffect(() => {\r\n    if (window.socket) {\r\n      // 게임 시작 이벤트 리스너\r\n      const handleGameStarted = (data) => {\r\n        console.log('게임 시작됨:', data);\r\n        setGameStarted(true);\r\n        \r\n        // 주사위 풀 초기화 추가\r\n        if (data.gameState && data.gameState.dicePool) {\r\n          setDicePool(data.gameState.dicePool);\r\n        }\r\n      };\r\n      \r\n      // 턴 시작 이벤트 리스너\r\n      const handleTurnStarted = (data) => {\r\n        console.log('턴 시작됨:', data);\r\n        // 주사위 풀 설정 - 명시적으로 확인\r\n        if (data.dicePool && Array.isArray(data.dicePool)) {\r\n          setDicePool(data.dicePool);\r\n        } else {\r\n          // 주사위 풀이 없거나 배열이 아닌 경우 기본값 설정\r\n          const defaultDicePool = [\r\n            ...Array(3).fill('RED'),\r\n            ...Array(4).fill('YELLOW'),\r\n            ...Array(6).fill('GREEN')\r\n          ];\r\n          setDicePool(defaultDicePool);\r\n        }\r\n        setCurrentBrains(0);\r\n        setCurrentShotguns(0);\r\n      };\r\n      \r\n      // 주사위 선택 이벤트 리스너 수정\r\n      const handleDiceSelected = (data) => {\r\n        console.log('주사위 선택됨:', data);\r\n        \r\n        setSelectedDice(data.selectedDice || []);\r\n        setDicePool(data.dicePool || []);\r\n        \r\n        // 주사위 굴리기 요청이 함께 있으면 애니메이션 시작\r\n        if (data.requestRoll) {\r\n          setIsRolling(true);\r\n          setShowDiceAnimation(true);\r\n        }\r\n      };\r\n      \r\n      // 주사위 굴리기 결과 이벤트 리스너 수정\r\n      const handleRollDiceResult = (data) => {\r\n        console.log('서버에서 주사위 결과 확인:', data);\r\n        \r\n        // 주사위 풀 업데이트\r\n        if (data.dicePool) {\r\n          setDicePool(data.dicePool);\r\n        }\r\n        \r\n        // 다른 플레이어의 결과도 표시\r\n        if (data.results && data.results.length > 0) {\r\n          setRolledResults(data.results);\r\n          // 현재 턴 플레이어가 아닌 경우에도 결과 보여주기\r\n          if (!isMyTurn) {\r\n            // 애니메이션 종료\r\n            setIsRolling(false);\r\n            setShowDiceAnimation(false);\r\n          }\r\n        }\r\n        \r\n        if (!isMyTurn) {\r\n          // 다른 플레이어의 뇌와 샷건 개수 정보도 업데이트\r\n          if (data.brains !== undefined) {\r\n            setCurrentBrains(data.brains);\r\n          }\r\n          if (data.shotguns !== undefined) {\r\n            setCurrentShotguns(data.shotguns);\r\n          }\r\n        }\r\n      };\r\n      \r\n      // 턴 종료 이벤트 리스너\r\n      const handleTurnEnded = (data) => {\r\n        console.log('턴 종료됨:', data);\r\n        \r\n        // 상태 초기화\r\n        setCurrentBrains(0);\r\n        setCurrentShotguns(0);\r\n        setRolledResults([]);\r\n        setSelectedDice([]);\r\n        \r\n        // 턴 종료 콜백 호출\r\n        if (onTurnEnd) {\r\n          onTurnEnd(data.nextPlayer);\r\n        }\r\n      };\r\n      \r\n      // 게임 종료 이벤트 리스너\r\n      const handleGameEnded = (data) => {\r\n        console.log('게임 종료됨:', data);\r\n        \r\n        if (data.winner) {\r\n          setWinner(data.winner);\r\n        }\r\n      };\r\n      \r\n      // 새로운 이벤트 리스너 추가 - 주사위 굴리기 시작\r\n      const handleDiceRolling = (data) => {\r\n        console.log('주사위 굴리기 시작:', data);\r\n        \r\n        // 모든 플레이어에게 주사위 애니메이션 표시\r\n        setSelectedDice(data.selectedDice || []);\r\n        setIsRolling(true);\r\n        setShowDiceAnimation(true);\r\n        \r\n        // 애니메이션 타이머 설정 (실제 애니메이션 종료는 결과 수신 시)\r\n        if (!isMyTurn) {\r\n          // 결과를 받지 못하는 경우를 대비한 타임아웃\r\n          setTimeout(() => {\r\n            if (isRolling) {\r\n              setIsRolling(false);\r\n              setShowDiceAnimation(false);\r\n            }\r\n          }, 3500);\r\n        }\r\n      };\r\n      \r\n      // 이벤트 리스너 등록\r\n      window.socket.on('gameStarted', handleGameStarted);\r\n      window.socket.on('turnStarted', handleTurnStarted);\r\n      window.socket.on('diceSelected', handleDiceSelected);\r\n      window.socket.on('rollDiceResult', handleRollDiceResult);\r\n      window.socket.on('turnEnded', handleTurnEnded);\r\n      window.socket.on('gameEnded', handleGameEnded);\r\n      window.socket.on('diceRolling', handleDiceRolling); // 새 이벤트\r\n      \r\n      // 클린업\r\n      return () => {\r\n        window.socket.off('gameStarted', handleGameStarted);\r\n        window.socket.off('turnStarted', handleTurnStarted);\r\n        window.socket.off('diceSelected', handleDiceSelected);\r\n        window.socket.off('rollDiceResult', handleRollDiceResult);\r\n        window.socket.off('turnEnded', handleTurnEnded);\r\n        window.socket.off('gameEnded', handleGameEnded);\r\n        window.socket.off('diceRolling', handleDiceRolling); // 새 이벤트\r\n      };\r\n    }\r\n  }, [onTurnEnd, isMyTurn, isRolling]);\r\n\r\n  // 메인 렌더링 수정\r\n  return (\r\n    <div className=\"zombie-dice\">\r\n      {renderScoreBoard()}\r\n      \r\n      {winner ? (\r\n        <div className=\"alert alert-success text-center\">\r\n          <h3>🏆 {winner.nickname}님이 승리하셨습니다! 🏆</h3>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {isMyTurn ? (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3 className=\"my-turn-indicator\">당신의 차례입니다!</h3>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation ? (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    onAnimationComplete={handleRollComplete}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"dice-area mb-3\">\r\n                  {isRolling ? (\r\n                    <div className=\"text-center\">\r\n                      <p>주사위 굴리는 중...</p>\r\n                    </div>\r\n                  ) : (\r\n                    rolledResults.length > 0 ? (\r\n                      <div className=\"rolled-results\">\r\n                        <h4>주사위 결과:</h4>\r\n                        <div className=\"dice-results-container\">\r\n                          {rolledResults.map((result, index) => (\r\n                            <div key={index} className={`dice-result ${result.result.toLowerCase()}`}>\r\n                              <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                              <div className=\"dice-face\">\r\n                                {result.result === 'BRAIN' && '뇌'}\r\n                                {result.result === 'SHOTGUN' && '총'}\r\n                                {result.result === 'FOOTSTEPS' && '발자국'}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <button \r\n                        className=\"btn btn-primary btn-lg\"\r\n                        onClick={handleRoll}\r\n                        disabled={isRolling}\r\n                      >\r\n                        주사위 굴리기\r\n                      </button>\r\n                    )\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"text-center mb-3\">\r\n                <h3>다른 플레이어의 차례입니다.</h3>\r\n                <p>{players[currentTurn]?.nickname}님이 주사위를 굴리고 있습니다...</p>\r\n              </div>\r\n              \r\n              <div className=\"current-status mb-3\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                  <div>획득한 뇌: {currentBrains}</div>\r\n                  <div>샷건 횟수: {currentShotguns}/3</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {showDiceAnimation && (\r\n                <div className=\"dice-animation-container mb-3\">\r\n                  <h4 className=\"text-center\">주사위 굴리는 중...</h4>\r\n                  <DiceAnimationArea \r\n                    selectedDice={selectedDice}\r\n                    isRolling={isRolling}\r\n                    onAnimationComplete={null} // 관전자는 결과 처리하지 않음\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              {rolledResults.length > 0 && !isRolling && !showDiceAnimation && (\r\n                <div className=\"rolled-results\">\r\n                  <h4>주사위 결과:</h4>\r\n                  <div className=\"dice-results-container\">\r\n                    {rolledResults.map((result, index) => (\r\n                      <div key={index} className={`dice-result ${result.result.toLowerCase()}`}>\r\n                        <div className={`dice-type ${result.type.toLowerCase()}`}></div>\r\n                        <div className=\"dice-face\">\r\n                          {result.result === 'BRAIN' && '뇌'}\r\n                          {result.result === 'SHOTGUN' && '총'}\r\n                          {result.result === 'FOOTSTEPS' && '발자국'}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {rolledResults.length > 0 && !winner && !isRolling && !showDiceAnimation && isMyTurn && (\r\n            <div className=\"controls\">\r\n              <button \r\n                className=\"btn btn-success me-2\"\r\n                onClick={handleContinue}\r\n                disabled={currentShotguns >= 3}\r\n              >\r\n                계속하기\r\n              </button>\r\n              <button \r\n                className=\"btn btn-warning\"\r\n                onClick={handleStop}\r\n              >\r\n                {currentShotguns >= 3 ? \"턴 종료 (0점)\" : \"멈추기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {currentShotguns >= 3 && (\r\n            <div className=\"alert alert-danger mt-3\">\r\n              <strong>총이 3개 이상!</strong> 이번 턴에 획득한 뇌를 모두 잃었습니다. 턴을 종료해주세요.\r\n            </div>\r\n          )}\r\n          \r\n          <DicePoolStatus dicePool={dicePool} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZombieDice;"],"mappings":";;;;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAChE,SAASC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,qBAAqB;AAC/D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,eAAe,MAAM,qDAAqD;AACjF,OAAOC,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,cAAc,MAAM,oDAAoD;AAC/E,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAG,EAAE;;AAExB;AACA,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE;IACHC,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEjB,QAAQ;MAAEkB,IAAI,EAAE;IAAU,CAAC;IAAO;IAC3C;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAY,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEhB,YAAY;MAAEiB,IAAI,EAAE;IAAU,CAAC;IAAE;IAC1C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAQ,CAAC;IAAI;IACxC;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAY,CAAC;IAAI;IAC5C;MAAED,KAAK,EAAEf,UAAU;MAAEgB,IAAI,EAAE;IAAU,CAAC,CAAI;IAAA;EAE9C,CAAC;EACDC,MAAM,EAAE;IACNH,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC3C;MAAED,KAAK,EAAEd,WAAW;MAAEe,IAAI,EAAE;IAAY,CAAC;IAAM;IAC/C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAU,CAAC;IAAE;IAC7C;MAAED,KAAK,EAAEb,eAAe;MAAEc,IAAI,EAAE;IAAU,CAAC;IAAE;IAC7C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAY,CAAC;IAAG;IAC9C;MAAED,KAAK,EAAEZ,aAAa;MAAEa,IAAI,EAAE;IAAQ,CAAC,CAAG;IAAA;EAE9C,CAAC;EACDE,KAAK,EAAE;IACLJ,KAAK,EAAE,CACL;MAAEC,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAY,CAAC;IAAM;IAC9C;MAAED,KAAK,EAAEX,UAAU;MAAEY,IAAI,EAAE;IAAQ,CAAC;IAAM;IAC1C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAU,CAAC;IAAE;IAC5C;MAAED,KAAK,EAAEV,cAAc;MAAEW,IAAI,EAAE;IAAY,CAAC;IAAE;IAC9C;MAAED,KAAK,EAAET,YAAY;MAAEU,IAAI,EAAE;IAAU,CAAC,CAAG;IAAA;EAE/C;AACF,CAAC;;AAED;AACA,MAAMG,YAAY,GAAIH,IAAI,IAAK;EAC7B,IAAIA,IAAI,KAAK,KAAK,EAAE,OAAO,QAAQ;EACnC,IAAIA,IAAI,KAAK,QAAQ,EAAE,OAAO,QAAQ;EACtC,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAO,QAAQ;EACrC,OAAO,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMI,kBAAkB,GAAIJ,IAAI,IAAK;EAAA,IAAAK,gBAAA;EACnC;EACA,MAAMP,KAAK,GAAG,EAAAO,gBAAA,GAAAT,UAAU,CAACI,IAAI,CAAC,cAAAK,gBAAA,uBAAhBA,gBAAA,CAAkBP,KAAK,KAAI,EAAE;;EAE3C;EACA,OAAOA,KAAK,CAACQ,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,CAAC;AACtC,CAAC;;AAED;AACA,MAAMS,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,KAAK;EAC1D;EACA;EACA;EACA;EACA;;EAEA,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE9B,QAAOH,SAAS;IACd,KAAK,CAAC;MAAE;MACNG,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAACC,IAAI,CAACC,EAAE,GAAC,CAAC,CAAC;MACnC;IACF,KAAK,CAAC;MAAE;MACNF,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAC,CAAC,CAAC;MAClC;IACF,KAAK,CAAC;MAAE;MACNF,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1B;IACF,KAAK,CAAC;MAAE;MACNA,cAAc,GAAG,CAACC,IAAI,CAACC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC;IACF,KAAK,CAAC;MAAE;MACNF,cAAc,GAAG,CAACC,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAClC;IACF,KAAK,CAAC;MAAE;MACNF,cAAc,GAAG,CAAC,CAACC,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACnC;IACF;MACE;MACAF,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B;;EAEA;EACA,IAAID,GAAG,CAACI,OAAO,EAAE;IACfJ,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGL,cAAc,CAAC,CAAC,CAAC;IAC1CD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACE,CAAC,GAAGN,cAAc,CAAC,CAAC,CAAC;IAC1CD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACG,CAAC,GAAGP,cAAc,CAAC,CAAC,CAAC;EAC5C;;EAEA;EACAF,GAAG,CAACU,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzBX,GAAG,CAACY,eAAe,CAACD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClC,CAAC;;AAED;AACA,MAAME,cAAc,GAAIf,MAAM,IAAK;EACjC,IAAIA,MAAM,KAAK,OAAO,EAAE,OAAO,cAAc;EAC7C,IAAIA,MAAM,KAAK,SAAS,EAAE,OAAO,gBAAgB;EACjD,IAAIA,MAAM,KAAK,WAAW,EAAE,OAAO,kBAAkB;EACrD,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMgB,UAAU,GAAG;EACjBC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE,uBAAuB;EAClCC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE,OAAO;EACjBC,eAAe,EAAE,OAAO;EACxBC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,8BAA8B;EACzCC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBX,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPU,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTP,eAAe,EAAE,oBAAoB;EACrCG,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMK,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAC7B,GAAG,CAAC,GAAGjC,QAAQ,CAAC,OAAO;IAC5BsC,QAAQ,EAAE,CAAC,CAACH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9BW,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpB1B,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,oBACER,OAAA;IAAMoB,GAAG,EAAEA,GAAI;IAAC8B,aAAa;IAAAC,QAAA,gBAC3BnD,OAAA;MAAeoD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCxD,OAAA;MAAgByD,KAAK,EAAC,SAAS;MAACC,WAAW;MAACC,OAAO,EAAE;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEX,CAAC;;AAED;AAAAP,EAAA,CAfMD,KAAK;EAAA,QACK7D,QAAQ;AAAA;AAAAyE,EAAA,GADlBZ,KAAK;AAgBX,MAAMa,IAAI,GAAGA,CAAC;EAAE3B,QAAQ;EAAET;AAAS,CAAC,KAAK;EAAAqC,GAAA;EACvC,MAAM,CAAC1C,GAAG,CAAC,GAAGjC,QAAQ,CAAC,OAAO;IAC5B+C,QAAQ;IACRT,QAAQ;IACRjB,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,oBACER,OAAA;IAAMoB,GAAG,EAAEA,GAAI;IAAC8B,aAAa;IAAAC,QAAA,gBAC3BnD,OAAA;MAAeoD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCxD,OAAA;MAAsB0D,WAAW;MAACC,OAAO,EAAE;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEX,CAAC;;AAED;AAAAM,GAAA,CAfMD,IAAI;EAAA,QACM1E,QAAQ;AAAA;AAAA4E,GAAA,GADlBF,IAAI;AAgBV,MAAMG,YAAY,GAAGA,CAAC;EAAExD,IAAI;EAAES,MAAM;EAAEgD,SAAS;EAAE/B;AAAS,CAAC,KAAK;EAAAgC,GAAA;EAC9D,MAAM,CAAC9C,GAAG,EAAED,GAAG,CAAC,GAAGjC,MAAM,CAAC,OAAO;IAC/BiF,IAAI,EAAE,CAAC;IACPjC,QAAQ,EAAEA,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACjCT,QAAQ,EAAE,CACRH,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG9C,IAAI,CAACC,EAAE,EACvBD,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG9C,IAAI,CAACC,EAAE,EACvBD,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG9C,IAAI,CAACC,EAAE,CACxB;IACD6B,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACfiB,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,GAAG;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMC,QAAQ,GAAGxF,SAAS,CAACK,aAAa,EAAEuB,kBAAkB,CAACJ,IAAI,CAAC,CAAC;;EAEnE;EACA,MAAMiE,SAAS,GAAG9D,YAAY,CAACH,IAAI,CAAC;;EAEpC;EACA7B,SAAS,CAAC,MAAM;IACd,IAAIsF,SAAS,EAAE;MACb;MACA9C,GAAG,CAACe,QAAQ,CAACJ,GAAG,CACd,CAAC,CAAAI,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,KAAKZ,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;MAAE;MACrD,CAAAlC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,EAClB,CAAC,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,CAAC,CAAC,KAAI,CAAC,KAAKZ,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CACpD,CAAC;;MAED;MACAjD,GAAG,CAACU,QAAQ,CAACC,GAAG,CACd,CAACR,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;MAAE;MAC3B,CAAC,GAAG9C,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,CAAC;MAAM;MAC3B,CAAC9C,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAE;MAC7B,CAAC;MAEDjD,GAAG,CAACY,eAAe,CAACD,GAAG,CACrBR,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EACrB9C,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EACrB9C,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CACtB,CAAC;IACH,CAAC,MAAM;MAAA,IAAAM,iBAAA;MACL;MACA,MAAMpE,KAAK,GAAG,EAAAoE,iBAAA,GAAAtE,UAAU,CAACI,IAAI,CAAC,cAAAkE,iBAAA,uBAAhBA,iBAAA,CAAkBpE,KAAK,KAAI,EAAE;MAC3C,MAAMY,SAAS,GAAGZ,KAAK,CAACqE,SAAS,CAAC5D,IAAI,IAAIA,IAAI,CAACP,IAAI,KAAKS,MAAM,CAAC;MAC/DD,kBAAkB,CAACC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACjD;EACF,CAAC,EAAE,CAAC6C,SAAS,EAAE9C,GAAG,EAAEC,GAAG,EAAEH,MAAM,EAAEiB,QAAQ,EAAE1B,IAAI,CAAC,CAAC;;EAEjD;EACA,MAAM,CAACiB,QAAQ,EAAEmD,WAAW,CAAC,GAAGlG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEnD;EACAK,QAAQ,CAAC,MAAM;IACb;IACA,IAAIqC,GAAG,CAACI,OAAO,EAAE;MACfoD,WAAW,CAAC,CACVxD,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,EACtBN,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACE,CAAC,EACtBP,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACG,CAAC,CACvB,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,oBACE5B,OAAA;IACEoB,GAAG,EAAEA,GAAI;IACTyD,UAAU;IACV3B,aAAa;IAAAC,QAAA,gBAEbnD,OAAA;MAAaoD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxD,OAAA;MACE8E,WAAW,EAAC,UAAU;MACtBhE,GAAG,EAAE0D,QAAQ,CAAC,CAAC,CAAE;MACjBf,KAAK,EAAEgB;IAAU;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;;AAED;AAAAU,GAAA,CA3GMF,YAAY;EAAA,QACG9E,MAAM,EAeRF,SAAS,EAuC1BD,QAAQ;AAAA;AAAAgG,GAAA,GAvDJf,YAAY;AA4GlB,MAAMgB,iBAAiB,GAAGA,CAAC;EAAEC,YAAY;EAAEhB,SAAS;EAAEiB;AAAoB,CAAC,KAAK;EAAAC,GAAA;EAC9E,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3G,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,IAAIsF,SAAS,EAAE;MACb,MAAMqB,iBAAiB,GAAG,IAAI,CAAC,CAAC;MAChC,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAE5B,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;QACvC,MAAMC,OAAO,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;QACtC,MAAMM,QAAQ,GAAGvE,IAAI,CAACwE,GAAG,CAACF,OAAO,GAAGN,iBAAiB,EAAE,CAAC,CAAC;QACzDD,oBAAoB,CAACQ,QAAQ,CAAC;QAE9B,IAAIA,QAAQ,IAAI,CAAC,EAAE;UACjBE,aAAa,CAACL,cAAc,CAAC;;UAE7B;UACAM,UAAU,CAAC,MAAM;YACf,IAAId,mBAAmB,EAAE;cACvB;cACA,MAAMe,OAAO,GAAGhB,YAAY,CAACnE,GAAG,CAACoF,QAAQ,IAAI;gBAC3C;gBACA,MAAMC,SAAS,GAAG/F,UAAU,CAAC8F,QAAQ,CAAC,CAAC5F,KAAK;;gBAE5C;gBACA,MAAMY,SAAS,GAAGI,IAAI,CAAC8E,KAAK,CAAC9E,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC/C,MAAMiC,YAAY,GAAGF,SAAS,CAACjF,SAAS,CAAC;gBAEzC,OAAO;kBACLV,IAAI,EAAE0F,QAAQ;kBACdjF,MAAM,EAAEoF,YAAY,CAAC7F,IAAI;kBACzBU,SAAS,EAAEA;gBACb,CAAC;cACH,CAAC,CAAC;cAEFgE,mBAAmB,CAACe,OAAO,CAAC;YAC9B;UACF,CAAC,EAAE,GAAG,CAAC;QACT;MACF,CAAC,EAAE,EAAE,CAAC;MAEN,OAAO,MAAMF,aAAa,CAACL,cAAc,CAAC;IAC5C;EACF,CAAC,EAAE,CAACzB,SAAS,EAAEgB,YAAY,EAAEC,mBAAmB,CAAC,CAAC;EAElD,oBACElF,OAAA;IAAKsG,SAAS,EAAC,qBAAqB;IAAAnD,QAAA,eAClCnD,OAAA,CAAClB,MAAM;MAACyH,OAAO;MAACC,MAAM,EAAE;QAAEtE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAAEuE,GAAG,EAAE;MAAG,CAAE;MAAAtD,QAAA,gBACxDnD,OAAA;QAAc0G,SAAS,EAAE;MAAI;QAAArD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCxD,OAAA;QACEkC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;QACvBwE,SAAS,EAAE,GAAI;QACf7B,UAAU;QACV,wBAAsB,IAAK;QAC3B,yBAAuB;MAAK;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFxD,OAAA,CAACnB,QAAQ;QAAC8H,QAAQ,EAAE,IAAK;QAAAxD,QAAA,eACvBnD,OAAA,CAACf,OAAO;UACN2H,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE;UACtBC,sBAAsB,EAAE;YAAEC,WAAW,EAAE;UAAI,CAAE;UAAA3D,QAAA,gBAE7CnD,OAAA,CAACgD,KAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAETxD,OAAA,CAAC6D,IAAI;YAAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAE;YAACT,QAAQ,EAAE,CAAC,CAAC,EAAE,CAACH,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC;UAAE;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5DxD,OAAA,CAAC6D,IAAI;YAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAE;YAACT,QAAQ,EAAE,CAAC,CAAC,EAAEH,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC;UAAE;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5DxD,OAAA,CAAC6D,IAAI;YAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE;YAACT,QAAQ,EAAE,CAAC,CAAC,EAAEH,IAAI,CAACC,EAAE,EAAE,CAAC;UAAE;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDxD,OAAA,CAAC6D,IAAI;YAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE;YAACT,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;UAAE;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAEnDyB,YAAY,CAACnE,GAAG,CAAC,CAACoF,QAAQ,EAAEa,KAAK,kBAChC/G,OAAA,CAACgE,YAAY;YAEXxD,IAAI,EAAE0F,QAAS;YACfjF,MAAM,EAAE,OAAQ,CAAC;YAAA;YACjBgD,SAAS,EAAEA,SAAU;YACrB/B,QAAQ,EAAE,CACR,CAAC6E,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,EACrB,CAAC,GAAGzF,IAAI,CAAC8E,KAAK,CAACW,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAC/B,CAAC;UACD,GARGA,KAAK;YAAA1D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;;AAED;AAAA2B,GAAA,CAzFMH,iBAAiB;AAAAgC,GAAA,GAAjBhC,iBAAiB;AA0FvB,MAAMiC,aAAa,GAAGA,CAAC;EAAEzG,IAAI;EAAES,MAAM;EAAEgD;AAAU,CAAC,KAAK;EAAAiD,GAAA;EACrD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1I,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM2I,uBAAuB,GAAGA,CAAA,KAAM;IACpCD,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEpH,OAAA;IAAKsG,SAAS,EAAE,yBAAyBrC,SAAS,IAAI,CAACkD,iBAAiB,GAAG,mBAAmB,GAAG,iBAAiB,EAAG;IAAAhE,QAAA,gBACnHnD,OAAA;MAAKsG,SAAS,EAAE,qBAAqB9F,IAAI,CAAC8G,WAAW,CAAC,CAAC,iBAAkB;MAAAnE,QAAA,eACvEnD,OAAA,CAAClB,MAAM;QAACyH,OAAO;QAACC,MAAM,EAAE;UAAEtE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAAEuE,GAAG,EAAE;QAAG,CAAE;QAAAtD,QAAA,gBACvDnD,OAAA;UAAc0G,SAAS,EAAE;QAAI;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCxD,OAAA;UACEkC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;UACvBwE,SAAS,EAAE,GAAI;UACf7B,UAAU;UACV,wBAAsB,IAAK;UAC3B,yBAAuB;QAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFxD,OAAA,CAACnB,QAAQ;UAAC8H,QAAQ,EAAE,IAAK;UAAAxD,QAAA,eACvBnD,OAAA,CAACf,OAAO;YACN2H,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE;YACtBC,sBAAsB,EAAE;cAAEC,WAAW,EAAE;YAAI,CAAE;YAAA3D,QAAA,gBAE7CnD,OAAA,CAACgD,KAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTxD,OAAA,CAAC6D,IAAI;cAAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAE;cAACT,QAAQ,EAAE,CAAC,CAAC,EAAE,CAACH,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC;YAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eAC7DxD,OAAA,CAAC6D,IAAI;cAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAE;cAACT,QAAQ,EAAE,CAAC,CAAC,EAAEH,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC;YAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eAC7DxD,OAAA,CAAC6D,IAAI;cAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE;cAACT,QAAQ,EAAE,CAAC,CAAC,EAAEH,IAAI,CAACC,EAAE,EAAE,CAAC;YAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eAC1DxD,OAAA,CAAC6D,IAAI;cAAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE;cAACT,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eACrDxD,OAAA,CAACgE,YAAY;cACXxD,IAAI,EAAEA,IAAK;cACXS,MAAM,EAAEA,MAAO;cACfgD,SAAS,EAAEA,SAAU;cACrB/B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNxD,OAAA;MAAKsG,SAAS,EAAE,qBAAqBtE,cAAc,CAACf,MAAM,CAAC,IAAIkG,iBAAiB,GAAG,aAAa,GAAG,EAAE,EAAG;MAAAhE,QAAA,GACrGlC,MAAM,KAAK,OAAO,IAAI,GAAG,EACzBA,MAAM,KAAK,SAAS,IAAI,GAAG,EAC3BA,MAAM,KAAK,WAAW,IAAI,KAAK;IAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA0D,GAAA,CAhDMD,aAAa;AAAAM,GAAA,GAAbN,aAAa;AAiDnB,MAAMO,IAAI,GAAGA,CAAC;EAAEhH,IAAI;EAAES,MAAM;EAAEgD;AAAU,CAAC,KAAK;EAC5C,oBAAOjE,OAAA,CAACiH,aAAa;IAACzG,IAAI,EAAEA,IAAK;IAACS,MAAM,EAAEA,MAAO;IAACgD,SAAS,EAAEA;EAAU;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;;AAED;AAAAiE,GAAA,GAJMD,IAAI;AAKV,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,CAACC,MAAM;EAC/D,MAAMC,WAAW,GAAGL,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,QAAQ,CAAC,CAACC,MAAM;EACrE,MAAME,UAAU,GAAGN,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,OAAO,CAAC,CAACC,MAAM;EAEnE,oBACE/H,OAAA;IAAKsG,SAAS,EAAC,uBAAuB;IAAAnD,QAAA,gBACpCnD,OAAA;MAAIsG,SAAS,EAAC,kBAAkB;MAAAnD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxD,OAAA;MAAKsG,SAAS,EAAC,qBAAqB;MAAAnD,QAAA,gBAClCnD,OAAA;QAAKsG,SAAS,EAAC,gBAAgB;QAAAnD,QAAA,gBAC7BnD,OAAA;UAAKsG,SAAS,EAAC;QAAqB;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3CxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAEyE;QAAQ;UAAAvE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNxD,OAAA;QAAKsG,SAAS,EAAC,gBAAgB;QAAAnD,QAAA,gBAC7BnD,OAAA;UAAKsG,SAAS,EAAC;QAAwB;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9CxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAE6E;QAAW;UAAA3E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNxD,OAAA;QAAKsG,SAAS,EAAC,gBAAgB;QAAAnD,QAAA,gBAC7BnD,OAAA;UAAKsG,SAAS,EAAC;QAAuB;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAE8E;QAAU;UAAA5E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnDxD,OAAA;UAAKsG,SAAS,EAAC,iBAAiB;UAAAnD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNxD,OAAA;MAAKsG,SAAS,EAAC,kCAAkC;MAAAnD,QAAA,GAAC,SAC9C,EAACwE,QAAQ,CAACI,MAAM,EAAC,qBACrB;IAAA;MAAA1E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA0E,GAAA,GAjCMR,cAAc;AAkCpB,SAASS,UAAUA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,oBAAA;EACjE;EACA,MAAM,CAACd,QAAQ,EAAEe,WAAW,CAAC,GAAGhK,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuG,YAAY,EAAE0D,eAAe,CAAC,GAAGjK,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkK,aAAa,EAAEC,gBAAgB,CAAC,GAAGnK,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoK,aAAa,EAAEC,gBAAgB,CAAC,GAAGrK,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACsK,eAAe,EAAEC,kBAAkB,CAAC,GAAGvK,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACuF,SAAS,EAAEiF,YAAY,CAAC,GAAGxK,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyK,MAAM,EAAEC,SAAS,CAAC,GAAG1K,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2K,WAAW,EAAEC,cAAc,CAAC,GAAG5K,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAAC6K,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9K,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACAC,SAAS,CAAC,MAAM;IACd,IAAI4J,QAAQ,IAAI,CAACZ,QAAQ,CAACI,MAAM,EAAE;MAChC;MACA,MAAM0B,eAAe,GAAG,CACtB,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B;MACDjB,WAAW,CAACe,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAAClB,QAAQ,EAAEZ,QAAQ,CAACI,MAAM,CAAC,CAAC;;EAE/B;EACA,MAAM6B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACxB,OAAO,IAAIA,OAAO,CAACL,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAEjD,oBACE/H,OAAA;MAAKsG,SAAS,EAAC,iBAAiB;MAAAnD,QAAA,gBAC9BnD,OAAA;QAAIsG,SAAS,EAAC,kBAAkB;QAAAnD,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCxD,OAAA;QAAKsG,SAAS,EAAC,kBAAkB;QAAAnD,QAAA,eAC/BnD,OAAA;UAAOsG,SAAS,EAAC,qBAAqB;UAAAnD,QAAA,gBACpCnD,OAAA;YAAAmD,QAAA,eACEnD,OAAA;cAAAmD,QAAA,gBACEnD,OAAA;gBAAAmD,QAAA,EAAI;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXxD,OAAA;gBAAAmD,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxD,OAAA;gBAAAmD,QAAA,EAAI;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRxD,OAAA;YAAAmD,QAAA,EACGiF,OAAO,CAACtH,GAAG,CAAC,CAAC+I,MAAM,EAAE9C,KAAK,kBACzB/G,OAAA;cAAgBsG,SAAS,EAAES,KAAK,KAAKsB,WAAW,GAAG,cAAc,GAAG,EAAG;cAAAlF,QAAA,gBACrEnD,OAAA;gBAAAmD,QAAA,EAAK4D,KAAK,GAAG;cAAC;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBxD,OAAA;gBAAAmD,QAAA,GACG0G,MAAM,CAACC,QAAQ,EACf/C,KAAK,KAAKsB,WAAW,iBAAIrI,OAAA;kBAAMsG,SAAS,EAAC,uBAAuB;kBAAAnD,QAAA,EAAC;gBAAC;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC,eACLxD,OAAA;gBAAAmD,QAAA,GAAK0G,MAAM,CAACE,KAAK,EAAC,KAAG,EAAC5J,aAAa;cAAA;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GANlCuD,KAAK;cAAA1D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAMwG,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;;IAEzB;IACAhB,YAAY,CAAC,IAAI,CAAC;IAElB,IAAIiB,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAErD;MACAL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,YAAY;QACpBL,MAAM;QACNM,WAAW,EAAE,IAAI,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLV,OAAO,CAACW,KAAK,CAAC,cAAc,CAAC;MAC7B1B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAM2B,kBAAkB,GAAI5E,OAAO,IAAK;IACtCgE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjE,OAAO,CAAC;;IAEnC;IACAiD,YAAY,CAAC,KAAK,CAAC;IACnBM,oBAAoB,CAAC,KAAK,CAAC;IAE3B,IAAI,CAACvD,OAAO,IAAIA,OAAO,CAAC8B,MAAM,KAAK,CAAC,EAAE;MACpC;MACA;IACF;;IAEA;IACAc,gBAAgB,CAAC5C,OAAO,CAAC;;IAEzB;IACA,IAAI6E,MAAM,GAAGhC,aAAa;IAC1B,IAAIiC,QAAQ,GAAG/B,eAAe;IAE9B/C,OAAO,CAAC+E,OAAO,CAAC/J,MAAM,IAAI;MACxB,IAAIA,MAAM,CAACA,MAAM,KAAK,OAAO,EAAE;QAC7B6J,MAAM,EAAE;MACV,CAAC,MAAM,IAAI7J,MAAM,CAACA,MAAM,KAAK,SAAS,EAAE;QACtC8J,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEFhC,gBAAgB,CAAC+B,MAAM,CAAC;IACxB7B,kBAAkB,CAAC8B,QAAQ,CAAC;;IAE5B;IACA,IAAIZ,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,gBAAgB;QACxBL,MAAM;QACNpE,OAAO;QACP6E,MAAM;QACNC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,aAAa,GAAGtC,aAAa,CAChCf,MAAM,CAAC5G,MAAM,IAAIA,MAAM,CAACA,MAAM,KAAK,WAAW,CAAC,CAC/CH,GAAG,CAACG,MAAM,IAAIA,MAAM,CAACT,IAAI,CAAC;;IAE7B;IACA,IAAI2J,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,cAAc;QACtBL,MAAM;QACNa;MACF,CAAC,CAAC;IACJ;;IAEA;IACArC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;;EAED;EACA,MAAMsC,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIhB,MAAM,CAACC,MAAM,EAAE;MACjB,MAAMC,MAAM,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrDL,MAAM,CAACC,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;QAC/BC,MAAM,EAAE,SAAS;QACjBL,MAAM;QACNN,KAAK,EAAEf,eAAe,IAAI,CAAC,GAAG,CAAC,GAAGF;MACpC,CAAC,CAAC;IACJ;;IAEA;IACAC,gBAAgB,CAAC,CAAC,CAAC;IACnBE,kBAAkB,CAAC,CAAC,CAAC;IACrBJ,gBAAgB,CAAC,EAAE,CAAC;IACpBF,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;;EAED;EACAhK,SAAS,CAAC,MAAM;IACd,IAAIwL,MAAM,CAACC,MAAM,EAAE;MACjB;MACA,MAAMgB,iBAAiB,GAAIC,IAAI,IAAK;QAClCpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmB,IAAI,CAAC;QAC5B/B,cAAc,CAAC,IAAI,CAAC;;QAEpB;QACA,IAAI+B,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAAC3D,QAAQ,EAAE;UAC7Ce,WAAW,CAAC2C,IAAI,CAACC,SAAS,CAAC3D,QAAQ,CAAC;QACtC;MACF,CAAC;;MAED;MACA,MAAM4D,iBAAiB,GAAIF,IAAI,IAAK;QAClCpB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEmB,IAAI,CAAC;QAC3B;QACA,IAAIA,IAAI,CAAC1D,QAAQ,IAAI+B,KAAK,CAAC8B,OAAO,CAACH,IAAI,CAAC1D,QAAQ,CAAC,EAAE;UACjDe,WAAW,CAAC2C,IAAI,CAAC1D,QAAQ,CAAC;QAC5B,CAAC,MAAM;UACL;UACA,MAAM8D,eAAe,GAAG,CACtB,GAAG/B,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,EACvB,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,EAC1B,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAC1B;UACDjB,WAAW,CAAC+C,eAAe,CAAC;QAC9B;QACA1C,gBAAgB,CAAC,CAAC,CAAC;QACnBE,kBAAkB,CAAC,CAAC,CAAC;MACvB,CAAC;;MAED;MACA,MAAMyC,kBAAkB,GAAIL,IAAI,IAAK;QACnCpB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEmB,IAAI,CAAC;QAE7B1C,eAAe,CAAC0C,IAAI,CAACpG,YAAY,IAAI,EAAE,CAAC;QACxCyD,WAAW,CAAC2C,IAAI,CAAC1D,QAAQ,IAAI,EAAE,CAAC;;QAEhC;QACA,IAAI0D,IAAI,CAACV,WAAW,EAAE;UACpBzB,YAAY,CAAC,IAAI,CAAC;UAClBM,oBAAoB,CAAC,IAAI,CAAC;QAC5B;MACF,CAAC;;MAED;MACA,MAAMmC,oBAAoB,GAAIN,IAAI,IAAK;QACrCpB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEmB,IAAI,CAAC;;QAEpC;QACA,IAAIA,IAAI,CAAC1D,QAAQ,EAAE;UACjBe,WAAW,CAAC2C,IAAI,CAAC1D,QAAQ,CAAC;QAC5B;;QAEA;QACA,IAAI0D,IAAI,CAACpF,OAAO,IAAIoF,IAAI,CAACpF,OAAO,CAAC8B,MAAM,GAAG,CAAC,EAAE;UAC3Cc,gBAAgB,CAACwC,IAAI,CAACpF,OAAO,CAAC;UAC9B;UACA,IAAI,CAACsC,QAAQ,EAAE;YACb;YACAW,YAAY,CAAC,KAAK,CAAC;YACnBM,oBAAoB,CAAC,KAAK,CAAC;UAC7B;QACF;QAEA,IAAI,CAACjB,QAAQ,EAAE;UACb;UACA,IAAI8C,IAAI,CAACP,MAAM,KAAKc,SAAS,EAAE;YAC7B7C,gBAAgB,CAACsC,IAAI,CAACP,MAAM,CAAC;UAC/B;UACA,IAAIO,IAAI,CAACN,QAAQ,KAAKa,SAAS,EAAE;YAC/B3C,kBAAkB,CAACoC,IAAI,CAACN,QAAQ,CAAC;UACnC;QACF;MACF,CAAC;;MAED;MACA,MAAMc,eAAe,GAAIR,IAAI,IAAK;QAChCpB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEmB,IAAI,CAAC;;QAE3B;QACAtC,gBAAgB,CAAC,CAAC,CAAC;QACnBE,kBAAkB,CAAC,CAAC,CAAC;QACrBJ,gBAAgB,CAAC,EAAE,CAAC;QACpBF,eAAe,CAAC,EAAE,CAAC;;QAEnB;QACA,IAAIL,SAAS,EAAE;UACbA,SAAS,CAAC+C,IAAI,CAACS,UAAU,CAAC;QAC5B;MACF,CAAC;;MAED;MACA,MAAMC,eAAe,GAAIV,IAAI,IAAK;QAChCpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmB,IAAI,CAAC;QAE5B,IAAIA,IAAI,CAAClC,MAAM,EAAE;UACfC,SAAS,CAACiC,IAAI,CAAClC,MAAM,CAAC;QACxB;MACF,CAAC;;MAED;MACA,MAAM6C,iBAAiB,GAAIX,IAAI,IAAK;QAClCpB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEmB,IAAI,CAAC;;QAEhC;QACA1C,eAAe,CAAC0C,IAAI,CAACpG,YAAY,IAAI,EAAE,CAAC;QACxCiE,YAAY,CAAC,IAAI,CAAC;QAClBM,oBAAoB,CAAC,IAAI,CAAC;;QAE1B;QACA,IAAI,CAACjB,QAAQ,EAAE;UACb;UACAvC,UAAU,CAAC,MAAM;YACf,IAAI/B,SAAS,EAAE;cACbiF,YAAY,CAAC,KAAK,CAAC;cACnBM,oBAAoB,CAAC,KAAK,CAAC;YAC7B;UACF,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;;MAED;MACAW,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,aAAa,EAAEb,iBAAiB,CAAC;MAClDjB,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,aAAa,EAAEV,iBAAiB,CAAC;MAClDpB,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,cAAc,EAAEP,kBAAkB,CAAC;MACpDvB,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,gBAAgB,EAAEN,oBAAoB,CAAC;MACxDxB,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,WAAW,EAAEJ,eAAe,CAAC;MAC9C1B,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,WAAW,EAAEF,eAAe,CAAC;MAC9C5B,MAAM,CAACC,MAAM,CAAC6B,EAAE,CAAC,aAAa,EAAED,iBAAiB,CAAC,CAAC,CAAC;;MAEpD;MACA,OAAO,MAAM;QACX7B,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,aAAa,EAAEd,iBAAiB,CAAC;QACnDjB,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,aAAa,EAAEX,iBAAiB,CAAC;QACnDpB,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,cAAc,EAAER,kBAAkB,CAAC;QACrDvB,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,gBAAgB,EAAEP,oBAAoB,CAAC;QACzDxB,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,WAAW,EAAEL,eAAe,CAAC;QAC/C1B,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,WAAW,EAAEH,eAAe,CAAC;QAC/C5B,MAAM,CAACC,MAAM,CAAC8B,GAAG,CAAC,aAAa,EAAEF,iBAAiB,CAAC,CAAC,CAAC;MACvD,CAAC;IACH;EACF,CAAC,EAAE,CAAC1D,SAAS,EAAEC,QAAQ,EAAEtE,SAAS,CAAC,CAAC;;EAEpC;EACA,oBACEjE,OAAA;IAAKsG,SAAS,EAAC,aAAa;IAAAnD,QAAA,GACzByG,gBAAgB,CAAC,CAAC,EAElBT,MAAM,gBACLnJ,OAAA;MAAKsG,SAAS,EAAC,iCAAiC;MAAAnD,QAAA,eAC9CnD,OAAA;QAAAmD,QAAA,GAAI,eAAG,EAACgG,MAAM,CAACW,QAAQ,EAAC,uEAAc;MAAA;QAAAzG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,gBAENxD,OAAA,CAAAE,SAAA;MAAAiD,QAAA,GACGoF,QAAQ,gBACPvI,OAAA,CAAAE,SAAA;QAAAiD,QAAA,gBACEnD,OAAA;UAAKsG,SAAS,EAAC,kBAAkB;UAAAnD,QAAA,eAC/BnD,OAAA;YAAIsG,SAAS,EAAC,mBAAmB;YAAAnD,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eAENxD,OAAA;UAAKsG,SAAS,EAAC,qBAAqB;UAAAnD,QAAA,eAClCnD,OAAA;YAAKsG,SAAS,EAAC,+BAA+B;YAAAnD,QAAA,gBAC5CnD,OAAA;cAAAmD,QAAA,GAAK,6BAAO,EAAC2F,aAAa;YAAA;cAAAzF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjCxD,OAAA;cAAAmD,QAAA,GAAK,6BAAO,EAAC6F,eAAe,EAAC,IAAE;YAAA;cAAA3F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL+F,iBAAiB,gBAChBvJ,OAAA;UAAKsG,SAAS,EAAC,+BAA+B;UAAAnD,QAAA,gBAC5CnD,OAAA;YAAIsG,SAAS,EAAC,aAAa;YAAAnD,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CxD,OAAA,CAACgF,iBAAiB;YAChBC,YAAY,EAAEA,YAAa;YAC3BhB,SAAS,EAAEA,SAAU;YACrBiB,mBAAmB,EAAE2F;UAAmB;YAAAxH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAENxD,OAAA;UAAKsG,SAAS,EAAC,gBAAgB;UAAAnD,QAAA,EAC5Bc,SAAS,gBACRjE,OAAA;YAAKsG,SAAS,EAAC,aAAa;YAAAnD,QAAA,eAC1BnD,OAAA;cAAAmD,QAAA,EAAG;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,GAENoF,aAAa,CAACb,MAAM,GAAG,CAAC,gBACtB/H,OAAA;YAAKsG,SAAS,EAAC,gBAAgB;YAAAnD,QAAA,gBAC7BnD,OAAA;cAAAmD,QAAA,EAAI;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBxD,OAAA;cAAKsG,SAAS,EAAC,wBAAwB;cAAAnD,QAAA,EACpCyF,aAAa,CAAC9H,GAAG,CAAC,CAACG,MAAM,EAAE8F,KAAK,kBAC/B/G,OAAA;gBAAiBsG,SAAS,EAAE,eAAerF,MAAM,CAACA,MAAM,CAACqG,WAAW,CAAC,CAAC,EAAG;gBAAAnE,QAAA,gBACvEnD,OAAA;kBAAKsG,SAAS,EAAE,aAAarF,MAAM,CAACT,IAAI,CAAC8G,WAAW,CAAC,CAAC;gBAAG;kBAAAjE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChExD,OAAA;kBAAKsG,SAAS,EAAC,WAAW;kBAAAnD,QAAA,GACvBlC,MAAM,CAACA,MAAM,KAAK,OAAO,IAAI,GAAG,EAChCA,MAAM,CAACA,MAAM,KAAK,SAAS,IAAI,GAAG,EAClCA,MAAM,CAACA,MAAM,KAAK,WAAW,IAAI,KAAK;gBAAA;kBAAAoC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC,CAAC;cAAA,GANEuD,KAAK;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAENxD,OAAA;YACEsG,SAAS,EAAC,wBAAwB;YAClC6F,OAAO,EAAEnC,UAAW;YACpBoC,QAAQ,EAAEnI,SAAU;YAAAd,QAAA,EACrB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAEX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA,eACD,CAAC,gBAEHxD,OAAA,CAAAE,SAAA;QAAAiD,QAAA,gBACEnD,OAAA;UAAKsG,SAAS,EAAC,kBAAkB;UAAAnD,QAAA,gBAC/BnD,OAAA;YAAAmD,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBxD,OAAA;YAAAmD,QAAA,IAAAsF,oBAAA,GAAIL,OAAO,CAACC,WAAW,CAAC,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBqB,QAAQ,EAAC,sFAAmB;UAAA;YAAAzG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAENxD,OAAA;UAAKsG,SAAS,EAAC,qBAAqB;UAAAnD,QAAA,eAClCnD,OAAA;YAAKsG,SAAS,EAAC,+BAA+B;YAAAnD,QAAA,gBAC5CnD,OAAA;cAAAmD,QAAA,GAAK,6BAAO,EAAC2F,aAAa;YAAA;cAAAzF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjCxD,OAAA;cAAAmD,QAAA,GAAK,6BAAO,EAAC6F,eAAe,EAAC,IAAE;YAAA;cAAA3F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL+F,iBAAiB,iBAChBvJ,OAAA;UAAKsG,SAAS,EAAC,+BAA+B;UAAAnD,QAAA,gBAC5CnD,OAAA;YAAIsG,SAAS,EAAC,aAAa;YAAAnD,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CxD,OAAA,CAACgF,iBAAiB;YAChBC,YAAY,EAAEA,YAAa;YAC3BhB,SAAS,EAAEA,SAAU;YACrBiB,mBAAmB,EAAE,IAAK,CAAC;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEAoF,aAAa,CAACb,MAAM,GAAG,CAAC,IAAI,CAAC9D,SAAS,IAAI,CAACsF,iBAAiB,iBAC3DvJ,OAAA;UAAKsG,SAAS,EAAC,gBAAgB;UAAAnD,QAAA,gBAC7BnD,OAAA;YAAAmD,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBxD,OAAA;YAAKsG,SAAS,EAAC,wBAAwB;YAAAnD,QAAA,EACpCyF,aAAa,CAAC9H,GAAG,CAAC,CAACG,MAAM,EAAE8F,KAAK,kBAC/B/G,OAAA;cAAiBsG,SAAS,EAAE,eAAerF,MAAM,CAACA,MAAM,CAACqG,WAAW,CAAC,CAAC,EAAG;cAAAnE,QAAA,gBACvEnD,OAAA;gBAAKsG,SAAS,EAAE,aAAarF,MAAM,CAACT,IAAI,CAAC8G,WAAW,CAAC,CAAC;cAAG;gBAAAjE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChExD,OAAA;gBAAKsG,SAAS,EAAC,WAAW;gBAAAnD,QAAA,GACvBlC,MAAM,CAACA,MAAM,KAAK,OAAO,IAAI,GAAG,EAChCA,MAAM,CAACA,MAAM,KAAK,SAAS,IAAI,GAAG,EAClCA,MAAM,CAACA,MAAM,KAAK,WAAW,IAAI,KAAK;cAAA;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA,GANEuD,KAAK;cAAA1D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA,eACD,CACH,EAEAoF,aAAa,CAACb,MAAM,GAAG,CAAC,IAAI,CAACoB,MAAM,IAAI,CAAClF,SAAS,IAAI,CAACsF,iBAAiB,IAAIhB,QAAQ,iBAClFvI,OAAA;QAAKsG,SAAS,EAAC,UAAU;QAAAnD,QAAA,gBACvBnD,OAAA;UACEsG,SAAS,EAAC,sBAAsB;UAChC6F,OAAO,EAAElB,cAAe;UACxBmB,QAAQ,EAAEpD,eAAe,IAAI,CAAE;UAAA7F,QAAA,EAChC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxD,OAAA;UACEsG,SAAS,EAAC,iBAAiB;UAC3B6F,OAAO,EAAEhB,UAAW;UAAAhI,QAAA,EAEnB6F,eAAe,IAAI,CAAC,GAAG,WAAW,GAAG;QAAK;UAAA3F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,EAEAwF,eAAe,IAAI,CAAC,iBACnBhJ,OAAA;QAAKsG,SAAS,EAAC,yBAAyB;QAAAnD,QAAA,gBACtCnD,OAAA;UAAAmD,QAAA,EAAQ;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,8JAC5B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,eAEDxD,OAAA,CAAC0H,cAAc;QAACC,QAAQ,EAAEA;MAAS;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACgF,GAAA,CAxcQL,UAAU;AAAAkE,GAAA,GAAVlE,UAAU;AA0cnB,eAAeA,UAAU;AAAC,IAAAvE,EAAA,EAAAG,GAAA,EAAAgB,GAAA,EAAAiC,GAAA,EAAAO,GAAA,EAAAE,GAAA,EAAAS,GAAA,EAAAmE,GAAA;AAAAC,YAAA,CAAA1I,EAAA;AAAA0I,YAAA,CAAAvI,GAAA;AAAAuI,YAAA,CAAAvH,GAAA;AAAAuH,YAAA,CAAAtF,GAAA;AAAAsF,YAAA,CAAA/E,GAAA;AAAA+E,YAAA,CAAA7E,GAAA;AAAA6E,YAAA,CAAApE,GAAA;AAAAoE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}